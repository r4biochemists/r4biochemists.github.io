[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "HPBBM",
    "section": "",
    "text": "There are only two kinds of programming languages: the ones people complain about and the ones nobody uses. —Bjarne Stroustrup"
  },
  {
    "objectID": "index.html#wellcome-disclaimer",
    "href": "index.html#wellcome-disclaimer",
    "title": "HPBBM",
    "section": "Wellcome & Disclaimer",
    "text": "Wellcome & Disclaimer\n\n\n\n\n\n\nUnder construction, note that it can be updated during the Course\n\n\n\n\n\n\n\n\n\n\nLogo generated with hexSticker package.1\n\n\n\nThis site contains the materials for the Coding tools for Biochemistry & Molecular Biology (in Spanish Herramientas de Programación para Bioquímica y Biología Molecular, a.k.a. HPBBM) course of fall 2024 in the Bachelor’s Degree in Biochemistry @UAM (Universidad Autónoma de Madrid, Spain). Source files are available at the  repo, containing the source files and the data used in the examples and exercises. The icon  on the top-right corner in all the site pages will allow you to download the repo data folder (link generated with DownGit). Note that this folder can be updated during the course. For reference, materials from 2023 and 2022 course editions are also available, although those are not updated or maintained anymore.\nCourse Syllabus can be checked at UAM site and a PDF version is available here. The course contains a first block of lessons on Python programming (Lessons 1-7) that is not included here. Detailed academic information about the course contents, dates, and assessment only can be found at the UAM Moodle site. In this site, the lessons pages have been generated as Quarto to obtain source files (.qmd) that contain formatted text and chunks of R code that are executed upon rendering (see lesson R7 for more info about Markdown and Quarto in RStudio).\n\n\n\n\n\n\nHow to use this site\n\n\n\nThese materials have been designed as an interactive and self-learning resource. As you go through the lessons, think about the code beforehand and then test it yourself with your computer. Then try out the exercises for yourself.\nFor further examples or additional help, you can consult the references and, of course, ask the lecturers in the meetings and lectures on site.\n\n\n\n\n\n\n\n\nUpdate R and RStudio\n\n\n\nAll the Lessons contain a final R Session info where you can see the used versions for R and all packages. Anyway, specially if you installed R in your computer for the first time some years ago, I kindly request to update R and RStudio before going forward.\nLet’s go, go it now!\n\n\nThe lessons also contain embedded interactive Quick exercises (created with packages WebR or webexercises). Try them out before checking the proposed solution. We have also included a final section of Review exercises, that we will discuss in the classroom. The answers to the latter are available in the repo. Also, we often add additional exercises from third-party websites or blogs that you can work on to improve your skills and reinforce some key concepts.\nAll this material is open access and it is shared under CC BY-NC license.\nThis page is under construction and will be expanded and corrected in the coming weeks. Any feedback, help and suggestions are very welcome.\nAlso, it is likely that you will find some typos or even major errors in these course materials. I and the future students would appreciate it if you let me know about anything that could be corrected or improved. You can reach us by email."
  },
  {
    "objectID": "index.html#bibliography-and-resources",
    "href": "index.html#bibliography-and-resources",
    "title": "HPBBM",
    "section": "Bibliography and Resources",
    "text": "Bibliography and Resources\nEach lesson contains its own specific references, but we wanted to highlight here some curated general open access and open source resources to introduce yourself into R and R Studio.\n\nGrolemund, G. Hands-on Programming in R.\nPeng, R. D. R Programming for Data Science.\nCoulatti, R. I. R Crash Course for Biologist.\nChang, W. R. R Graphics Cookbook.\nDoyle, M., Chung, J. & Perreau V. Introduction to R for Biologists.\nLearn R by example\nR base cheatsheet\nR programming 101 @YouTube\nHiggins, P. D. R. Reproducible Medical Research with R."
  },
  {
    "objectID": "index.html#contents",
    "href": "index.html#contents",
    "title": "HPBBM",
    "section": "Contents",
    "text": "Contents\n\nLesson R1: Variables, Operators and data structures in R\n\n\nLesson R2: Flow Control\n\n\nLesson R3: Data input and output in R\n\n\nLesson R4: Write your own functions\n\n\nLesson R5: Plots\n\n\nLesson R6: Data management\n\n\nLesson R7: R-projects and R-markdown for reproducible data analysis\n\n\nLesson R8: Advanced data plotting with ggplot\n\n\nLesson R9: Applications for Molecular Biology"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "HPBBM",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee the code in the script r_sticker.R in the repo.↩︎"
  },
  {
    "objectID": "r3.html",
    "href": "r3.html",
    "title": "R3: Read and write data in R",
    "section": "",
    "text": "As you already know, starting R starts an interactive session with keyboard input and screen output. You will almost always import your working data from a file. However, especially if you are working with very small datasets, it is also possible to add your data interactively directly in the console, as you did in some of the examples before. You can also define your objects and enter your data interactively using the scan() and readline() functions, as in the examples below. For output, you can simply call the object by its name or use the print() function, which displays the contents of the object on the screen. You can try the following code.1\n\nvector &lt;- scan(n = 4)\nvector2 &lt;- scan()\nstr &lt;- readline()\nvector\nprint(vector2)\nprint(str)\nedit(str)\n\nAlthough seldom used, you can also edit the contents of your objects using the function edit(). This function can be used to edit different objects, including vectors, strings, matrices or dataframes. MacOS users may need to install XQuartz X11 tool."
  },
  {
    "objectID": "r3.html#explore-a-dataframe",
    "href": "r3.html#explore-a-dataframe",
    "title": "R3: Read and write data in R",
    "section": "4.1 Explore a dataframe",
    "text": "4.1 Explore a dataframe\nAs you can see in the R help, the function read.table() has several default options as FALSE, like header=FALSE. When you have a spreadsheet export file, i.e. having a table where the fields are divided by commas in place of spaces, you can use read.csv() in place of read.table(). For Spaniards, there is also read.csv2(), which uses a comma for the decimal point and a semicolon for the separator. The latter functions are wrappers of read.table() with custom default options. Likewise, there are write.csv() and write.csv2(), which are wrappers of write.table().\n\n# Note differences between read.table(), read.csv() and\n# read.csv2()\ncoli_genomes &lt;- read.table(file = \"data/coli_genomes.csv\")\n\nError in scan(file = file, what = what, sep = sep, quote = quote, dec = dec, : line 2 did not have 11 elements\n\nhead(coli_genomes)\n\nError in eval(expr, envir, enclos): object 'coli_genomes' not found\n\ncoli_genomes &lt;- read.table(file = \"data/coli_genomes.csv\", sep = \";\",\n    dec = \".\", header = TRUE)\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes.csv\")\nhead(coli_genomes)\n\n  Strain.Biosample.Year.of.isolation.Source.Phylogroup.Serotype.Clonotype.Sequence.Type.VF.No..Plasmids.kmer.Contigs.N50.longest.contig..bp..total.assembled.bp.contigs...1kb\n1                                                                               LREC237;SAMN14278613;NA;Human ;D;ONT:H28;CH23-331;ST524;18;3;117;223;272287;662555;5341632;74\n2                                                                               LREC239;SAMN14278614;2010;Human ;C;O153:H19;CH4-25;ST88;14;3;117;159;323172;760527;5415613;57\n3                                                                              LREC240;SAMN14278615;2008;Human ;B1;O76:H30;CH29-38;ST156;10;2;89;114;270767;738861;4875343;47\n4                                                                                  LREC241;SAMN14278616;NA;Human;A;O78:H11;CH11-41;ST48;5;3;117;212;112160;285056;5167401;101\n5                                                                               LREC242;SAMN14278617;2011;Porcine ;A;ONT:HNM;CH7-54;ST746;5;9;89;320;45936;128053;4858138;212\n6                                                                               LREC243;SAMN14278618;2007;Porcine ;A;O9:H37;CH7-31;ST3011;7;3;93;158;106897;369508;4638334;93\n\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes.csv\", sep = \";\")\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\ncoli_genomes &lt;- read.csv2(file = \"data/coli_genomes.csv\")\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\n# read some data\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\ntail(coli_genomes, n = 2)\n\n    Strain    Biosample Year.of.isolation Source Phylogroup Serotype Clonotype\n24 LREC261 SAMN14278636              2016 Human           A  O98:H26   CH27-23\n25 LREC262 SAMN14278637              2012 Human          B1  O66:H10    CH4-32\n   Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n24        ST8233  2            4   89     114 187945              537848\n25        ST1049  4            2  113      94 325747              822206\n   total.assembled.bp contigs...1kb\n24            4821342            53\n25            4839344            32\n\ncoli_genomes[1, ]\n\n   Strain    Biosample Year.of.isolation Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA Human           D  ONT:H28  CH23-331\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n  total.assembled.bp contigs...1kb\n1            5341632            74\n\ncoli_genomes[, 1]\n\n [1] \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" \"LREC242\" \"LREC243\" \"LREC244\"\n [8] \"LREC245\" \"LREC246\" \"LREC247\" \"LREC248\" \"LREC249\" \"LREC250\" \"LREC251\"\n[15] \"LREC252\" \"LREC253\" \"LREC254\" \"LREC255\" \"LREC256\" \"LREC257\" \"LREC258\"\n[22] \"LREC259\" \"LREC260\" \"LREC261\" \"LREC262\"\n\ncoli_genomes[1:6, 2:4]\n\n     Biosample Year.of.isolation   Source\n1 SAMN14278613                NA   Human \n2 SAMN14278614              2010   Human \n3 SAMN14278615              2008   Human \n4 SAMN14278616                NA    Human\n5 SAMN14278617              2011 Porcine \n6 SAMN14278618              2007 Porcine \n\n# explore the dataframe structure\ndim(coli_genomes)\n\n[1] 25 16\n\nlength(coli_genomes)\n\n[1] 16\n\nncol(coli_genomes)\n\n[1] 16\n\nnrow(coli_genomes)\n\n[1] 25\n\n# dataframe estructure in one line\nstr(coli_genomes)\n\n'data.frame':   25 obs. of  16 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Year.of.isolation  : int  NA 2010 2008 NA 2011 2007 2006 2006 2010 2013 ...\n $ Source             : chr  \"Human \" \"Human \" \"Human \" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 10 22 ...\n $ No..Plasmids       : int  3 3 2 3 9 3 7 7 1 4 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 113 113 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 131 215 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 326769 248158 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 451887 504233 ...\n $ total.assembled.bp : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5173794 5364777 ...\n $ contigs...1kb      : int  74 57 47 101 212 93 155 114 56 76 ...\n\n# type of data in each variable\ntypeof(coli_genomes$Strain)\n\n[1] \"character\"\n\ntypeof(coli_genomes[, 2])\n\n[1] \"character\"\n\ntypeof(coli_genomes[, 9])\n\n[1] \"integer\"\n\n# col and row names\nnames(coli_genomes)\n\n [1] \"Strain\"              \"Biosample\"           \"Year.of.isolation\"  \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"No..Plasmids\"        \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"total.assembled.bp\" \n[16] \"contigs...1kb\"      \n\ncolnames(coli_genomes)\n\n [1] \"Strain\"              \"Biosample\"           \"Year.of.isolation\"  \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"No..Plasmids\"        \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"total.assembled.bp\" \n[16] \"contigs...1kb\"      \n\nrownames(coli_genomes)\n\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\"\n[16] \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\"\n\nnames(coli_genomes[3]) &lt;- \"Year\"\nnames(coli_genomes)[3] &lt;- \"Year\"\ncolnames(coli_genomes[3]) &lt;- \"Year\"\n\nSome of the columns include ‘chr’ data that may be actually a categorical variable, so we can code them as factor. Using the expression as.factor() you can check whether the data would correspond to a text or a categorical variable.\n\ncoli_genomes$Source &lt;- as.factor(coli_genomes$Source)\ncoli_genomes$Phylogroup &lt;- as.factor(coli_genomes$Phylogroup)\n\nstr(coli_genomes)  #dataframe estructure updated\n\n'data.frame':   25 obs. of  16 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2010 2013 ...\n $ Source             : Factor w/ 4 levels \"Avian \",\"Human\",..: 3 3 3 2 4 4 4 4 4 3 ...\n $ Phylogroup         : Factor w/ 4 levels \"A\",\"B1\",\"C\",\"D\": 4 3 2 1 1 1 1 1 3 4 ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 10 22 ...\n $ No..Plasmids       : int  3 3 2 3 9 3 7 7 1 4 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 113 113 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 131 215 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 326769 248158 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 451887 504233 ...\n $ total.assembled.bp : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5173794 5364777 ...\n $ contigs...1kb      : int  74 57 47 101 212 93 155 114 56 76 ...\n\n\nHow many levels are there in Source?? It is not uncommon to see some mistake in our data, usually made when the data were recorded, for example a space may have been inserted before a data value. By default this white space will be kept in the R environment, such that ‘Human’ will be recognized as a different value than ‘Human’. In order to avoid this type of error, we can use the strip.white argument.\n\nunique(coli_genomes$Source)\n\n[1] Human    Human    Porcine  Avian   \nLevels: Avian  Human Human  Porcine \n\ntable(coli_genomes$Source)\n\n\n  Avian     Human   Human  Porcine  \n       3        1       16        5 \n\ncoli_genomes &lt;- read.csv2(file = \"data/coli_genomes.csv\", strip.white = TRUE)\ncoli_genomes$Source &lt;- as.factor(coli_genomes$Source)\ncoli_genomes$Phylogroup &lt;- as.factor(coli_genomes$Phylogroup)\n\nunique(coli_genomes$Source)\n\n[1] Human   Porcine Avian  \nLevels: Avian Human Porcine\n\n\nWe can also rename some variables to use more easy names.\n\nnames(coli_genomes)  #see all variable names\n\n [1] \"Strain\"              \"Biosample\"           \"Year.of.isolation\"  \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"No..Plasmids\"        \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"total.assembled.bp\" \n[16] \"contigs...1kb\"      \n\n# rename variables\nnames(coli_genomes)[3] &lt;- \"Year\"\nnames(coli_genomes)[10] &lt;- \"Plasmids\"\nnames(coli_genomes)[15] &lt;- \"Assembly_length\"\nnames(coli_genomes)[16] &lt;- \"contigs1kb\"\n# check\nnames(coli_genomes)\n\n [1] \"Strain\"              \"Biosample\"           \"Year\"               \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"Plasmids\"            \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"Assembly_length\"    \n[16] \"contigs1kb\""
  },
  {
    "objectID": "r3.html#change-and-add-variables",
    "href": "r3.html#change-and-add-variables",
    "title": "R3: Read and write data in R",
    "section": "4.2 Change and add variables",
    "text": "4.2 Change and add variables\nWe are going to simplify our dataframe by dropping variables:\n\ncoli_genomes &lt;- coli_genomes[-c(9:11), ]\n# this can be also used to remove rows\ncoli_genomes[, -1]\n\n      Biosample Year  Source Phylogroup Serotype  Clonotype Sequence.Type VF\n1  SAMN14278613   NA   Human          D  ONT:H28   CH23-331         ST524 18\n2  SAMN14278614 2010   Human          C O153:H19     CH4-25          ST88 14\n3  SAMN14278615 2008   Human         B1  O76:H30    CH29-38         ST156 10\n4  SAMN14278616   NA   Human          A  O78:H11    CH11-41          ST48  5\n5  SAMN14278617 2011 Porcine          A  ONT:HNM     CH7-54         ST746  5\n6  SAMN14278618 2007 Porcine          A   O9:H37     CH7-31        ST3011  7\n7  SAMN14278619 2006 Porcine          A   O2:H32    CH11-23          ST10  4\n8  SAMN14278620 2006 Porcine          A  ONT:H45    C11-398       ST10888  2\n12 SAMN14278624 2013   Human          D O145:H28   CH23-331          ST32 22\n13 SAMN14278625 2013   Human          D O145:H28   CH23-331         ST137 22\n14 SAMN14278626 2013   Human          D O145:H28   CH23-331          ST32 20\n15 SAMN14278627 2013   Human          A  ONT:H37     C11-54          ST48  1\n16 SAMN14278628 2013   Avian          A  ONT:H19    CH94-23         ST347  2\n17 SAMN14278629 2011   Avian         B1 O142:H30     C41-35         ST359  9\n18 SAMN14278630 2005   Avian          C  O78:H19     CH4-27          ST88 11\n19 SAMN14278631 2012   Human          C   O8:H19     CH4-54          ST88 14\n20 SAMN14278632 2012   Human          C   O9:H19     CH4-27          ST88 14\n21 SAMN14278633 2012   Human          A    O9:H4     CH7-34          ST46  8\n22 SAMN14278634 2015   Human          C   O9:H19 CH4like-27       ST10890 13\n23 SAMN14278635 2012   Human          A  ONT:H33    CH11-54          ST10  2\n24 SAMN14278636 2016   Human          A  O98:H26    CH27-23        ST8233  2\n25 SAMN14278637 2012   Human         B1  O66:H10     CH4-32        ST1049  4\n   Plasmids kmer Contigs    N50 longest.contig..bp. Assembly_length contigs1kb\n1         3  117     223 272287              662555         5341632         74\n2         3  117     159 323172              760527         5415613         57\n3         2   89     114 270767              738861         4875343         47\n4         3  117     212 112160              285056         5167401        101\n5         9   89     320  45936              128053         4858138        212\n6         3   93     158 106897              369508         4638334         93\n7         7  115     277  89185              281444         5406295        155\n8         7  115     203  94368              280268         4796593        114\n12        1  115     376 200150              424527         5389075        131\n13        3  111     205 281589              617142         5340478         78\n14        1  113     206 182651              412836         5276782         95\n15        0  113     140 105396              272304         4507328         78\n16        0  117     134 110661              497785         4664768         77\n17        4  113     102 240847              460510         4992565         42\n18        4  113     108 405376             1190696         5196698         38\n19        2  113     108 281822             1140163         5252065         43\n20        4   91     224 140521              284241         5085107        110\n21        4   85     204  86565              300086         4915667        121\n22        3  113     171 326962              749412         5200701         77\n23        5  117     120 228491              576949         4881205         48\n24        4   89     114 187945              537848         4821342         53\n25        2  113      94 325747              822206         4839344         32\n\n\nWe know the ‘Assembly length’ and the number of ‘Contigs’, but we would like to represent the average contig length.\n\ncoli_genomes$average_contig &lt;- coli_genomes$Assembly_length/coli_genomes$Contigs"
  },
  {
    "objectID": "r3.html#dealing-with-nas",
    "href": "r3.html#dealing-with-nas",
    "title": "R3: Read and write data in R",
    "section": "4.3 Dealing with NAs",
    "text": "4.3 Dealing with NAs\nIt is very easy to calculate statistics of one variable. Imagine we want to know the average year of sample isolation.\n\nmean(coli_genomes$Year)\n\n[1] NA\n\n\nAs you may have guessed, the NA output means that there are some NA values and mean cannot be calculated. We can check that and omit the NAs.\n\n# check for NA values\nis.na(coli_genomes)\n\n   Strain Biosample  Year Source Phylogroup Serotype Clonotype Sequence.Type\n1   FALSE     FALSE  TRUE  FALSE      FALSE    FALSE     FALSE         FALSE\n2   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n3   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n4   FALSE     FALSE  TRUE  FALSE      FALSE    FALSE     FALSE         FALSE\n5   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n6   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n7   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n8   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n12  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n13  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n14  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n15  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n16  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n17  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n18  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n19  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n20  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n21  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n22  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n23  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n24  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n25  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n      VF Plasmids  kmer Contigs   N50 longest.contig..bp. Assembly_length\n1  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n2  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n3  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n4  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n5  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n6  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n7  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n8  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n12 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n13 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n14 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n15 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n16 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n17 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n18 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n19 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n20 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n21 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n22 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n23 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n24 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n25 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n   contigs1kb average_contig\n1       FALSE          FALSE\n2       FALSE          FALSE\n3       FALSE          FALSE\n4       FALSE          FALSE\n5       FALSE          FALSE\n6       FALSE          FALSE\n7       FALSE          FALSE\n8       FALSE          FALSE\n12      FALSE          FALSE\n13      FALSE          FALSE\n14      FALSE          FALSE\n15      FALSE          FALSE\n16      FALSE          FALSE\n17      FALSE          FALSE\n18      FALSE          FALSE\n19      FALSE          FALSE\n20      FALSE          FALSE\n21      FALSE          FALSE\n22      FALSE          FALSE\n23      FALSE          FALSE\n24      FALSE          FALSE\n25      FALSE          FALSE\n\n# how many NAs\ntable(is.na(coli_genomes))\n\n\nFALSE  TRUE \n  372     2 \n\n# alternative: check only NA-containing rows (a FALSE\n# output indicates an incomplete observation)\ncomplete.cases(coli_genomes)\n\n [1] FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n\n# na.rm=TRUE will omit the NAs for this function\nmean(coli_genomes$Year, na.rm = TRUE)\n\n[1] 2011\n\n\nWhat if we want to remove observations with an NA from the whole table?\n\n# create a new data.frame without NAs\ncoli_genomes2 &lt;- na.omit(coli_genomes)\n# can we now compute the mean without na.rm=T?\nmean(coli_genomes2$Year)\n\n[1] 2011\n\n\nIn fact, you can use na.omit() for any object, either an vector, data.frame or a list."
  },
  {
    "objectID": "r3.html#quick-exercise",
    "href": "r3.html#quick-exercise",
    "title": "R3: Read and write data in R",
    "section": "3.1 Quick exercise",
    "text": "3.1 Quick exercise\nLet’s see if you understood. Consider the following tree of directories.\n\nHow would you change de wd to the folder HPBBM2023/data and read the file small_matrix.csv?\nSelect the right answer\n\n setwd(“/data”) setwd(“/home/modesto/teaching/2023_2024/HPBBM2023/data”) setwd(“/Users/modesto/teaching/2023_2024/HPBBM2023/data”)\n\nYou can write any data object(s) as binary data file or as text files. Compare the different files saved in the code below.\n\nvector2 &lt;- c(3, 5:13)\nwrite(vector2, file = \"data/vector2.txt\")\nwrite.table(sm, \"data/sm.csv\")\nwrite.table(sm, \"data/sm2.csv\", row.names = FALSE, col.names = FALSE,\n    sep = \";\")\n\nsave(vector, vector2, file = \"data/vector2.Rdata\")\nsave.image(file = \"data/myEnvironment.RData\")\n\nData files in RData format can be open from the Environment tab or with the load() function\n\nsm_bis &lt;- load(\"data/vector2.Rdata\")\nsm_bis\n\n[1] \"vector\"  \"vector2\""
  },
  {
    "objectID": "r3.html#quick-exercise-i",
    "href": "r3.html#quick-exercise-i",
    "title": "R3: Read and write data in R",
    "section": "2.1 Quick exercise (I)",
    "text": "2.1 Quick exercise (I)\nLet’s see if you understood. Consider the following tree of directories.\n\nHow would you change de wd to the folder HPBBM2023/data? You also can try with your own computer and your directory tree.\nSelect the right answer\n\n setwd(“HPBBM2023/data”) setwd(“/home/modesto/Documents/teaching/2023_2024/HPBBM2023/data”) setwd(“/Users/modesto/teaching/Documents/2023_2024/HPBBM2023/data”)"
  },
  {
    "objectID": "r3.html#quick-exercise-ii",
    "href": "r3.html#quick-exercise-ii",
    "title": "R3: Read and write data in R",
    "section": "3.1 Quick exercise (II)",
    "text": "3.1 Quick exercise (II)\nWe are using the same directory tree. Your wd is HPBBM2022/data and you need to save a data.frame named table1 as table1.csv in the folder HPBBM2023/data using ; as separator. How would you do it without changing the working directory? Try it also with your own computer.\nSelect the right answer\n\n write.table(table1, “../../../teaching/HPBBM2023/data/table1.csv”, sep=“;”)  write.table(table1, “../../HPBBM2023/data/table1.csv”, sep=“;”)  write.table(table1, “../../../HPBBM2023/data/table1.csv”)"
  },
  {
    "objectID": "r3.html#quick-exercise-iii",
    "href": "r3.html#quick-exercise-iii",
    "title": "R3: Read and write data in R",
    "section": "4.4 Quick exercise (III)",
    "text": "4.4 Quick exercise (III)\nNow, we need to save the current version of coli_genomes in the data folder, using the , as field separator.\nWhich of the following functions can you use to save the dataframe using , as field separator? write.tablewrite.csv2write.csvsave\nHow would you do it?\nSelect the right answer\n\n write.table(coli_genomes, “data/coli_genomes_renamed.csv”, sep=“,” ) write.csv2(coli_genomes, “data/coli_genomes_renamed.csv” ) write.csv(coli_genomes, “../coli_genomes_renamed.csv”)  write.csv(coli_genomes, “data/coli_genomes_renamed.csv”)\n\n\n\n\nFinally, do save the new dataset in your folder for future examples.\n\nwrite.csv(coli_genomes, \"data/coli_genomes_renamed.csv\", row.names = FALSE)"
  },
  {
    "objectID": "r3.html#footnotes",
    "href": "r3.html#footnotes",
    "title": "R3: Read and write data in R",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSince it is interactive we cannot run it when we render the source file into a static web page. This can be prevented in markdown/quarto with the option `eval: false` in the chunk.↩︎\nCheck proposed answers in the repo: https://github.com/r4biochemists/r4biochemists.github.io/tree/main/answers2exercises↩︎"
  },
  {
    "objectID": "r4.html",
    "href": "r4.html",
    "title": "R4: Functions in R",
    "section": "",
    "text": "As you already know, R is a ‘GNU Software’ with a GPL license. As a a freely available language it has a great community of users from diverse background and interests. This community has developed a myriad of applications for R, called R Packages. The idea behind R packages is that the chances are that someone has already solved a problem that you’re working on, and you can benefit from their work by downloading their package.\n\n\n\n\n\n\nImportant\n\n\n\nPackages are the basic units of reproducible R code. They contain reusable R functions, the documentation that describes how to use them (help), and some sample data to run tests.\nWith RStudio you can create your own packages to automate very frequent analyses: https://support.posit.co/hc/en-us/articles/200486488-Developing-Packages-with-the-RStudio-IDE\n\n\nPackages can be installed from one of the public R repositories. In this course we will mainly use two R repos, CRAN and Bioconductor. CRAN stands for “the Comprehensive R Archive Network”, and contains a large selection of packages that can be used free of charge. You can find a complete list of CRAN packages here and a list sorted by topic here.\nAs we will see in more detail later in the Lesson R9, Bioconductor is a repository of software for bioinformatics or computational biology applications. As of August 2024, the CRAN package repository contains 21,127 packages, while Bioconductor version 3.19 contains 2,300 packages.\nR packages in CRAN and Bioconductor are reviewed, although they may stop working after R updates. Also, you can often find new (unverified) packages on GitHub, GitLab, Bitbucket or in other repositories. You can install these non-guaranteed packages with the devtools package (on your own responsability).\n\n\nAs an example, we are going to install and use xlsx, a handy package to import/export tables in MS Excel format. You may also check related packages, such as readxl or pzfx.\n\n# install the package\n\ninstall.packages(\"xlsx\", repos = \"https://cran.rstudio.com/\")\n# CRAN is the repository by default but it can be\n# optionally indicated\n\n\n\n\n\n\n\nPackage requirements\n\n\n\nSome R packages may have additional requirements. This is something that is not very common and is outside of R or RStudio, as it depends on how the package was developed. Therefore, there is no general rule or recommendation here.\nAfter testing with students in class, I realized that the xlsx package requires the path of your Java executable. There are a few ways you could fix it, but my suggestion would be to use a package that does not have depend on Java. Now that you know how to install and load packages, you can also try other packages for reading and writing XLS files, such as openxlsx or readxl.\n\n\nYou must load the package before using it.\n\n# two ways of loading the packages:\n\n# 1\nlibrary(xlsx)\n# 2\nrequire(xlsx)\n\n# help\nhelp(xlsx)\n# you can also write in the console ??xlsx\n\n# you can use an if statement to install package only if\n# not installed\nif (!require(xlsx)) {\n    install.packages(\"xlsx\")\n    library(xlsx)\n}\n# unload the package (optionally)\ndetach(\"package:xlsx\", unload = TRUE)\n\nOptionally, if you want to unload a package from memory, you can use detach(). This can be useful for long scripts.\nIn the above code we have used require() and library() functions to call for package loading. These are very similar functions that are often interchangeable. The main difference is that when you use require() and it cannot be executed, you will get a warning (see below for how to use warning), but not an error. Therefore, your code will always continue to execute if possible. In the following example, we tried to load an unknown package called uam.\n\nlibrary(uam)\n\nError in library(uam): there is no package called 'uam'\n\nrequire(uam)\n\nLoading required package: uam\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'uam'\n\n\nIn the next example, we are going to read the file coli_genomes_renamed.csv, that we used in the lesson R3 and export it ready for MS Excel using the package xlsx.\n\n\n\n\n\n\nCross-lesson tip\n\n\n\nIf you have not worked with the R3 lesson yet, you can take a quick look at how we can open and save a table in R.\n\n\n\n# open it again\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes_renamed.csv\")\n# save\nlibrary(xlsx)\nwrite.xlsx(coli_genomes, \"data/coli_genomes.xlsx\")\n\nMany packages in CRAN also contain a reference manual and some of them also a vignette. A vignette is practical guide to each package. You can see all the installed vignettes with browseVignettes() or just vignette() for the primary vignette. You can find a bunch of tutorials and tricks about how to use popular packages, but the vignette is an official and complete reference that is always helpful.\n\nbrowseVignettes(\"xlsx\")\n\nstarting httpd help server ... done\n\nbrowseVignettes(\"seqinr\")\n\nNo vignettes found by browseVignettes(\"seqinr\")\n\nbrowseVignettes(\"ggplot2\")\n\nNote that in some cases, as in the package seqinr, there is no official vignette at CRAN. However, as R is an open access language, you will easily find information about any package or function in other websites, such as rdrr.io, rdocumentation.org or stackoverflow.com, among others.\n\n\n\nAs there are a lot of packages sometimes it takes some time to test different packages for the same analysis. Also, some packages become obsolete with a new R or RStudio version. Thus, is also a good habit to uninstall packages, with the function remove.packages().\nSometimes, you can come into two different namesake functions from independent packages. Also, to reduce the memory load you may want to use a function without loading the package. In those cases, as in the examples below, there is a trick to call a specific function, the prefix package::. However, it should be noted that in some packages the syntax is complex and you need to call more than one function to actually use a major function.\n\n# package getwiki\ninstall.packages(\"getwiki\")\n\nError in contrib.url(repos, \"source\"): trying to use CRAN without setting a mirror\n\nvignette(\"getwiki\")\nDNA &lt;- getwiki::search_wiki(\"DNA\")\nstr(DNA)\n\n'data.frame':   20 obs. of  2 variables:\n $ titles : chr  \"A-DNA\" \"Circular DNA\" \"DNA\" \"DNA (disambiguation)\" ...\n $ content: chr  \"A-DNA is one of the possible double helical structures which DNA can adopt. A-DNA is thought to be one of three\"| __truncated__ \"Circular DNA is DNA that forms a closed loop and has no ends.  Examples include:Plasmids, mobile genetic elemen\"| __truncated__ \"Deoxyribonucleic acid ( ; DNA) is a polymer composed of two polynucleotide chains that coil around each other t\"| __truncated__ \"DNA (deoxyribonucleic acid) is a molecule encoding the genetic instructions for life.DNA may also refer to:\" ...\n\nDNA$titles\n\n [1] \"A-DNA\"                 \"Circular DNA\"          \"DNA\"                  \n [4] \"DNA (disambiguation)\"  \"DNA Oyj\"               \"DNA extraction\"       \n [7] \"DNA ligase\"            \"DNA methylation\"       \"DNA polymerase\"       \n[10] \"DNA profiling\"         \"DNA repair\"            \"DNA replication\"      \n[13] \"DNA sequencing\"        \"DNA virus\"             \"DNA²\"                 \n[16] \"DNA–DNA hybridization\" \"DnaA\"                  \"Mitochondrial DNA\"    \n[19] \"Mutation\"              \"Recombinant DNA\"      \n\n\n\n\n\nIn the four examples below, you will see that ggplot() function can be used if you call the package with the prefix ggplot::. However, to make a plot you need several functions and you need to either explicit the prefix for all the required functions (option #3) or load the package, as in #4. Check the Lesson R7 for more info on ggplotting.\n\n# package ggplot2 1: no package load or calling with prefix\nggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +\n    geom_point()\n\nError in ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)): could not find function \"ggplot\"\n\n# 2: call the package with the prefix at the begining of\n# the line\nggplot2::ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +\n    geom_point()\n\nError in aes(Petal.Length, Petal.Width, colour = Species): could not find function \"aes\"\n\n# 3: prefix in all functions\nggplot2::ggplot(iris, ggplot2::aes(Petal.Length, Petal.Width,\n    colour = Species)) + ggplot2::geom_point()\n\n\n\n\n\n\n\n# 4: load the package\nlibrary(ggplot2)\nggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +\n    geom_point()\n\n\n\n\n\n\n\n\nNote that in the example we have plotted some data from the dataset named iris. Did you load that data? No need. As we mentioned in the R3 Lesson, R has some built-in datasets that can be used as examples for plots or analysis. You can check all of them using the function data().\n\n\n\n\nInstall the package report and check its vignette and the info at the package site: https://easystats.github.io/report/\n\n\n\n\nSee an answer\n\ninstall.packages(\"report\")\n\nError in contrib.url(repos, \"source\"): trying to use CRAN without setting a mirror\n\nlibrary(report)\n\n# look for the vignette\nvignette(report)\n\nError in topic[1L]: object of type 'closure' is not subsettable\n\n# no vignette for report! Check also the CRAN site for\n# further documentation.\n\n\n\nAnother R built-in dataset is called DNase and it contains data of several experiments of DNase treatment. Explore data and use the report package (documentation) to test correlation between the DNase variables conc and density.\n\n\n\n\nSee an answer\n\nreport(DNase)\n\nThe data contains 176 observations of the following 3 variables:\n\n  - Run: 11 levels, namely 10 (n = 16, 9.09%), 11 (n = 16, 9.09%), 9 (n = 16,\n9.09%), 1 (n = 16, 9.09%), 4 (n = 16, 9.09%), 8 (n = 16, 9.09%), 5 (n = 16,\n9.09%), 7 (n = 16, 9.09%), 6 (n = 16, 9.09%), 2 (n = 16, 9.09%) and 3 (n = 16,\n9.09%)\n  - conc: n = 176, Mean = 3.11, SD = 4.06, Median = 1.17, MAD = 1.56, range:\n[0.05, 12.50], Skewness = 1.46, Kurtosis = 0.84, 0% missing\n  - density: n = 176, Mean = 0.72, SD = 0.60, Median = 0.53, MAD = 0.62, range:\n[0.01, 2.00], Skewness = 0.58, Kurtosis = -1.07, 0% missing\n\nreport(cor.test(DNase$conc, DNase$density))\n\nEffect sizes were labelled following Funder's (2019) recommendations.\n\nThe Pearson's product-moment correlation between DNase$conc and DNase$density\nis positive, statistically significant, and very large (r = 0.93, 95% CI [0.91,\n0.95], t(174) = 33.64, p &lt; .001)"
  },
  {
    "objectID": "r4.html#installing-and-use-r-packages",
    "href": "r4.html#installing-and-use-r-packages",
    "title": "R4: Functions in R",
    "section": "",
    "text": "As an example, we are going to install and use xlsx, a handy package to import/export tables in MS Excel format. You may also check related packages, such as readxl or pzfx.\n\n# install the package\n\ninstall.packages(\"xlsx\", repos = \"https://cran.rstudio.com/\")\n# CRAN is the repository by default but it can be\n# optionally indicated\n\n\n\n\n\n\n\nPackage requirements\n\n\n\nSome R packages may have additional requirements. This is something that is not very common and is outside of R or RStudio, as it depends on how the package was developed. Therefore, there is no general rule or recommendation here.\nAfter testing with students in class, I realized that the xlsx package requires the path of your Java executable. There are a few ways you could fix it, but my suggestion would be to use a package that does not have depend on Java. Now that you know how to install and load packages, you can also try other packages for reading and writing XLS files, such as openxlsx or readxl.\n\n\nYou must load the package before using it.\n\n# two ways of loading the packages:\n\n# 1\nlibrary(xlsx)\n# 2\nrequire(xlsx)\n\n# help\nhelp(xlsx)\n# you can also write in the console ??xlsx\n\n# you can use an if statement to install package only if\n# not installed\nif (!require(xlsx)) {\n    install.packages(\"xlsx\")\n    library(xlsx)\n}\n# unload the package (optionally)\ndetach(\"package:xlsx\", unload = TRUE)\n\nOptionally, if you want to unload a package from memory, you can use detach(). This can be useful for long scripts.\nIn the above code we have used require() and library() functions to call for package loading. These are very similar functions that are often interchangeable. The main difference is that when you use require() and it cannot be executed, you will get a warning (see below for how to use warning), but not an error. Therefore, your code will always continue to execute if possible. In the following example, we tried to load an unknown package called uam.\n\nlibrary(uam)\n\nError in library(uam): there is no package called 'uam'\n\nrequire(uam)\n\nLoading required package: uam\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'uam'\n\n\nIn the next example, we are going to read the file coli_genomes_renamed.csv, that we used in the lesson R3 and export it ready for MS Excel using the package xlsx.\n\n\n\n\n\n\nCross-lesson tip\n\n\n\nIf you have not worked with the R3 lesson yet, you can take a quick look at how we can open and save a table in R.\n\n\n\n# open it again\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes_renamed.csv\")\n# save\nlibrary(xlsx)\nwrite.xlsx(coli_genomes, \"data/coli_genomes.xlsx\")\n\nMany packages in CRAN also contain a reference manual and some of them also a vignette. A vignette is practical guide to each package. You can see all the installed vignettes with browseVignettes() or just vignette() for the primary vignette. You can find a bunch of tutorials and tricks about how to use popular packages, but the vignette is an official and complete reference that is always helpful.\n\nbrowseVignettes(\"xlsx\")\n\nstarting httpd help server ... done\n\nbrowseVignettes(\"seqinr\")\n\nNo vignettes found by browseVignettes(\"seqinr\")\n\nbrowseVignettes(\"ggplot2\")\n\nNote that in some cases, as in the package seqinr, there is no official vignette at CRAN. However, as R is an open access language, you will easily find information about any package or function in other websites, such as rdrr.io, rdocumentation.org or stackoverflow.com, among others."
  },
  {
    "objectID": "r4.html#why-how",
    "href": "r4.html#why-how",
    "title": "R4: Functions in R",
    "section": "2.1 Why? How?",
    "text": "2.1 Why? How?\nWe have discussed throughout the previous lessons how R can help you saving time when you need to analyze and plot the data from your experiment. However, many times, particularly in Bioinformatics, you won’t have the data from one single experiment but from many of them.\nCreating you own function will be very useful for automation of repetitive analyses or to encapsulate a sequence of expressions that need to be executed numerous times, perhaps under slightly different conditions. Functions are used in most programming languages as separated instructions for specific tasks.\nBreaking out our code into independent functions has several advantages:\n\nWhen building or maintaining the function, we can focus just on that function: what information it needs, what steps it performs, and what result it provides.\nWe can simplify the main set of instructions, making it easier to read and maintain over time.\nIt helps us separate work for a team, assigning each independent function to a member of the team and then just interconnect the functions later on.\nAnd we can more easily reuse the function in multiple places in one script or copy it to reuse in other projects.\n\nIn R, functions are also considered as objects. That means that (1) they can be nested, so you can define a function inside another function and (2) you can use functions as arguments to other functions. We will see very useful examples of this latter feature in Lesson R6, using custom functions as arguments for aggregate(), xtabs(), lapply() or sapply().\nThe overall scheme of an R function is the following:\nmy_function &lt;- function(argument1, argument2,...){\n  statements\n  return(object)\n  }"
  },
  {
    "objectID": "r4.html#my-first-simple-functions",
    "href": "r4.html#my-first-simple-functions",
    "title": "R4: Functions in R",
    "section": "2.2 My first simple functions",
    "text": "2.2 My first simple functions\nWe are going to learn with some examples from a good online tutorial. First, a quite simple function can simply help with calculations:\n\n# my first function\nmyFunction &lt;- function(x) {\n    f &lt;- x^2 * 4 + x/3\n    return(f)\n}\n# we try it\nmyFunction(4)\n\n[1] 65.33333\n\nmyFunction(0)\n\n[1] 0\n\nmyFunction(22)\n\n[1] 1943.333\n\nmyFunction(3)\n\n[1] 37\n\n\nWe can include conditions, loops… Another example can be a function to identify even/odd numbers:\n\n# A simple R function to check whether x is even or odd\nevenOdd &lt;- function(x) {\n    if (x%%2 == 0) {\n        return(\"even\")\n    } else {\n        return(\"odd\")\n    }\n}\n# test\nevenOdd(4)\n\n[1] \"even\"\n\nevenOdd(3)\n\n[1] \"odd\"\n\n# sometimes you can omit curly braces\nevenOdd2 &lt;- function(x) {\n    if (x%%2 == 0)\n        return(\"even\") else return(\"odd\")\n}\nevenOdd2(4)\n\n[1] \"even\"\n\nevenOdd2(3)\n\n[1] \"odd\"\n\nevenOdd2(7)\n\n[1] \"odd\"\n\nevenOdd2(8)\n\n[1] \"even\"\n\n\nIn the above example, we found out that curly braces can be omitted sometimes in if statements or loops (see https://www.learnbyexample.org/r-for-loop/#for-loop-without-curly-braces). This modification makes the code handier, but also riskier, use it carefully. Remember, a great power entails a great responsibility. The same applies to functions. Thus, sometimes when creating an R script, you want to create a small function and use it just once. That happens usually when you want to use your own functions to parse data within an apply family function (see Lesson R6). To deal with those situations, you can use the inline function. To create an inline function you have to use the function command with the argument x and then the expression of the function.\nExample:\n\n# inline functions\nf &lt;- function(x) x^2 * 4 + x/3\n\nf(4)\n\n[1] 65.33333\n\nf(0)\n\n[1] 0\n\nf(22)\n\n[1] 1943.333"
  },
  {
    "objectID": "r4.html#functions-with-multiple-arguments",
    "href": "r4.html#functions-with-multiple-arguments",
    "title": "R4: Functions in R",
    "section": "2.4 Functions with multiple arguments",
    "text": "2.4 Functions with multiple arguments\nNow, we will create a function in R Language that will take multiple inputs and gives us one output.\n\n# A simple R function to calculate area and perimeter of a\n# rectangle\n\narea &lt;- function(length, width) {\n    area = length * width\n    # you may format the output\n    print(paste(\"The area of the rectangle is\", length, \"x\",\n        width, \"=\", area, \"cm²\"))\n}\n\narea(2, 3)  # call the function\n\n[1] \"The area of the rectangle is 2 x 3 = 6 cm²\"\n\n\nNotice that the output also can be a different type of object, like vector or a list:\n\n# Now we calculate area and perimeter of a rectangle\n\n\nRectangle &lt;- function(length, width) {\n    area = length * width\n    perimeter = 2 * (length + width)\n\n    # create an object called result which is a list of\n    # area and perimeter\n    result = list(Area = area, Perimeter = perimeter)\n    return(result)\n}\n\nRectangle(2, 3)\n\n$Area\n[1] 6\n\n$Perimeter\n[1] 10\n\n\nLike in any R function, you can call the arguments by position or by name. Thus, if add the names of the variables when calling the function you can switch the order of the arguments. Also, you can add some default values when you define the function.\n\n# A simple R code to demonstrate passing arguments to a\n# function\n\nRectangle &lt;- function(length = 5, width = 4) {\n    area = length * width\n    return(area)\n}\n\n# Case 1:\nRectangle(2, 3)\n\n[1] 6\n\n# Case 2: If you do not want to follow any order, you can\n# include the name of the arguments\nRectangle(width = 8, length = 4)\n\n[1] 32\n\n# Case 3: default's values\nRectangle()\n\n[1] 20"
  },
  {
    "objectID": "r4.html#including-checkpoints",
    "href": "r4.html#including-checkpoints",
    "title": "R4: Functions in R",
    "section": "2.6 Including checkpoints",
    "text": "2.6 Including checkpoints\nNow we are going to try a longer code to solve a more complex example.\n\nHow many arguments should have this function? \nNow let’s see a possible way to do it:\n\n# we need to arguments\nprice_calculator &lt;- function(samples, category) {\n    categories &lt;- c(1, 1.15, 2)\n    names(categories) = c(\"normal\", \"priority\", \"urgent\")\n    if (samples &lt; 10) {\n        price &lt;- 19 * samples * categories[which(names(categories) ==\n            category)]\n    } else if (samples &lt; 50) {\n        price &lt;- 14 * samples * categories[which(names(categories) ==\n            category)]\n    } else if (samples &gt;= 50) {\n        price &lt;- 10 * samples * categories[which(names(categories) ==\n            category)]\n    }\n    paste(\"El precio es de\", price, \"euros.\")\n}\nprice_calculator(samples = 10, category = \"normal\")\n\n[1] \"El precio es de 140 euros.\"\n\nprice_calculator(10, \"urgent\")\n\n[1] \"El precio es de 280 euros.\"\n\nprice_calculator(10, \"urgnt\")\n\n[1] \"El precio es de  euros.\"\n\n\n\n\n\n\n\n\nUse of Which and Switch\n\n\n\nNote that which() gives you a vector with the index or indices of the vector, not the actual values. That’s why we are using categories[] to get the desired subset; in this case, the value of the vector element that fulfills the condition specified by which.\nIn the following example, we have used a more direct approach. We have simply swapped the strings (“normal”, “priority” and “urgent”) for the numeric values by using the switch() function. You can find more examples of using switch() in this link.\n\n\nIt seems to work, but wrong data inputs are not recognized. How can we introduce checkpoints for the input arguments to prevent unwanted output?\n\n# new version with checkpoints\nprice_calculator2 &lt;- function(samples, category = \"normal\" |\n    \"priority\" | \"urgent\") {\n    category &lt;- switch(category, normal = 1, priority = 1.15,\n        urgent = 2)\n    if (samples &lt; 10) {\n        price &lt;- 19 * samples * category\n    } else if (samples &lt; 50) {\n        price &lt;- 14 * samples * category\n    } else if (samples &gt;= 50) {\n        price &lt;- 10 * samples * category\n    }\n    ifelse(length(price) &gt; 0, return(price), stop(\"Prioridad incorecta. No se ha podido calcular el precio\"))\n}\nprice_calculator2(10, \"normal\")\n\n[1] 140\n\nprice_calculator2(10, \"urgent\")\n\n[1] 280\n\nprice_calculator2(10, \"urgnt\")\n\nError in ifelse(length(price) &gt; 0, return(price), stop(\"Prioridad incorecta. No se ha podido calcular el precio\")): Prioridad incorecta. No se ha podido calcular el precio\n\nprice_calculator2(5.3, \"normal\")\n\n[1] 100.7\n\n# WTF?\n\nWe just noticed that the function calculated the price for 5.3 samples, which is nonsense. We should then introduce a new checkpoint for the format of the introduced value for the variable samples.\n\n# alternative with checkpoint for number of samples\nprice_calculator3 &lt;- function(samples, category = \"normal\" |\n    \"priority\" | \"urgent\") {\n    category &lt;- switch(category, normal = 1, priority = 1.15,\n        urgent = 2)\n    if (abs(floor(samples)) != samples) {\n        # check that number of samples is an integer number\n        stop(\"Número de muestras incorrecto\")\n    }\n    if (samples &lt; 10) {\n        price &lt;- 19 * samples * category\n    } else if (samples &lt; 50) {\n        price &lt;- 14 * samples * category\n    } else if (samples &gt;= 50) {\n        price &lt;- 10 * samples * category\n    }\n    ifelse(length(price) &gt; 0, return(price), stop(\"Prioridad incorecta. No se ha podido calcular el precio\"))\n}\n\n# test again\nprice_calculator3(50, \"urgente\")\n\nError in ifelse(length(price) &gt; 0, return(price), stop(\"Prioridad incorecta. No se ha podido calcular el precio\")): Prioridad incorecta. No se ha podido calcular el precio\n\nprice_calculator3(50, \"urgent\")\n\n[1] 1000\n\nprice_calculator3(-5, \"normal\")\n\nError in price_calculator3(-5, \"normal\"): Número de muestras incorrecto\n\nprice_calculator3(5.2, \"normal\")\n\nError in price_calculator3(5.2, \"normal\"): Número de muestras incorrecto"
  },
  {
    "objectID": "r4.html#exercise",
    "href": "r4.html#exercise",
    "title": "R4: Functions in R",
    "section": "2.5 Exercise",
    "text": "2.5 Exercise\nWhen creating functions, you can include any R functionality, including reading and parsing external data files. Let’s do a short exercise, within the context of molecular biology.\nCan you write a function that convert R into a molecular biology dogma interpreter. You can use the table genetic_code.csv, located in the data folder that contains the conversion between all the nucleic acid sequence codons and its encoded amino acid in IUPAC one letter code. Try it with some examples, including right and wrong codons, like “ATG”, “TAA”, “CAT”, or “AXG”.\n\n\n\nSee an answer\n\n# the molecular biology dogma with R\n\ncodon2aa &lt;- function(inputCodon) {\n    code &lt;- read.csv2(\"data/genetic_code.csv\", stringsAsFactors = FALSE)\n    aa &lt;- code$AA[code$Codon == inputCodon]\n    return(aa)\n}\n# now let's try it\ncodon2aa(\"ATG\")\ncodon2aa(\"TAA\")\ncodon2aa(\"CAT\")\ncodon2aa(\"AXG\")\n\n\nCan you also check the value of the variable aa ?\n\n#'aa'??\nprint(aa)\n\nError in eval(expr, envir, enclos): object 'aa' not found\n\n\nWhat just happened? There are a few things worth to comment here:\n\nIf the function cannot find the right value to return, the output is empty: character(0)\nThe variable aa seems nonexistent! Variables defined in a function are only local variables and cannot be called outside the function.\n\nHowever, proteins are made up of more than one amino acid, so it’d be great if the input could be a vector of several codons instead a single codon.\nCan you add checkpoints and decide how to handle errors?\n\n\n\nSee an answer\n\n# version 2\n\ncodon2aa_2 &lt;- function(codons) {\n    aa &lt;- c()\n    code &lt;- read.csv2(\"data/genetic_code.csv\", stringsAsFactors = FALSE)\n    for (i in 1:length(codons)) {\n        # loop over all the elements of the vector 'codons'\n        stopifnot(`Uno o más de los codones no es correcto. No se ha podido traducir ;)` = codons[i] %in%\n            code$Codon)  #check for correct values\n        aa[i] &lt;- code$AA[code$Codon == codons[i]]\n    }\n    return(aa)\n}\n\n# let's try it\ncodon2aa_2(c(\"ATG\", \"TGA\"))\ncodon2aa_2(c(\"ARG\", \"TGA\"))\ncodon2aa_2(c(\"ATG\", \"CAT\", \"CAT\", \"AAA\", \"TAA\"))\n\n\nIn this second example, aa is not a numeric variable (=vector of 1 element), but a “normal vector”, so we need to define it before using in the loop. Also, we have used the function stopifnot() to check for the codons. This function is a shortcut for a standard if{} or ifelse{} to check the codons and a stop if they are not found."
  },
  {
    "objectID": "r4.html#more-exercises",
    "href": "r4.html#more-exercises",
    "title": "R4: Functions in R",
    "section": "4.1 More exercises…",
    "text": "4.1 More exercises…\nhttps://www.r-bloggers.com/2016/02/functions-exercises/\nhttp://mathcenter.oxford.emory.edu/site/math117/probSetRFunctions/"
  },
  {
    "objectID": "r4.html#quick-exercise-i",
    "href": "r4.html#quick-exercise-i",
    "title": "R4: Functions in R",
    "section": "",
    "text": "Install the package report and check its vignette and the info at the package site: https://easystats.github.io/report/\n\n\n\n\nSee an answer\n\ninstall.packages(\"report\")\n\nError in contrib.url(repos, \"source\"): trying to use CRAN without setting a mirror\n\nlibrary(report)\n\n# look for the vignette\nvignette(report)\n\nError in topic[1L]: object of type 'closure' is not subsettable\n\n# no vignette for report! Check also the CRAN site for\n# further documentation.\n\n\n\nAnother R built-in dataset is called DNase and it contains data of several experiments of DNase treatment. Explore data and use the report package (documentation) to test correlation between the DNase variables conc and density.\n\n\n\n\nSee an answer\n\nreport(DNase)\n\nThe data contains 176 observations of the following 3 variables:\n\n  - Run: 11 levels, namely 10 (n = 16, 9.09%), 11 (n = 16, 9.09%), 9 (n = 16,\n9.09%), 1 (n = 16, 9.09%), 4 (n = 16, 9.09%), 8 (n = 16, 9.09%), 5 (n = 16,\n9.09%), 7 (n = 16, 9.09%), 6 (n = 16, 9.09%), 2 (n = 16, 9.09%) and 3 (n = 16,\n9.09%)\n  - conc: n = 176, Mean = 3.11, SD = 4.06, Median = 1.17, MAD = 1.56, range:\n[0.05, 12.50], Skewness = 1.46, Kurtosis = 0.84, 0% missing\n  - density: n = 176, Mean = 0.72, SD = 0.60, Median = 0.53, MAD = 0.62, range:\n[0.01, 2.00], Skewness = 0.58, Kurtosis = -1.07, 0% missing\n\nreport(cor.test(DNase$conc, DNase$density))\n\nEffect sizes were labelled following Funder's (2019) recommendations.\n\nThe Pearson's product-moment correlation between DNase$conc and DNase$density\nis positive, statistically significant, and very large (r = 0.93, 95% CI [0.91,\n0.95], t(174) = 33.64, p &lt; .001)"
  },
  {
    "objectID": "r4.html#quick-exercise-ii",
    "href": "r4.html#quick-exercise-ii",
    "title": "R4: Functions in R",
    "section": "2.3 Quick exercise (II)",
    "text": "2.3 Quick exercise (II)\nWe want to write an inline function that transforms concentrations units: milimolar (mM) into micromolar (µM). How would you do it?\nSelect the right answer\n\n f &lt;- function(x) 1000 f &lt;- function(x) x * 1000 f &lt;- function(x) x 1000"
  },
  {
    "objectID": "r4.html#quick-exercise-iii",
    "href": "r4.html#quick-exercise-iii",
    "title": "R4: Functions in R",
    "section": "2.5 Quick exercise (III)",
    "text": "2.5 Quick exercise (III)\nNow, we want a function that help us with the a basic chemistry calculation that you surely have used many times:\n\\[\nC_{1} \\cdot  V_{1} = C_{2} \\cdot  V_{2}\n\\]\nWrite a function named dilution that returns V1, given C1, C2 and V2. Test it with an example in which you have a concentrated solution of NaCl 250 mM (1) and you need to preparate 10 mL of a buffer containing 10 mM NaCl. How much NaCl from your stock do you need?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "r4.html#quick-exercise-iv",
    "href": "r4.html#quick-exercise-iv",
    "title": "R4: Functions in R",
    "section": "2.7 Quick exercise (IV)",
    "text": "2.7 Quick exercise (IV)\nWhen creating functions, you can include any R functionality, including reading and parsing external data files. Let’s do a short exercise, within the context of molecular biology.\nCan you write a function that convert R into a molecular biology dogma interpreter?\nYou can use the table genetic_code.csv, located in the data folder that contains the conversion between all the nucleic acid sequence codons and its encoded amino acid in IUPAC one letter code.\nTry it out with some examples, including right and wrong codons, like “ATG”, “TAA”, “CAT”, or “AXG”.\n\n\n\nAnswer\n\n# the molecular biology dogma with R\n\ncodon2aa &lt;- function(inputCodon) {\n    code &lt;- read.csv2(\"data/genetic_code.csv\", stringsAsFactors = FALSE)\n    aa &lt;- code$AA[code$Codon == inputCodon]\n    return(aa)\n}\n# now let's try it\ncodon2aa(\"ATG\")\n\n[1] \"M\"\n\ncodon2aa(\"TAA\")\n\n[1] \"*\"\n\ncodon2aa(\"CAT\")\n\n[1] \"H\"\n\ncodon2aa(\"AXG\")\n\ncharacter(0)\n\n\n\nCan you also check the value of the variable aa ?\n\n#'aa'??\nprint(aa)\n\nError: object 'aa' not found\n\n\nWhat just happened? There are a few things worth to comment here:\n\nIf the function cannot find the right value to return, the output is empty: character(0)\nThe variable aa seems nonexistent! Variables defined in a function are only local variables and cannot be called outside the function.\n\nHowever, proteins are made up of more than one amino acid, so it’d be great if the input could be a vector of several codons instead a single codon.\nCan you add checkpoints and decide how to handle errors?\n\n\n\nSee an answer\n\n# version 2\n\ncodon2aa_2 &lt;- function(codons) {\n    aa &lt;- c()\n    code &lt;- read.csv2(\"data/genetic_code.csv\", stringsAsFactors = FALSE)\n    for (i in 1:length(codons)) {\n        # loop over all the elements of the vector 'codons'\n        stopifnot(`Uno o más de los codones no es correcto. No se ha podido traducir ;)` = codons[i] %in%\n            code$Codon)  #check for correct values\n        aa[i] &lt;- code$AA[code$Codon == codons[i]]\n    }\n    return(aa)\n}\n\n# let's try it\ncodon2aa_2(c(\"ATG\", \"TGA\"))\n\n[1] \"M\" \"*\"\n\ncodon2aa_2(c(\"ARG\", \"TGA\"))\n\nError in codon2aa_2(c(\"ARG\", \"TGA\")): Uno o más de los codones no es correcto. No se ha podido traducir ;)\n\ncodon2aa_2(c(\"ATG\", \"CAT\", \"CAT\", \"AAA\", \"TAA\"))\n\n[1] \"M\" \"H\" \"H\" \"K\" \"*\"\n\n\n\nIn this second example, aa is not a numeric variable (=vector of 1 element), but a “normal vector”, so we need to define it before using in the loop. Also, we have used the function stopifnot() to check for the codons. This function is a shortcut for a standard if{} or ifelse{} to check the codons and a stop if they are not found."
  },
  {
    "objectID": "r4.html#too-many-packages",
    "href": "r4.html#too-many-packages",
    "title": "R4: Functions in R",
    "section": "",
    "text": "As there are a lot of packages sometimes it takes some time to test different packages for the same analysis. Also, some packages become obsolete with a new R or RStudio version. Thus, is also a good habit to uninstall packages, with the function remove.packages().\nSometimes, you can come into two different namesake functions from independent packages. Also, to reduce the memory load you may want to use a function without loading the package. In those cases, as in the examples below, there is a trick to call a specific function, the prefix package::. However, it should be noted that in some packages the syntax is complex and you need to call more than one function to actually use a major function.\n\n# package getwiki\ninstall.packages(\"getwiki\")\n\nError in contrib.url(repos, \"source\"): trying to use CRAN without setting a mirror\n\nvignette(\"getwiki\")\nDNA &lt;- getwiki::search_wiki(\"DNA\")\nstr(DNA)\n\n'data.frame':   20 obs. of  2 variables:\n $ titles : chr  \"A-DNA\" \"Circular DNA\" \"DNA\" \"DNA (disambiguation)\" ...\n $ content: chr  \"A-DNA is one of the possible double helical structures which DNA can adopt. A-DNA is thought to be one of three\"| __truncated__ \"Circular DNA is DNA that forms a closed loop and has no ends.  Examples include:Plasmids, mobile genetic elemen\"| __truncated__ \"Deoxyribonucleic acid ( ; DNA) is a polymer composed of two polynucleotide chains that coil around each other t\"| __truncated__ \"DNA (deoxyribonucleic acid) is a molecule encoding the genetic instructions for life.DNA may also refer to:\" ...\n\nDNA$titles\n\n [1] \"A-DNA\"                 \"Circular DNA\"          \"DNA\"                  \n [4] \"DNA (disambiguation)\"  \"DNA Oyj\"               \"DNA extraction\"       \n [7] \"DNA ligase\"            \"DNA methylation\"       \"DNA polymerase\"       \n[10] \"DNA profiling\"         \"DNA repair\"            \"DNA replication\"      \n[13] \"DNA sequencing\"        \"DNA virus\"             \"DNA²\"                 \n[16] \"DNA–DNA hybridization\" \"DnaA\"                  \"Mitochondrial DNA\"    \n[19] \"Mutation\"              \"Recombinant DNA\"      \n\n\n\n\n\nIn the four examples below, you will see that ggplot() function can be used if you call the package with the prefix ggplot::. However, to make a plot you need several functions and you need to either explicit the prefix for all the required functions (option #3) or load the package, as in #4. Check the Lesson R7 for more info on ggplotting.\n\n# package ggplot2 1: no package load or calling with prefix\nggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +\n    geom_point()\n\nError in ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)): could not find function \"ggplot\"\n\n# 2: call the package with the prefix at the begining of\n# the line\nggplot2::ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +\n    geom_point()\n\nError in aes(Petal.Length, Petal.Width, colour = Species): could not find function \"aes\"\n\n# 3: prefix in all functions\nggplot2::ggplot(iris, ggplot2::aes(Petal.Length, Petal.Width,\n    colour = Species)) + ggplot2::geom_point()\n\n\n\n\n\n\n\n# 4: load the package\nlibrary(ggplot2)\nggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +\n    geom_point()\n\n\n\n\n\n\n\n\nNote that in the example we have plotted some data from the dataset named iris. Did you load that data? No need. As we mentioned in the R3 Lesson, R has some built-in datasets that can be used as examples for plots or analysis. You can check all of them using the function data()."
  },
  {
    "objectID": "r3.html#open-and-explore-a-dataframe",
    "href": "r3.html#open-and-explore-a-dataframe",
    "title": "R3: Read and write data in R",
    "section": "4.1 Open and explore a dataframe",
    "text": "4.1 Open and explore a dataframe\nAs you can see in the R help, the function read.table() has several default options as FALSE, like header=FALSE. When you have a spreadsheet export file, i.e. having a table where the fields are divided by commas in place of spaces, you can use read.csv() in place of read.table(). For Spaniards, there is also read.csv2(), which uses a comma for the decimal point and a semicolon for the separator. The latter functions are wrappers of read.table() with custom default options. Likewise, there are write.csv() and write.csv2(), which are wrappers of write.table(). Look carefully at the following examples of different ways to open a table (with some common mistakes) and explore them quickly.\n\n# Note differences between read.table(), read.csv() and\n# read.csv2()\ncoli_genomes &lt;- read.table(file = \"data/coli_genomes.csv\")\n\nError in scan(file = file, what = what, sep = sep, quote = quote, dec = dec, : line 2 did not have 11 elements\n\nhead(coli_genomes)\n\nError: object 'coli_genomes' not found\n\ncoli_genomes &lt;- read.table(file = \"data/coli_genomes.csv\", sep = \";\",\n    dec = \".\", header = TRUE)\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes.csv\")\nhead(coli_genomes)\n\n  Strain.Biosample.Year.of.isolation.Source.Phylogroup.Serotype.Clonotype.Sequence.Type.VF.No..Plasmids.kmer.Contigs.N50.longest.contig..bp..total.assembled.bp.contigs...1kb\n1                                                                               LREC237;SAMN14278613;NA;Human ;D;ONT:H28;CH23-331;ST524;18;3;117;223;272287;662555;5341632;74\n2                                                                               LREC239;SAMN14278614;2010;Human ;C;O153:H19;CH4-25;ST88;14;3;117;159;323172;760527;5415613;57\n3                                                                              LREC240;SAMN14278615;2008;Human ;B1;O76:H30;CH29-38;ST156;10;2;89;114;270767;738861;4875343;47\n4                                                                                  LREC241;SAMN14278616;NA;Human;A;O78:H11;CH11-41;ST48;5;3;117;212;112160;285056;5167401;101\n5                                                                               LREC242;SAMN14278617;2011;Porcine ;A;ONT:HNM;CH7-54;ST746;5;9;89;320;45936;128053;4858138;212\n6                                                                               LREC243;SAMN14278618;2007;Porcine ;A;O9:H37;CH7-31;ST3011;7;3;93;158;106897;369508;4638334;93\n\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes.csv\", sep = \";\")\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\ncoli_genomes &lt;- read.csv2(file = \"data/coli_genomes.csv\")\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\n# read some data\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\ntail(coli_genomes, n = 2)\n\n    Strain    Biosample Year.of.isolation Source Phylogroup Serotype Clonotype\n24 LREC261 SAMN14278636              2016 Human           A  O98:H26   CH27-23\n25 LREC262 SAMN14278637              2012 Human          B1  O66:H10    CH4-32\n   Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n24        ST8233  2            4   89     114 187945              537848\n25        ST1049  4            2  113      94 325747              822206\n   total.assembled.bp contigs...1kb\n24            4821342            53\n25            4839344            32\n\ncoli_genomes[1, ]\n\n   Strain    Biosample Year.of.isolation Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA Human           D  ONT:H28  CH23-331\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n  total.assembled.bp contigs...1kb\n1            5341632            74\n\ncoli_genomes[, 1]\n\n [1] \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" \"LREC242\" \"LREC243\" \"LREC244\"\n [8] \"LREC245\" \"LREC246\" \"LREC247\" \"LREC248\" \"LREC249\" \"LREC250\" \"LREC251\"\n[15] \"LREC252\" \"LREC253\" \"LREC254\" \"LREC255\" \"LREC256\" \"LREC257\" \"LREC258\"\n[22] \"LREC259\" \"LREC260\" \"LREC261\" \"LREC262\"\n\ncoli_genomes[1:6, 2:4]\n\n     Biosample Year.of.isolation   Source\n1 SAMN14278613                NA   Human \n2 SAMN14278614              2010   Human \n3 SAMN14278615              2008   Human \n4 SAMN14278616                NA    Human\n5 SAMN14278617              2011 Porcine \n6 SAMN14278618              2007 Porcine \n\n# explore the dataframe structure\ndim(coli_genomes)\n\n[1] 25 16\n\nlength(coli_genomes)\n\n[1] 16\n\nncol(coli_genomes)\n\n[1] 16\n\nnrow(coli_genomes)\n\n[1] 25\n\n# dataframe estructure in one line\nstr(coli_genomes)\n\n'data.frame':   25 obs. of  16 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Year.of.isolation  : int  NA 2010 2008 NA 2011 2007 2006 2006 2010 2013 ...\n $ Source             : chr  \"Human \" \"Human \" \"Human \" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 10 22 ...\n $ No..Plasmids       : int  3 3 2 3 9 3 7 7 1 4 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 113 113 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 131 215 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 326769 248158 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 451887 504233 ...\n $ total.assembled.bp : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5173794 5364777 ...\n $ contigs...1kb      : int  74 57 47 101 212 93 155 114 56 76 ...\n\n# type of data in each variable\ntypeof(coli_genomes$Strain)\n\n[1] \"character\"\n\ntypeof(coli_genomes[, 2])\n\n[1] \"character\"\n\ntypeof(coli_genomes[, 9])\n\n[1] \"integer\"\n\n# col and row names\nnames(coli_genomes)\n\n [1] \"Strain\"              \"Biosample\"           \"Year.of.isolation\"  \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"No..Plasmids\"        \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"total.assembled.bp\" \n[16] \"contigs...1kb\"      \n\ncolnames(coli_genomes)\n\n [1] \"Strain\"              \"Biosample\"           \"Year.of.isolation\"  \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"No..Plasmids\"        \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"total.assembled.bp\" \n[16] \"contigs...1kb\"      \n\nrownames(coli_genomes)\n\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\"\n[16] \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\"\n\nnames(coli_genomes[3]) &lt;- \"Year\"\nnames(coli_genomes)[3] &lt;- \"Year\"\ncolnames(coli_genomes[3]) &lt;- \"Year\"\n\nSome of the columns include ‘chr’ data that may be actually a categorical variable, so we can code them as factor. Using the expression as.factor() you can check whether the data would correspond to a text or a categorical variable.\n\ncoli_genomes$Source &lt;- as.factor(coli_genomes$Source)\ncoli_genomes$Phylogroup &lt;- as.factor(coli_genomes$Phylogroup)\n\nstr(coli_genomes)  #dataframe estructure updated\n\n'data.frame':   25 obs. of  16 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2010 2013 ...\n $ Source             : Factor w/ 4 levels \"Avian \",\"Human\",..: 3 3 3 2 4 4 4 4 4 3 ...\n $ Phylogroup         : Factor w/ 4 levels \"A\",\"B1\",\"C\",\"D\": 4 3 2 1 1 1 1 1 3 4 ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 10 22 ...\n $ No..Plasmids       : int  3 3 2 3 9 3 7 7 1 4 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 113 113 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 131 215 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 326769 248158 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 451887 504233 ...\n $ total.assembled.bp : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5173794 5364777 ...\n $ contigs...1kb      : int  74 57 47 101 212 93 155 114 56 76 ...\n\n\nHow many levels are there in Source?? It is not uncommon to see some mistake in our data, usually made when the data were recorded, for example a space may have been inserted before a data value. By default this white space will be kept in the R environment, such that ‘Human’ will be recognized as a different value than ‘Human’. In order to avoid this type of error, we can use the strip.white argument.\n\nunique(coli_genomes$Source)\n\n[1] Human    Human    Porcine  Avian   \nLevels: Avian  Human Human  Porcine \n\ntable(coli_genomes$Source)\n\n\n  Avian     Human   Human  Porcine  \n       3        1       16        5 \n\ncoli_genomes &lt;- read.csv2(file = \"data/coli_genomes.csv\", strip.white = TRUE)\ncoli_genomes$Source &lt;- as.factor(coli_genomes$Source)\ncoli_genomes$Phylogroup &lt;- as.factor(coli_genomes$Phylogroup)\n\nunique(coli_genomes$Source)\n\n[1] Human   Porcine Avian  \nLevels: Avian Human Porcine\n\n\nAt this point, you may consider that writing the name of the dataframe every time that you want to work with it can be repetitive. In fact, we don’t need to do it.\n\nattach(coli_genomes)  #attach\ntable(Source)\n\nSource\n  Avian   Human Porcine \n      3      17       5 \n\ndetach(coli_genomes)\n\nNote that attach can be used for any R object, including dataframes, lists, vectors, packages… Once attached, R will consider those objects as databases, located in new, temporal environments.\n\n\n\n\n\n\nThrow out the trash\n\n\n\nIf you want to remove some data to free up your computer’s memory, you can use the rm() function (aka remove()) to remove a specific object from your working environment. If you are running a script with large datasets, you can also use gc() to free memory after a large object has been removed. This is also done automatically without the user having to intervene, but it can be useful to call gc after a large object has been removed, as this can prompt R to return memory to the operating system."
  },
  {
    "objectID": "r3.html#renaming-changing-and-adding-variables",
    "href": "r3.html#renaming-changing-and-adding-variables",
    "title": "R3: Read and write data in R",
    "section": "4.2 Renaming, changing and adding variables",
    "text": "4.2 Renaming, changing and adding variables\nWe can also rename some variables to use more easy names.\n\nnames(coli_genomes)  #see all variable names\n\n [1] \"Strain\"              \"Biosample\"           \"Year.of.isolation\"  \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"No..Plasmids\"        \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"total.assembled.bp\" \n[16] \"contigs...1kb\"      \n\n# rename variables\nnames(coli_genomes)[3] &lt;- \"Year\"\nnames(coli_genomes)[10] &lt;- \"Plasmids\"\nnames(coli_genomes)[c(15, 16)] &lt;- c(\"Assembly_length\", \"contigs1kb\")\n# check\nnames(coli_genomes)\n\n [1] \"Strain\"              \"Biosample\"           \"Year\"               \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"Plasmids\"            \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"Assembly_length\"    \n[16] \"contigs1kb\"         \n\n\nWe are going to simplify our dataframe by dropping one or more variables (columns):\n\ncoli_genomes[, -12]\n\n    Strain    Biosample Year  Source Phylogroup Serotype  Clonotype\n1  LREC237 SAMN14278613   NA   Human          D  ONT:H28   CH23-331\n2  LREC239 SAMN14278614 2010   Human          C O153:H19     CH4-25\n3  LREC240 SAMN14278615 2008   Human         B1  O76:H30    CH29-38\n4  LREC241 SAMN14278616   NA   Human          A  O78:H11    CH11-41\n5  LREC242 SAMN14278617 2011 Porcine          A  ONT:HNM     CH7-54\n6  LREC243 SAMN14278618 2007 Porcine          A   O9:H37     CH7-31\n7  LREC244 SAMN14278619 2006 Porcine          A   O2:H32    CH11-23\n8  LREC245 SAMN14278620 2006 Porcine          A  ONT:H45    C11-398\n9  LREC246 SAMN14278621 2010 Porcine          C   O8:H19     CH4-54\n10 LREC247 SAMN14278622 2013   Human          D O145:H28   CH23-331\n11 LREC248 SAMN14278623 2013   Human          A O123:H16     C11-94\n12 LREC249 SAMN14278624 2013   Human          D O145:H28   CH23-331\n13 LREC250 SAMN14278625 2013   Human          D O145:H28   CH23-331\n14 LREC251 SAMN14278626 2013   Human          D O145:H28   CH23-331\n15 LREC252 SAMN14278627 2013   Human          A  ONT:H37     C11-54\n16 LREC253 SAMN14278628 2013   Avian          A  ONT:H19    CH94-23\n17 LREC254 SAMN14278629 2011   Avian         B1 O142:H30     C41-35\n18 LREC255 SAMN14278630 2005   Avian          C  O78:H19     CH4-27\n19 LREC256 SAMN14278631 2012   Human          C   O8:H19     CH4-54\n20 LREC257 SAMN14278632 2012   Human          C   O9:H19     CH4-27\n21 LREC258 SAMN14278633 2012   Human          A    O9:H4     CH7-34\n22 LREC259 SAMN14278634 2015   Human          C   O9:H19 CH4like-27\n23 LREC260 SAMN14278635 2012   Human          A  ONT:H33    CH11-54\n24 LREC261 SAMN14278636 2016   Human          A  O98:H26    CH27-23\n25 LREC262 SAMN14278637 2012   Human         B1  O66:H10     CH4-32\n   Sequence.Type VF Plasmids kmer    N50 longest.contig..bp. Assembly_length\n1          ST524 18        3  117 272287              662555         5341632\n2           ST88 14        3  117 323172              760527         5415613\n3          ST156 10        2   89 270767              738861         4875343\n4           ST48  5        3  117 112160              285056         5167401\n5          ST746  5        9   89  45936              128053         4858138\n6         ST3011  7        3   93 106897              369508         4638334\n7           ST10  4        7  115  89185              281444         5406295\n8        ST10888  2        7  115  94368              280268         4796593\n9        ST10889 10        1  113 326769              451887         5173794\n10         ST137 22        4  113 248158              504233         5364777\n11       ST10850 10        4  113 241249              809158         5293420\n12          ST32 22        1  115 200150              424527         5389075\n13         ST137 22        3  111 281589              617142         5340478\n14          ST32 20        1  113 182651              412836         5276782\n15          ST48  1        0  113 105396              272304         4507328\n16         ST347  2        0  117 110661              497785         4664768\n17         ST359  9        4  113 240847              460510         4992565\n18          ST88 11        4  113 405376             1190696         5196698\n19          ST88 14        2  113 281822             1140163         5252065\n20          ST88 14        4   91 140521              284241         5085107\n21          ST46  8        4   85  86565              300086         4915667\n22       ST10890 13        3  113 326962              749412         5200701\n23          ST10  2        5  117 228491              576949         4881205\n24        ST8233  2        4   89 187945              537848         4821342\n25        ST1049  4        2  113 325747              822206         4839344\n   contigs1kb\n1          74\n2          57\n3          47\n4         101\n5         212\n6          93\n7         155\n8         114\n9          56\n10         76\n11         55\n12        131\n13         78\n14         95\n15         78\n16         77\n17         42\n18         38\n19         43\n20        110\n21        121\n22         77\n23         48\n24         53\n25         32\n\n# this can be also used to remove rows (cases)\ncoli_genomes &lt;- coli_genomes[-c(9:11), ]\n\nWe know the ‘Assembly length’ and the number of ‘Contigs’, but we would like to represent the average contig length.\n\ncoli_genomes$average_contig &lt;- coli_genomes$Assembly_length/coli_genomes$Contigs"
  },
  {
    "objectID": "r5.html",
    "href": "r5.html",
    "title": "R5: Base plots in R",
    "section": "",
    "text": "Data visualization is a very important part of a data analysis because they can efficiently summarize large amounts of data in a graphical format and reveal new insights that are difficult to understand from the raw data. From a researcher’s or data analyst’s perspective, plotting datasets also helps you become familiar with the data and plan next steps in your analysis. It also allows you to identify statistical pitfalls with an initial plot.\n\n\n\n\n\n\nAnscombe’s quartet. Each of the four datasets consists of 11 data points (orange points) and have nearly identical statistical properties, including means, sample variances, Pearson’s sample correlation (r), and linear regression line (blue lines). Modified from Anscombe FJ. Graphs in statistical analysis. Am Stat 1973;27:17–21\n\n\nThe above Figure is a well-known quartet highlights the importance of graphing data prior to analysis, and why statistical reviewers often ask for such graphs to be made available. As you can see the Pearson r2 is very similar, but the data are actually very different. Check out also the Dinosaurus example in the reference 2 below.\n\n\n\nThere are many different types of graphs, each with their own strengths and use cases. One of the trickiest parts of the analysis process is choosing the right way to represent your data with one of these visualizations. The wrong chart can lead to confusion or misinterpretation of the data (see some examples of bad charts here).\nFrom a classical data analysis perspective, the first consideration in choosing the right plot is the nature of your variables. Some charts are recommended for numerical data (quantitative variables) and others for categorical data (qualitative variables). Then you should consider what role you want your data visualization to play, i.e., what question you want to answer or what message you want to convey. This depends on the number of variables as well as their distribution, grouping or correlation. There are some best practice guidelines, but ultimately you need to consider what is best for your data. What do you want to show? What chart best conveys your message? Is it a comparison between groups? Is it a frequency distribution of 1 variable?\n\n\n\nThe ExtremePresentation method for choosing a plot or chart.\n\n\nFor a guidance, you can use the Chartchooser above, by Andrew Abela, or the interactive website Visual Vocabulary here.\nYou can see a description of some of the most common plot types, with many examples on books and dedicated R websites. I suggest to take a look to some of the suggested References below, or some quick examples, like those here or here. Rather than going through a wide list of plots, we are going to use some examples to learn some basic plotting and see the effect of plot selection in order to understand your data and use them to answer questions.\n\n\n\nR has a number of built-in tools for diverse graph types such as histograms, scatterplots, stripcharts, bar charts, boxplots, and more. Indeed, there are many functions in R to produce plots ranging from the very basic to the highly complex. We will show a few examples and use the plots as an excuse to add some new tricks for data analysis.\nIn Lesson R8 we will use the ggplot2 package for efficient and advanced plot generation and customization. However, you will see that it’s sometimes useful to use the plotting functions in base R. These are installed by default with R and do not require any additional packages to be installed. They’re quick to type, straightforward to use in simple cases, and run very quickly. Then, if you want to do anything beyond very simple plots, though, it’s generally better to switch to ggplot2. In fact, once you already know how to use R’s base graphics, having these examples side by side will help you transition to using ggplot2 for when you want to make more sophisticated graphics.\n\n\n\n\n\n\nImportant\n\n\n\nThe function plot() is actually multifunctional and it can be used to generate different types of plots.\n\n\nIn the table and the examples below you can see how to use plot() for different plot types.\n\n\n\nUse of plot() function. Source: https://r-coder.com/plot-r/\n\n\nFor the following examples, we are going to review also some R functions to make up (mock or simulated) data restricted to certain distributions. For instance, using functions like rnorm() or dnorm() for generation of normal data or normal density curves. The same can be obtained for Poisson distribution with dpois() and rpois().\n\n# generate some sample data with normal distribution\nx &lt;- rnorm(500)\ny &lt;- x + rnorm(500)\nplot(x)\n\n\n\n\n\n\n\nhist(x, col = \"blue\")\n\n\n\n\n\n\n\nplot(x, y)\n\n\n\n\n\n\n\nplot(dnorm(0:100, mean = 50, sd = 5))\n\n\n\n\n\n\n\n\nWe can also change some of the plot parameters to change the plot appearance.\n\n#customized Example\nplot(x, y, pch = 21,\n    bg = rgb(1,0,0,0.5), # Fill color\n    col = \"red\", # Border color\n    cex = 3,      # Symbol size\n    lwd = 3)      # Border width\n\n\n\n\n\n\n\n\nNote that colors can be specified as a name or code (RGB or HEX). In the case of RGB code, we provide the three values in the range [0,1] for red, green, and blue. We can also introduce an optional fourth value that correspond to the alpha, also from 0 (transparent) to 1 (opaque). See below for more details about changing points and line shape and colors.\n\n\n\n\nWe have a vector in a RData file called primes.RData that we would like to plot.\n\n\n\n\n\n\nCross-lesson tip\n\n\n\nIf you have not worked with the R3 lesson yet, you can take a quick look at how we can save and load objects into a RData file.\n\n\nHow would you load the vector?\n\n load(data/primes.RData) load(“data/primes.RData”) open(“data/primes.RData”)\n\nNow we want to plot the vector. You may try different plots, but think which plot help you to answer the following question\nHow would you check the distribution of the data? In other words, how would you check if are there many values below or above the median?\n\n plot(new_vec) hist(new_vec, breaks=c(0,25,50,75,100)) boxplot(new_vec) hist(new_vec, breaks=c(0,100,200,300,400))\n\nYes, a boxplot is the best choice here.\n\n\n\nSee the right plot\n\nload(\"data/primes.RData\")\nboxplot(new_vec)\n\n\n\n\n\n\n\n\n\nHere’s how to interpret this boxplot:\n\nThe bottom whisker displays the minimum value (excluding outliers).\nThe bottom line of the box displays the first quartile value.\nThe black bar in the middle of the box displays the second quartile value (also known as the median).\nThe top line of the box displays the third quartile value.\nThe top whisker displays the maximum value (excluding outliers).\nOutliers are defined as points exceeding 1.5 times the interquartile range (Q3-Q1).\n\nWe can also easily calculate the quartiles of a given dataset in R by using the quantile() function.\n\nload(\"data/primes.RData\")\nquantile(new_vec)\n\n   0%   25%   50%   75%  100% \n  1.0  35.5  86.0 149.5 337.0 \n\n\nCompare the output with the boxplot and interpret the numbers.\n\n\n\nAs an example, we are going to read again the file coli_genomes_renamed.csv that we used in the previous lessons.\n\n\n\n\n\n\nCross-lesson tip\n\n\n\nIf you have not worked with the R3 lesson yet, you can take a quick look at how we can open and save a table in R.\n\n\nNow let’s play with different plots of our data and try to save one.\n\n# open the data\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes_renamed.csv\",\n    strip.white = TRUE, stringsAsFactors = TRUE)\n# attach it to save time and code writing (optional!)\nattach(coli_genomes)\n# one variable\nplot(Year)\n\n\n\n\n\n\n\n# histogram\nhist(Year)\n\n\n\n\n\n\n\n# a factor\nplot(Source)\n\n\n\n\n\n\n\n# two variables\nplot(Contigs, kmer)\n\n\n\n\n\n\n\n# factor + numeric variable and saving the plot\npng(file = \"plot1.png\")  #give it a file name\nplot(Source, Contigs)  #construct the plot\ndev.off()  #save\n\nquartz_off_screen \n                2 \n\ndetach(coli_genomes)  #detach\n\nAs shown in the example, in order to save a plot, we must follow three steps:\n\nOpen the file indicating the format: png(), jpg(), svg(), postscript(), bmp(), win.metafile(), or pdf().\nPlot the data.\nClose the file: dev.off().\n\nAlternatively, you can save the plot using the Plot menu or the Plots panel: Export –&gt; Save as Image or Save as PDF."
  },
  {
    "objectID": "r5.html#selecting-the-right-plot",
    "href": "r5.html#selecting-the-right-plot",
    "title": "R5: Base plots in R",
    "section": "",
    "text": "Data visualizations are a vital component of a data analysis, as they have the capability of summarizing large amounts of data efficiently in a graphical format and bring out new insights that can be difficult to understand from raw data. There are many chart types available, each with its own strengths and use cases. One of the trickiest parts of the analysis process is choosing the right way to represent your data using one of these visualizations. A wrong plot can lead to confusion or data misinterpretation (see some examples of bad graphs here).\nFrom the perspective of classical data analysis, the first consideration to select the right plot is the nature of your variables. Some plots are recommended for numerical data (quantitative variables) and other for categorical data (qualitative variables). Then, you should considering the role for your data visualization, i.e, question you want to address or the message you want to transmit. That will depend on how many variables, as well as their distribution, grouping or correlation. There are some best practice guidelines, but at the end of the day, you need to consider what is best for your data. What do you want to show? What graph will best communicate your message? Is it a comparison between groups? Is it the frequency distribution of 1 variable?\nAs a guidance, you can use the below cheatsheet, taken from Nathan Yau’s blog Flowingdata:\n\nYou can see a description of some of the most common plot types, with many examples on books and dedicated R websites. I suggest to take a look to some of the suggested References below, or some quick examples, like those here or here. Rather than going through a wide list of plots, we are going to use some examples to learn some basic plotting and see the effect of plot selection in order to understand your data and use them to answer questions."
  },
  {
    "objectID": "r5.html#quick-plotting-in-r",
    "href": "r5.html#quick-plotting-in-r",
    "title": "R5: Base plots in R",
    "section": "",
    "text": "R has a number of built-in tools for diverse graph types such as histograms, scatterplots, stripcharts, bar charts, boxplots, and more. Indeed, there are many functions in R to produce plots ranging from the very basic to the highly complex. We will show a few examples and use the plots as an excuse to add some new tricks for data analysis.\nIn Lesson R8 we will use the ggplot2 package for efficient and advanced plot generation and customization. However, you will see that it’s sometimes useful to use the plotting functions in base R. These are installed by default with R and do not require any additional packages to be installed. They’re quick to type, straightforward to use in simple cases, and run very quickly. Then, if you want to do anything beyond very simple plots, though, it’s generally better to switch to ggplot2. In fact, once you already know how to use R’s base graphics, having these examples side by side will help you transition to using ggplot2 for when you want to make more sophisticated graphics.\n\n\n\n\n\n\nImportant\n\n\n\nThe function plot() is actually multifunctional and it can be used to generate different types of plots.\n\n\nIn the table and the examples below you can see how to use plot() for different plot types.\n\n\n\nUse of plot() function. Source: https://r-coder.com/plot-r/\n\n\nFor the following examples, we are going to review also some R functions to make up (mock or simulated) data restricted to certain distributions. For instance, using functions like rnorm() or dnorm() for generation of normal data or normal density curves. The same can be obtained for Poisson distribution with dpois() and rpois().\n\n# generate some sample data with normal distribution\nx &lt;- rnorm(500)\ny &lt;- x + rnorm(500)\nplot(x)\n\n\n\n\n\n\n\nhist(x, col = \"blue\")\n\n\n\n\n\n\n\nplot(x, y)\n\n\n\n\n\n\n\nplot(dnorm(0:100, mean = 50, sd = 5))\n\n\n\n\n\n\n\n\nWe can also change some of the plot parameters to change the plot appearance.\n\n#customized Example\nplot(x, y, pch = 21,\n    bg = rgb(1,0,0,0.5), # Fill color\n    col = \"red\", # Border color\n    cex = 3,      # Symbol size\n    lwd = 3)      # Border width\n\n\n\n\n\n\n\n\nNote that colors can be specified as a name or code (RGB or HEX). In the case of RGB code, we provide the three values in the range [0,1] for red, green, and blue. We can also introduce an optional fourth value that correspond to the alpha, also from 0 (transparent) to 1 (opaque). See below for more details about changing points and line shape and colors."
  },
  {
    "objectID": "r5.html#quick-exercise-i",
    "href": "r5.html#quick-exercise-i",
    "title": "R5: Base plots in R",
    "section": "",
    "text": "We have a vector in a RData file called primes.RData that we would like to plot.\n\n\n\n\n\n\nCross-lesson tip\n\n\n\nIf you have not worked with the R3 lesson yet, you can take a quick look at how we can save and load objects into a RData file.\n\n\nHow would you load the vector?\n\n load(data/primes.RData) load(“data/primes.RData”) open(“data/primes.RData”)\n\nNow we want to plot the vector. You may try different plots, but think which plot help you to answer the following question\nHow would you check the distribution of the data? In other words, how would you check if are there many values below or above the median?\n\n plot(new_vec) hist(new_vec, breaks=c(0,25,50,75,100)) boxplot(new_vec) hist(new_vec, breaks=c(0,100,200,300,400))\n\nYes, a boxplot is the best choice here.\n\n\n\nSee the right plot\n\nload(\"data/primes.RData\")\nboxplot(new_vec)\n\n\n\n\n\n\n\n\n\nHere’s how to interpret this boxplot:\n\nThe bottom whisker displays the minimum value (excluding outliers).\nThe bottom line of the box displays the first quartile value.\nThe black bar in the middle of the box displays the second quartile value (also known as the median).\nThe top line of the box displays the third quartile value.\nThe top whisker displays the maximum value (excluding outliers).\nOutliers are defined as points exceeding 1.5 times the interquartile range (Q3-Q1).\n\nWe can also easily calculate the quartiles of a given dataset in R by using the quantile() function.\n\nload(\"data/primes.RData\")\nquantile(new_vec)\n\n   0%   25%   50%   75%  100% \n  1.0  35.5  86.0 149.5 337.0 \n\n\nCompare the output with the boxplot and interpret the numbers."
  },
  {
    "objectID": "r5.html#plot-customization",
    "href": "r5.html#plot-customization",
    "title": "R5: Base plots in R",
    "section": "2.4 More plot customization",
    "text": "2.4 More plot customization\nThere are many options to customize your plots, including font type and size, point shape, line type… You can see more info on the References section below. Let’s see some examples using code I borrow from https://r-coder.com/plot-r/\n\n# point shape with 'pch'\nr &lt;- c(sapply(seq(5, 25, 5), function(i) rep(i, 5)))\nt &lt;- rep(seq(25, 5, -5), 5)\n\nplot(r, t, pch = 1:25, cex = 3, yaxt = \"n\", xaxt = \"n\", ann = FALSE,\n    xlim = c(3, 27), lwd = 1:3)\ntext(r - 1.5, t, 1:25)\n\n\n\n\n\n\n\n# line type with 'lty'\nM &lt;- matrix(1:36, ncol = 6)\n# we use a `matplot` to plot a matrix.\nmatplot(M, type = c(\"l\"), lty = 1:6, col = \"black\", lwd = 3)\n\n# Just to indicate the line types in the plot\nj &lt;- 0\ninvisible(sapply(seq(4, 40, by = 6), function(i) {\n    j &lt;&lt;- j + 1\n    text(2, i, paste(\"lty =\", j))\n}))\n\n\n\n\n\n\n\n# plot box\npar(mfrow = c(2, 3))\n\n# plots\nplot(x, y, bty = \"o\", main = \"Default\")\nplot(x, y, bty = \"7\", main = \"bty = '7'\")\nplot(x, y, bty = \"L\", main = \"bty = 'L'\")\nplot(x, y, bty = \"U\", main = \"bty = 'U'\")\nplot(x, y, bty = \"C\", main = \"bty = 'C'\")\nplot(x, y, bty = \"n\", main = \"bty = 'n'\")\n\n\n\n\n\n\n\npar(mfrow = c(1, 1))"
  },
  {
    "objectID": "r5.html#plot-your-data-and-save-the-plot",
    "href": "r5.html#plot-your-data-and-save-the-plot",
    "title": "R5: Base plots in R",
    "section": "",
    "text": "As an example, we are going to read again the file coli_genomes_renamed.csv that we used in the previous lessons.\n\n\n\n\n\n\nCross-lesson tip\n\n\n\nIf you have not worked with the R3 lesson yet, you can take a quick look at how we can open and save a table in R.\n\n\nNow let’s play with different plots of our data and try to save one.\n\n# open the data\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes_renamed.csv\",\n    strip.white = TRUE, stringsAsFactors = TRUE)\n# attach it to save time and code writing (optional!)\nattach(coli_genomes)\n# one variable\nplot(Year)\n\n\n\n\n\n\n\n# histogram\nhist(Year)\n\n\n\n\n\n\n\n# a factor\nplot(Source)\n\n\n\n\n\n\n\n# two variables\nplot(Contigs, kmer)\n\n\n\n\n\n\n\n# factor + numeric variable and saving the plot\npng(file = \"plot1.png\")  #give it a file name\nplot(Source, Contigs)  #construct the plot\ndev.off()  #save\n\nquartz_off_screen \n                2 \n\ndetach(coli_genomes)  #detach\n\nAs shown in the example, in order to save a plot, we must follow three steps:\n\nOpen the file indicating the format: png(), jpg(), svg(), postscript(), bmp(), win.metafile(), or pdf().\nPlot the data.\nClose the file: dev.off().\n\nAlternatively, you can save the plot using the Plot menu or the Plots panel: Export –&gt; Save as Image or Save as PDF."
  },
  {
    "objectID": "r5.html#adding-elements-to-your-plot",
    "href": "r5.html#adding-elements-to-your-plot",
    "title": "R5: Base plots in R",
    "section": "",
    "text": "As you may know, the R function cor() calculate the correlation coefficient between two or more vectors and cor.test() allow us to quickly perform a correlation test between two variables to know if the correlation is statistically significant. However, a quick plot can be also very useful.\nIn our example dataframe, we have some features of a list of E. coli isolates and the basic stats of the genome sequencing. Regarding this data, do you think that the number of contigs &gt; 1kb in the genome assemblies (contigs1kb) correlates with the total number of contigs (Contigs), or the average contig length (average_contig)? Let’s check the data using simple plots with the plot() function. Since we are going to make two plots, we will layout them together using a par option.\n\n\n\n\n\n\nPlot parameters set up with par\n\n\n\nNote that par can be used to set many graphical parameters. These options are stored in a list R object, that you can get using par() (with no arguments).\n\n\n\n# first we can save original settings (optional)\noldpar &lt;- par()\npar(mfrow = c(1, 2))  #graph area in two columns\n\n# correlation plots\nplot(coli_genomes$contigs1kb ~ coli_genomes$Contigs, xlab = \"Contigs\",\n    ylab = \"Contigs &gt; 1kb\")\n\nplot(coli_genomes$contigs1kb ~ coli_genomes$average_contig, xlab = \"Average contig\",\n    ylab = \"Contigs &gt; 1kb\")\n\n\n\n\n\n\n\n\nWhat do you think? Now that we have seen the linear relationship pictorially in the scatter plot, we should plot the linear regression line and analyze the correlation.\n\n\n\n\n\n\nREMINDER - Linear model and correlation in R\n\n\n\nLinear regression analysis is used to predict the value of a variable based on the value of another variable. In R, you can calculate the linear regression equation with the function lm(). The lm() function takes in two main arguments, (1) Formula and (2) Data. The data is typically a data.frame and the formula is a object of class formula (with a diacritical mark like that over the Spanish letter ñ, ~). But the most common convention is to write out the formula directly in place of the argument as written below.\nThen, to fully check the correlation (and avoid situations like in the Anscombe’s quartet above, you must also remember that correlation coefficient can be calculated with the function cor().\n\n\nLet’s obtain and plot the linear model:\n\n# linear model\nmodelito &lt;- lm(coli_genomes$contigs1kb ~ coli_genomes$Contigs)\nsummary(modelito)  #is the linear model significant???\n\n\nCall:\nlm(formula = coli_genomes$contigs1kb ~ coli_genomes$Contigs)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-53.475  -8.646  -3.300  14.840  55.947 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          -6.36290   12.90558  -0.493    0.627    \ncoli_genomes$Contigs  0.50755    0.06634   7.651 2.31e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 22.55 on 20 degrees of freedom\nMultiple R-squared:  0.7453,    Adjusted R-squared:  0.7326 \nF-statistic: 58.54 on 1 and 20 DF,  p-value: 2.306e-07\n\n\n\n\n\n\n\n\nTip\n\n\n\nRemember that the results of lm(), cor.test(), and all other tests, are R objects (usually lists) than can be used to retrieve the results or plot the values.\n\n\n\n# set par (we need to set up the par in every code chunk)\npar(mfrow = c(1, 2))\n# correlation plots with line\nplot(coli_genomes$contigs1kb ~ coli_genomes$Contigs, xlab = \"Contigs\",\n    ylab = \"Contigs &gt; 1kb\")\nabline(modelito, col = \"red\")\n# we can include the lm() in the plot, without calculating\n# it before\nplot(coli_genomes$contigs1kb ~ coli_genomes$average_contig, xlab = \"Average contig\",\n    ylab = \"Contigs &gt; 1kb\")\nabline(lm(coli_genomes$contigs1kb ~ coli_genomes$average_contig),\n    col = \"red\")\n\n\n\n\n\n\n\n# now we will check with a cor.test and add some text to\n# the plot\n(test1 &lt;- cor.test(coli_genomes$contigs1kb, coli_genomes$Contigs))\n\n\n    Pearson's product-moment correlation\n\ndata:  coli_genomes$contigs1kb and coli_genomes$Contigs\nt = 7.651, df = 20, p-value = 2.306e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.6945248 0.9420476\nsample estimates:\n     cor \n0.863334 \n\n(test2 &lt;- cor.test(coli_genomes$contigs1kb, coli_genomes$average_contig))\n\n\n    Pearson's product-moment correlation\n\ndata:  coli_genomes$contigs1kb and coli_genomes$average_contig\nt = -7.8453, df = 20, p-value = 1.574e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.9444427 -0.7055990\nsample estimates:\n       cor \n-0.8687624 \n\nstr(test1)\n\nList of 9\n $ statistic  : Named num 7.65\n  ..- attr(*, \"names\")= chr \"t\"\n $ parameter  : Named int 20\n  ..- attr(*, \"names\")= chr \"df\"\n $ p.value    : num 2.31e-07\n $ estimate   : Named num 0.863\n  ..- attr(*, \"names\")= chr \"cor\"\n $ null.value : Named num 0\n  ..- attr(*, \"names\")= chr \"correlation\"\n $ alternative: chr \"two.sided\"\n $ method     : chr \"Pearson's product-moment correlation\"\n $ data.name  : chr \"coli_genomes$contigs1kb and coli_genomes$Contigs\"\n $ conf.int   : num [1:2] 0.695 0.942\n  ..- attr(*, \"conf.level\")= num 0.95\n - attr(*, \"class\")= chr \"htest\"\n\n\n\nplot(coli_genomes$contigs1kb ~ coli_genomes$Contigs, xlab = \"Contigs\",\n    ylab = \"Contigs &gt; 1kb\")\nabline(lm(coli_genomes$contigs1kb ~ coli_genomes$Contigs), col = \"red\")\n# now add the text in a defined position\ntext(200, 200, paste(\"Pearson r2=\", round(test1$estimate, 2)))\n\n\n\n\n\n\n\nplot(coli_genomes$contigs1kb ~ coli_genomes$average_contig, xlab = \"Average contig\",\n    ylab = \"Contigs &gt; 1kb\")\nabline(lm(coli_genomes$contigs1kb ~ coli_genomes$average_contig),\n    col = \"red\")\ntext(40000, 200, paste(\"Pearson r2=\", round(test2$estimate, 2)))\n\n\n\n\n\n\n\n\nIn a step further you can check multiple correlations in a single plot.\n\n# oh wait! why only one-vs-one?\nplot(coli_genomes[, c(\"VF\", \"Plasmids\", \"kmer\", \"Contigs\", \"N50\",\n    \"longest.contig..bp.\", \"Assembly_length\", \"contigs1kb\", \"average_contig\")],\n    main = \"Multiple Correlation plot\")\n\n\n\n\n\n\n\n\nNow, you have a quick info about possible variable correlations."
  },
  {
    "objectID": "r5.html#quick-exercise-i-1",
    "href": "r5.html#quick-exercise-i-1",
    "title": "R5: Base plots in R",
    "section": "",
    "text": "We are loading again the table described in Lesson 12 and we will try out some plots.\n\n#read data\nZFdata &lt;- read.csv(\"data/Zebrafish_data.csv\")\n\n#some plots\nbarplot(ZFdata)\n\nError in barplot.default(ZFdata): 'height' must be a vector or a matrix\n\nbarplot(ZFdata$pLoC)\n\n\n\npar(mfrow=c(1,3)) #arrange the three plots in a row \nbarplot(ZFdata$pLoC, col=\"red\", main=\"pLoc\")\nbarplot(ZFdata$EFNA3, col=\"green\", main=\"EFNA3\")\nbarplot(ZFdata$NC1s, col=\"blue\",main=\"NC1s\")\n\n\n\npar(mfrow=c(2,3)) #arrange the three plots in a row \nstripchart(ZFdata$pLoC, main=\"pLoc\")\nstripchart(ZFdata$pLoC, method=\"stack\", col=\"red\", main=\"pLoc\")\nstripchart(ZFdata$pLoC, method=\"overplot\", col=\"red\",  main=\"pLoc\")\nstripchart(ZFdata$pLoC, method=\"jitter\", col=\"red\", main=\"pLoc\")\nstripchart(ZFdata$EFNA3, method = \"stack\",col=\"green\", main=\"EFNA3\")\nstripchart(ZFdata$NC1s, method = \"stack\",col=\"blue\", main=\"N1cs\")\n\n\n\npar(mfrow=c(1,3)) #arrange the three plots in a row \nhist(ZFdata$pLoC, col=\"red\",  main=\"pLoc\")\nhist(ZFdata$EFNA3, col=\"green\", main=\"EFNA3\")\nhist(ZFdata$NC1s, col=\"blue\", main=\"N1cs\")\n\n\n\npar(mfrow=c(1,3)) #arrange the three plots in a row \nboxplot(ZFdata$pLoC, col=\"red\",  main=\"pLoc\")\nboxplot(ZFdata$EFNA3,  col=\"green\", main=\"EFNA3\")\nboxplot(ZFdata$NC1s, col=\"blue\", main=\"N1cs\")\n\n\n\n\nNow try to answer some questions about your data and obtained plots:\n\nWhich construct has the strongest impact on the disemination of metastatic cells?\nWhich plot represent best the data?\nDoes a barplot represent the same information than a boxplot?\n\nNow, we are going to represent the same data again.\n\n#we can save the par anytime, just in case \noldpar &lt;- par()\n#you can recall this settings with par(oldpar)\npar(mfrow = c(1, 3), cex.lab = 1, cex = 1, lwd = 2) #new settings\n\nhist(ZFdata$pLoC, col=rgb(1,0,0,0.5),  main=\"pLoc\", ylim = c(0,20), xlim = c(0,120), xlab = \"Number of Metastatic cells\")\nhist(ZFdata$EFNA3, col=rgb(0,1,0,0.5),  main=\"EFNA3\", ylim = c(0,20), xlim = c(0,120), xlab = \"Number of Metastatic cells\")\nhist(ZFdata$NC1s, col=rgb(0,0,1,0.5),  main=\"NC1s\", ylim = c(0,20), xlim = c(0,120), xlab = \"Number of Metastatic cells\")\n\n\n\nstripchart(ZFdata$pLoC, method=\"jitter\", pch=19, col=rgb(1,0,0,0.5), vertical=TRUE,  main=\"pLoc\", ylim = c(0,120), xlab = \"Number of Metastatic cells\")\nstripchart(ZFdata$EFNA3, method=\"jitter\", pch=19, col=rgb(0,1,0,0.5), vertical=TRUE, main=\"EFNA3\", ylim = c(0,120), xlab = \"Number of Metastatic cells\")\nstripchart(ZFdata$EFNA3, method=\"jitter\", pch=19, col=rgb(0,1,0,0.5), vertical=TRUE, main=\"EFNA3\", ylim = c(0,120), xlab = \"Number of Metastatic cells\")\n\n\n\nboxplot(ZFdata$pLoC, col=rgb(1,0,0,0.5),  ylim = c(0,120), xlab = \"Number of Metastatic cells\", main=\"pLoc\")\nboxplot(ZFdata$EFNA3, col=rgb(0,1,0,0.5), ylim = c(0,120), xlab = \"Number of Metastatic cells\",  main=\"EFNA3\")\nboxplot(ZFdata$NC1s, col=rgb(0,0,1,0.5), ylim = c(0,120), xlab = \"Number of Metastatic cells\", main=\"N1cs\")\n\n\n\npar(oldpar) #restore (optional)\n\nWarning in par(oldpar): graphical parameter \"cin\" cannot be set\n\n\nWarning in par(oldpar): graphical parameter \"cra\" cannot be set\n\n\nWarning in par(oldpar): graphical parameter \"csi\" cannot be set\n\n\nWarning in par(oldpar): graphical parameter \"cxy\" cannot be set\n\n\nWarning in par(oldpar): graphical parameter \"din\" cannot be set\n\n\nWarning in par(oldpar): graphical parameter \"page\" cannot be set\n\n#alternatively you can reset par with: par(no.readonly = TRUE) \n\nIn these plots above, you can see how plots can be deeply customized, and you can select colors (by name, RGB, hex or HSV code), size and shape of the points (cex and pch), plot and axis titles (main, xlab and ylab) and some tricks to avoid points overlapping (method = \"jitter\" or method=\"stacked\"). Also, we have used the function par() to arrange the plots integrated as a single plot. This is a very useful function that can be used to set or query many graphical parameters (see below). The arguments mfrow and mfcol are very useful to place graphs indicating the row and cols (or cols and row in mfcol). However, any other graph customization can be included here to avoid reapeat it during the plot.\nDo you think, you can answer better the questions now?\nBeyond some basic examples of plotting in R, the take-home message of this example is that the type of plot and the plot parameters (in this case the scale) can be essential for correct interpretation of the data and if they are not properly adjusted the plot can be strongly misleading.\nFurther, to compare three conditions, we needed to make three independent plots. However, in the table, there are actually six conditions, and it is easy to imagine a table with more conditions. How could you plot that? Here is where the generation of a datamatrix table, as shown in Lesson 12 is very important.\n\nZF_stacked &lt;- stack(ZFdata)\n\nboxplot(ZF_stacked$values ~ ZF_stacked$ind,  col=c(rgb(1,0,0,0.5),rgb(0,1,0,0.5),rgb(0,0,1,0.5),rgb(1,0.5,0,0.5),rgb(0.5,0.5,0.5,0.5),rgb(0,1,1,0.5)))\ncolorines=c(rgb(1,0,0,0.5),rgb(0,1,0,0.5),rgb(0,0,1,0.5),rgb(1,0.5,0,0.5),rgb(0.5,0.5,0.5,0.5),rgb(0,1,1,0.5)) #define the colors for the whole analysis\nboxplot(ZF_stacked$values ~ ZF_stacked$ind,  col=colorines)\n\n\n\nstripchart(ZF_stacked$values ~ ZF_stacked$ind, vertical = TRUE, method=\"jitter\", col=colorines, pch=19, cex=1, ylab=\"Number of cells\", xlab=\"Plasmid\")\n\n\n\n#what about barplot?\nmeans &lt;- aggregate(values ~ ind, data=ZF_stacked, mean) #you can use by() or tapply()\nbarplot(means$values, ylim=c(0,120), col=colorines, ylab=\"Number of cells\", xlab=\"Plasmid\")\n\n\n\n\nThe stripchart and the boxplot strongly suggest that NC2s is probably the strongest transcript, but that is not shown in the barplot. These plots clearly show that barplots are intended for single values (categorical data) and can mislead your conclusions."
  },
  {
    "objectID": "r5.html#quick-exercise-ii",
    "href": "r5.html#quick-exercise-ii",
    "title": "R5: Base plots in R",
    "section": "2.2 Quick exercise (II)",
    "text": "2.2 Quick exercise (II)\nFor this exercise we are going to use a dataset called zebrafish_data.csv. This file contains the results of an experiment in which a collaborator scored the number of metastatic cancer cells upon the expression of different transcripts of the EFNA3 gene. Each transcript is cloned into a pLoC plasmid, and we have negative (empty plasmid) and positive controls (wt EFNA3 transcript), as well as four transcript mutants. Let’s import and check the data.\n\n# read data\nZFdata &lt;- read.csv(\"data/Zebrafish_data.csv\")\nstr(ZFdata)\n\n'data.frame':   41 obs. of  6 variables:\n $ pLoC : int  36 32 10 26 15 23 17 14 44 12 ...\n $ EFNA3: int  35 33 17 25 89 36 40 36 35 37 ...\n $ NC1  : int  58 26 26 18 20 24 10 31 28 26 ...\n $ NC1s : int  11 11 19 12 12 20 7 104 116 11 ...\n $ NC2  : int  53 37 56 48 27 29 22 79 22 18 ...\n $ NC2s : int  40 43 19 18 33 29 29 25 28 47 ...\n\n\nHow would you construct barplots of the data from the six experimental conditions?\n\n hist(ZFdata) barplot(ZFdata) barplot(ZFdata$pLoC), and the same for each construct hist(ZFdata$pLoC), and the same for each construct\n\nLet’s see some examples:\n\n# some plots\nbarplot(ZFdata)\n\nError in barplot.default(ZFdata): 'height' must be a vector or a matrix\n\nbarplot(ZFdata$pLoC)\n\n\n\n\n\n\n\npar(mfrow = c(1, 3))  #arrange the three plots in a row \n# we include a plot title with 'main'\nbarplot(ZFdata$pLoC, col = \"red\", main = \"pLoc\")\nbarplot(ZFdata$EFNA3, col = \"green\", main = \"EFNA3\")\nbarplot(ZFdata$NC1s, col = \"blue\", main = \"NC1s\")\n\n\n\n\n\n\n\npar(mfrow = c(2, 3))  #arrange the six plots in two rows\n# note the 'method' option\nstripchart(ZFdata$pLoC, main = \"pLoc\")\nstripchart(ZFdata$pLoC, method = \"stack\", col = \"red\", main = \"pLoc\")\nstripchart(ZFdata$pLoC, method = \"overplot\", col = \"red\", main = \"pLoc\")\nstripchart(ZFdata$pLoC, method = \"jitter\", col = \"red\", main = \"pLoc\")\nstripchart(ZFdata$EFNA3, method = \"stack\", col = \"green\", main = \"EFNA3\")\nstripchart(ZFdata$NC1s, method = \"stack\", col = \"blue\", main = \"N1cs\")\n\n\n\n\n\n\n\n# now histograms\npar(mfrow = c(1, 3))  #arrange the three plots in a row \nhist(ZFdata$pLoC, col = \"red\", main = \"pLoc\")\nhist(ZFdata$EFNA3, col = \"green\", main = \"EFNA3\")\nhist(ZFdata$NC1s, col = \"blue\", main = \"N1cs\")\n\n\n\n\n\n\n\n\nNow try to answer some questions about your data and obtained plots:\n1. Which construct has the strongest impact on the dissemination of metastatic cells?\n\n The empty plasmid pLoC WT EFNA3 NC1 NC1s NC2 NC2s I cannot say\n\n2. Which plot represent best these data?\n\n Histogram Barplot Boxplot Stripchart I am not sure\n\n3. Does a boxplot represent the same information than a histogram?\n\n No, not at all Yes, they are the same Yes, but a boxplot will show best the differences between my samples Yes, but a histogram will show best the differences between my samples\n\n4. Does a barplot represent the same information than a boxplot?\n\n No, a barplot represents data frequencies/distribution No, boxplots and histograms represent data frequencies/distribution Yes, they alike\n\nNow, we are going to represent the same data again, introducing some more customization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCan you reproduce the above plots?\n\n\n\nAnswer\n\n# new par settings\npar(mfrow = c(1, 3), cex.lab = 1, cex = 1, lwd = 2)\n# plotting\nhist(ZFdata$pLoC, col = rgb(1, 0, 0, 0.5), main = \"pLoc\", ylim = c(0,\n    20), xlim = c(0, 120), xlab = \"Number of Metastatic cells\")\nhist(ZFdata$EFNA3, col = rgb(0, 1, 0, 0.5), main = \"EFNA3\", ylim = c(0,\n    20), xlim = c(0, 120), xlab = \"Number of Metastatic cells\")\nhist(ZFdata$NC1s, col = rgb(0, 0, 1, 0.5), main = \"NC1s\", ylim = c(0,\n    20), xlim = c(0, 120), xlab = \"Number of Metastatic cells\")\n\nstripchart(ZFdata$pLoC, method = \"jitter\", pch = 19, col = rgb(1,\n    0, 0, 0.5), vertical = TRUE, main = \"pLoc\", ylim = c(0, 120),\n    xlab = \"Number of Metastatic cells\")\nstripchart(ZFdata$EFNA3, method = \"jitter\", pch = 19, col = rgb(0,\n    1, 0, 0.5), vertical = TRUE, main = \"EFNA3\", ylim = c(0,\n    120), xlab = \"Number of Metastatic cells\")\nstripchart(ZFdata$EFNA3, method = \"jitter\", pch = 19, col = rgb(0,\n    1, 0, 0.5), vertical = TRUE, main = \"EFNA3\", ylim = c(0,\n    120), xlab = \"Number of Metastatic cells\")\n\nboxplot(ZFdata$pLoC, col = rgb(1, 0, 0, 0.5), ylim = c(0, 120),\n    xlab = \"Number of Metastatic cells\", main = \"pLoc\")\nboxplot(ZFdata$EFNA3, col = rgb(0, 1, 0, 0.5), ylim = c(0, 120),\n    xlab = \"Number of Metastatic cells\", main = \"EFNA3\")\nboxplot(ZFdata$NC1s, col = rgb(0, 0, 1, 0.5), ylim = c(0, 120),\n    xlab = \"Number of Metastatic cells\", main = \"N1cs\")\n\n\nDo you think, you can answer better the questions now?\nBeyond some basic examples of plotting in R, the take-home message of this example is that the type of plot and the plot parameters (in this case the scale) can be essential for correct interpretation of the data and if they are not properly adjusted the plot can be strongly misleading.\nThe stripchart and the boxplot strongly suggest that NC2s is probably the strongest transcript, but that is not shown in the barplot. These plots clearly show that barplots are intended for single values (categorical data) and can mislead your conclusions."
  },
  {
    "objectID": "r5.html#plot-grouped-data",
    "href": "r5.html#plot-grouped-data",
    "title": "R5: Base plots in R",
    "section": "2.3 Plot grouped data",
    "text": "2.3 Plot grouped data\nWe will still use the data from the zebrafish experiment here\nIn the previous plots, in order to compare three conditions, we needed to make three independent plots. However, in the table, there are six conditions, and it is not very difficult to imagine experiments that might result in a table with even more conditions. How could you plot that? The key question is, different conditions means different variables? In other words:\nHow many variables are there in the Zebrafish dataset?\n\n 3 variables, WT, empty plasmid and 4 mutants 6, one for each expressed transcript 2 variables, the (1) plasmid/expressed transcript and (2) the number of metastatic cells\n\nIn data analysis (check Lesson R6), particularly when you want to compare many variables in different groups, it is more handy to create a stacked table or datamatrix. Stacked table are also often referred to as narrow tables. In contrast, the tables with different conditions (of a same variable) in different columns are named wide table or unstacked. The code below shows how to stack and plot your data by groups using the function stack().\n\n# Reshape the table for 1 column per variable with\n# `stack()`\n\nZF_stacked &lt;- stack(ZFdata)\n# now check the result of stack\nstr(ZF_stacked)\n\n'data.frame':   246 obs. of  2 variables:\n $ values: int  36 32 10 26 15 23 17 14 44 12 ...\n $ ind   : Factor w/ 6 levels \"pLoC\",\"EFNA3\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\nhead(ZF_stacked)\n\n  values  ind\n1     36 pLoC\n2     32 pLoC\n3     10 pLoC\n4     26 pLoC\n5     15 pLoC\n6     23 pLoC\n\n# you can also define a colors vector that can be reused\ncolorines = c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,\n    1, 0.5), rgb(1, 0.5, 0, 0.5), rgb(0.5, 0.5, 0.5, 0.5), rgb(0,\n    1, 1, 0.5))\n\n# and build the plots\nboxplot(ZF_stacked$values ~ ZF_stacked$ind, col = colorines)\n\n\n\n\n\n\n\nstripchart(ZF_stacked$values ~ ZF_stacked$ind, vertical = TRUE,\n    method = \"jitter\", col = colorines, pch = 19, cex = 1, ylab = \"Number of cells\",\n    xlab = \"Plasmid\")"
  },
  {
    "objectID": "r5.html#quick-exercise-iii",
    "href": "r5.html#quick-exercise-iii",
    "title": "R5: Base plots in R",
    "section": "2.5 Quick exercise (III)",
    "text": "2.5 Quick exercise (III)\nCan you reproduce the plots below?\n\n\n\n\n\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nAnswer\n\n# create the data\nscores &lt;- sample(0:100, 45, replace = TRUE)\nheight &lt;- rnorm(45, 70, 2)\nteams &lt;- as.factor(rep(c(LETTERS[1:3]), times = 15))\n\n# set up the par\npar(mfrow = c(2, 2))\n# plots\nplot(scores, type = \"line\", lwd = 2, main = \"Line Plot of Scores (Run Chart)\",\n    col = \"blue\", xlab = \"Samples\", ylab = \"Scores\")\n\nWarning in plot.xy(xy, type, ...): plot type 'line' will be truncated to first\ncharacter\n\npoints(scores, col = \"red\", pch = 19)\n\nhist(height, main = \"Histogram of Heights\", col = \"aquamarine3\",\n    xlab = \"Height\")\n\nplot(teams, scores, main = \"Comparative Boxplots | Scores by Teams\",\n    col = \"lightskyblue1\", xlab = \"Teams\", ylab = \"Scores\")\n\nplot(scores ~ height, main = \"Scatter Diagram | Scores by Height\",\n    col = \"brown3\", xlab = \"Height\", ylab = \"Scores\", pch = 19,\n    cex = 1.2)"
  },
  {
    "objectID": "r5.html#why-do-we-make-plots",
    "href": "r5.html#why-do-we-make-plots",
    "title": "R5: Base plots in R",
    "section": "",
    "text": "Data visualization is a very important part of a data analysis because they can efficiently summarize large amounts of data in a graphical format and reveal new insights that are difficult to understand from the raw data. From a researcher’s or data analyst’s perspective, plotting datasets also helps you become familiar with the data and plan next steps in your analysis. It also allows you to identify statistical pitfalls with an initial plot.\n\n\n\n\n\n\nAnscombe’s quartet. Each of the four datasets consists of 11 data points (orange points) and have nearly identical statistical properties, including means, sample variances, Pearson’s sample correlation (r), and linear regression line (blue lines). Modified from Anscombe FJ. Graphs in statistical analysis. Am Stat 1973;27:17–21\n\n\nThe above Figure is a well-known quartet highlights the importance of graphing data prior to analysis, and why statistical reviewers often ask for such graphs to be made available. As you can see the Pearson r2 is very similar, but the data are actually very different. Check out also the Dinosaurus example in the reference 2 below."
  },
  {
    "objectID": "r5.html#which-plot-should-i-do-with-my-data",
    "href": "r5.html#which-plot-should-i-do-with-my-data",
    "title": "R5: Base plots in R",
    "section": "",
    "text": "There are many different types of graphs, each with their own strengths and use cases. One of the trickiest parts of the analysis process is choosing the right way to represent your data with one of these visualizations. The wrong chart can lead to confusion or misinterpretation of the data (see some examples of bad charts here).\nFrom a classical data analysis perspective, the first consideration in choosing the right plot is the nature of your variables. Some charts are recommended for numerical data (quantitative variables) and others for categorical data (qualitative variables). Then you should consider what role you want your data visualization to play, i.e., what question you want to answer or what message you want to convey. This depends on the number of variables as well as their distribution, grouping or correlation. There are some best practice guidelines, but ultimately you need to consider what is best for your data. What do you want to show? What chart best conveys your message? Is it a comparison between groups? Is it a frequency distribution of 1 variable?\n\n\n\nThe ExtremePresentation method for choosing a plot or chart.\n\n\nFor a guidance, you can use the Chartchooser above, by Andrew Abela, or the interactive website Visual Vocabulary here.\nYou can see a description of some of the most common plot types, with many examples on books and dedicated R websites. I suggest to take a look to some of the suggested References below, or some quick examples, like those here or here. Rather than going through a wide list of plots, we are going to use some examples to learn some basic plotting and see the effect of plot selection in order to understand your data and use them to answer questions."
  },
  {
    "objectID": "r1.html",
    "href": "r1.html",
    "title": "R1: Variables, Operators and data structures",
    "section": "",
    "text": "In programming, a variable is a symbolic name or identifier that represents a storage location in the computer’s memory. Thus, variables provide a means to access (and manipulate) data stored in the computer’s memory from within the program. In practice a variable acts as a container for storing data or values.\nData Objects. In R, data objects1 are the fundamental entities that hold data or information. They are the variables or entities that you create and manipulate in your R code. Data objects can include vectors, matrices, data frames, lists, etc. Essentially, anything that can store data or represent information in R is considered a data object. data Objects are of course stored in the computer’s memory, hence they are referenced and manipulated using variables.\nData Types. Data types in R refer to the specific classification or categorization of the values that can be stored in data objects. R has several basic data types, also known as atomic data types2. These data types represent different kinds of data, such as logical (boolean), numeric (double and integer), complex, character, and raw. Each data type has its own set of operations and behaviors associated with it. For example, logical data types can take values of TRUE, FALSE, and NA (representing missing values), while numeric data types can store numerical values.\nIn R, variables can hold different data types without the need to declare them in advance. Values are assigned to variables using the assignment operator &lt;-. The symbol = can also be used, but it is not standard syntax and not recommended.\nVariable names may contain dots and underscores but cannot begin with a number (or underscore).\nIn R, the class of a variable refers to the specific type or category of the object that the variable represents. It provides information about how the object is handled by R’s internal functions and methods. Classes in R are typically associated with specific data structures or types. For example, a variable can have a class such as “numeric” if it represents a numeric data type, “character” if it represents a character string, “data.frame” if it represents a data frame, and so on. The class of a variable is important because it influences how R treats the object and determines which functions or methods can be applied to it. Different classes have different behaviors and may have specific functions or methods associated with them.\nFinally, in R, NA, NaN, and NULL are special values used to represent specific situations or indicate missing or undefined data:\n\nNA: NA stands for “Not Available” or “Missing Value”. It is used to represent missing or undefined values in R. The value NA belong to different data types, such as logical, numeric, character, etc. For example, if a value is missing in a numeric vector, it can be represented as NA. NA values are often ignored or excluded from computations or operations unless explicitly handled.\nNaN: NaN stands for “Not a Number”. It is a special value used to represent undefined or unrepresentable results of arithmetic operations that do not yield a numeric value. NaN is typically encountered when performing calculations that involve undefined operations, such as dividing zero by zero or taking the square root of a negative number.\nNULL: NULL is a special object in R that represents the absence of a value or an empty object. It is often used to indicate the absence of a valid object or as a placeholder. NULL is different from NA, as it represents the absence of any value or object altogether.\n\n\nA_Number &lt;- 53\nA_Number\n\n[1] 53\n\nA_Text &lt;- \"R rocks!\"\nA_Text\n\n[1] \"R rocks!\"\n\nA_Logical &lt;- TRUE  #one of the possible values of a boolean data type\nA_Logical\n\n[1] TRUE\n\nA_Logical &lt;- true\n\nError in eval(expr, envir, enclos): object 'true' not found\n\nA_NA &lt;- NA\nA_NA\n\n[1] NA\n\nA_NA &lt;- na\n\nError in eval(expr, envir, enclos): object 'na' not found\n\n\nTo summarize, variables are used refer to specific data objects that are the containers or entities that hold data. The data types specify the kind of values that can be stored within data objects. Data types determine how the data is interpreted and how operations are performed on the data objects."
  },
  {
    "objectID": "r1.html#vectors",
    "href": "r1.html#vectors",
    "title": "R1: Variables, Operators and data structures",
    "section": "4.1 Vectors",
    "text": "4.1 Vectors\nA vector is a (one dimensional) collection of elements, all of the same type. Vectors play an essential role in R, so much that R can be considered a vectorized language. That means that operations are applied to each element of the vector automatically, without the need to loop through the elements of the vector as it would be necessary in almost any other language such a python. The most common way to generate a vector is using the combine or concatenate function c() providing the list of elements separated by commas. We can accessing individual elements of the vector using brackets and the index of the elements.\n\n\n\n\n\n\nWarning\n\n\n\nVectors are indexed starting from 1 instead of 0, following a 1-based indexing convention. This means that the first element of a vector is accessed using the index 1, not 0 as in some other programming languages such as python.\n\n\n\nv1 &lt;- c(1, 11:13)  #the concatenate function creates a vector out of the values\nclass(v1)\n\n[1] \"numeric\"\n\nis.numeric(v1)\n\n[1] TRUE\n\nv4 &lt;- as.character(v1)  #change the data type of the elements in v1\nv4\n\n[1] \"1\"  \"11\" \"12\" \"13\"\n\nv5 &lt;- c(1, 3, 27)\nv5[1]  #elements are retrieved by using square brackets and the index of the element\n\n[1] 1\n\nv5[0]  #Warning! first element is index 1\n\nnumeric(0)\n\n# we can 'add' labels (names) to the elements of a vector\nnames(v5)\n\nNULL\n\nnames(v5) &lt;- c(\"PHY\", \"BIO\", \"BQ\")\nv5\n\nPHY BIO  BQ \n  1   3  27 \n\nnames(v5)\n\n[1] \"PHY\" \"BIO\" \"BQ\" \n\nv5[\"BIO\"]  # then, we can retrieve elements by their label\n\nBIO \n  3 \n\nsum(v5)\n\n[1] 31\n\nv6 &lt;- c(\"PHY\", \"BIO\", \"BQ\")\n# cheching the presence of an element in a vector\n\"BQ\" %in% v6\n\n[1] TRUE\n\n\"BQ\" %in% v5\n\n[1] FALSE\n\n\"BQ\" %in% names(v5)\n\n[1] TRUE\n\n\"PHY\" %in% \"BIOPHYSICS\"  #Warning: it does NOT checks for substrings in strings\n\n[1] FALSE\n\nnames(v5) == \"BIO\"\n\n[1] FALSE  TRUE FALSE\n\nwhich(names(v5) == \"BIO\")  #returns the index(es) of the elements matching the comparison\n\n[1] 2\n\n\n\n4.1.1 Generation of vectors of periodic sequences\nR has a number of facilities for generating commonly used sequences of numbers or characters. The most common are the colon operator :, function seq() and function rep(). See the next examples:\n\n2:7\n\n[1] 2 3 4 5 6 7\n\n7:2\n\n[1] 7 6 5 4 3 2\n\nletters[10:13]\n\n[1] \"j\" \"k\" \"l\" \"m\"\n\nLETTERS[20:17]\n\n[1] \"T\" \"S\" \"R\" \"Q\"\n\nseq(2, 7)\n\n[1] 2 3 4 5 6 7\n\nseq(from = 2, to = 9, by = 0.5)\n\n [1] 2.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5 6.0 6.5 7.0 7.5 8.0 8.5 9.0\n\nseq(from = -5, length = 20, by = 0.2)\n\n [1] -5.0 -4.8 -4.6 -4.4 -4.2 -4.0 -3.8 -3.6 -3.4 -3.2 -3.0 -2.8 -2.6 -2.4 -2.2\n[16] -2.0 -1.8 -1.6 -1.4 -1.2\n\nrep(c(\"A\", \"B\", \"C\"), times = 3)\n\n[1] \"A\" \"B\" \"C\" \"A\" \"B\" \"C\" \"A\" \"B\" \"C\"\n\nrep(c(\"A\", \"B\", \"C\"), each = 3)\n\n[1] \"A\" \"A\" \"A\" \"B\" \"B\" \"B\" \"C\" \"C\" \"C\"\n\nrep(c(\"A\", \"B\", \"C\"), c(2, 3, 0))\n\n[1] \"A\" \"A\" \"B\" \"B\" \"B\"\n\nz &lt;- c(2, 1, 3, 4, 9, 6, -1)\nsort(z)\n\n[1] -1  1  2  3  4  6  9\n\norder(z)\n\n[1] 7 2 1 3 4 6 5\n\nz[order(z)]\n\n[1] -1  1  2  3  4  6  9\n\nrange(z)\n\n[1] -1  9\n\n\nNote that function order() returns of the element in the current vector sorted according to the value of the element. In the example above the smallest number is -1 that occupies position 7 (index 7) in the vector. Thus, the first element in the output of function order() is 7. The second smaller is number 1, that occupies position the second position in the original vector(index 2), thus the second element in the output of the function is 2 and so on."
  },
  {
    "objectID": "r1.html#factors",
    "href": "r1.html#factors",
    "title": "R1: Variables, Operators and data structures",
    "section": "4.2 Factors",
    "text": "4.2 Factors\nFactors are used to record categorical (a.k.a nominal) variables. The function factor() takes a vector and identifies all the different values present in it, then each value is assumed to be a different category or level. The levels represent the distinct categories or groups that the variable can take on.\n\n# the following vectors represent the initial and final\n# weight of 15 individuals\nW.initial &lt;- c(55, 65, 70, 93, 71, 50, 61, 80, 81, 60, 43, 77,\n    78, 65, 100)  #initial weight\nW.final &lt;- c(52, 66, 71, 92, 61, 51, 55, 81, 70, 52, 44, 78,\n    77, 60, 90)  #final weight\n# the following character vector represent the treatment\n# received by each individual\nTxt &lt;- c(\"D3\", \"D2\", \"D3\", \"D3\", \"D1\", \"D3\", \"D2\", \"D2\", \"D2\",\n    \"D1\", \"D3\", \"D2\", \"D2\", \"D1\", \"D1\")  #Treatment\nTxt\n\n [1] \"D3\" \"D2\" \"D3\" \"D3\" \"D1\" \"D3\" \"D2\" \"D2\" \"D2\" \"D1\" \"D3\" \"D2\" \"D2\" \"D1\" \"D1\"\n\nclass(Txt)\n\n[1] \"character\"\n\nTxt &lt;- as.factor(Txt)  #Transforms character vector Txt into a factor\nTxt\n\n [1] D3 D2 D3 D3 D1 D3 D2 D2 D2 D1 D3 D2 D2 D1 D1\nLevels: D1 D2 D3\n\ntable(Txt)\n\nTxt\nD1 D2 D3 \n 4  6  5 \n\nWeight.gain &lt;- W.final - W.initial  #calculates weight gain\nWeight.gain\n\n [1]  -3   1   1  -1 -10   1  -6   1 -11  -8   1   1  -1  -5 -10\n\nwhich(Txt == \"D1\")  #index of the individuals who received treatment D1\n\n[1]  5 10 14 15\n\nWeight.gain[which(Txt == \"D2\")]  #Weigh gain of individuals who received treatment D1\n\n[1]   1  -6   1 -11   1  -1\n\nmean(Weight.gain[which(Txt == \"D3\")])  # mean Weigh gain of individuals who received treatment D3\n\n[1] -0.2\n\nby(data = Weight.gain, INDICES = Txt, FUN = mean)  #calculates weight gain mean for each treatment group\n\nTxt: D1\n[1] -8.25\n------------------------------------------------------------ \nTxt: D2\n[1] -2.5\n------------------------------------------------------------ \nTxt: D3\n[1] -0.2"
  },
  {
    "objectID": "r1.html#matrices-and-arrays",
    "href": "r1.html#matrices-and-arrays",
    "title": "R1: Variables, Operators and data structures",
    "section": "4.3 Matrices and arrays",
    "text": "4.3 Matrices and arrays\nA matrix is a two-dimensional data structure that consists of rows and columns. It is used to store data elements of the same data type arranged in a rectangular grid-like structure. To retrieve a single element, specify the row and column indices within square brackets. An array is a multi-dimensional data structure that extends the concept of matrices to more than two dimensions. It can store elements of the same data type in a grid-like structure with multiple dimensions.\n\nMyVector &lt;- 1:9\nMyVector\n\n[1] 1 2 3 4 5 6 7 8 9\n\nMyMatrix &lt;- matrix(MyVector, ncol = 3)  #geneates a 3 colunm matrix with elements from MyVector \nMyMatrix\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\ndim(Matrix)  #number of rows and columns\n\nError in eval(expr, envir, enclos): object 'Matrix' not found\n\n# accessing individual elements:\nMyMatrix[2, ]\n\n[1] 2 5 8\n\nMyMatrix[, 3]\n\n[1] 7 8 9\n\nMyMatrix[3, 2]\n\n[1] 6\n\n# accessing several elements:\nMyMatrix[2:3, 1:2]\n\n     [,1] [,2]\n[1,]    2    5\n[2,]    3    6\n\n# basic aritmetic operations:\nMyMatrix * 2\n\n     [,1] [,2] [,3]\n[1,]    2    8   14\n[2,]    4   10   16\n[3,]    6   12   18\n\nMyMatrix + 5\n\n     [,1] [,2] [,3]\n[1,]    6    9   12\n[2,]    7   10   13\n[3,]    8   11   14\n\nt(MyMatrix)  #flips a matrix over its main diagonal (transposition)\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n\nMyVector2 &lt;- 1:12\nMyArray &lt;- array(MyVector2, dim = c(2, 2, 3))  #geneates a 2x2x3 array with elements from MyVector2 :\n# accessing individual elements\nMyArray[, , 2]\n\n     [,1] [,2]\n[1,]    5    7\n[2,]    6    8"
  },
  {
    "objectID": "r1.html#data-frames",
    "href": "r1.html#data-frames",
    "title": "R1: Variables, Operators and data structures",
    "section": "4.4 Data frames",
    "text": "4.4 Data frames\nData frames are two-dimensional tabular data structures where each column is a vector. Unlike matrices, data frames allow columns of different data types within the same structure. This flexibility allows you to handle mixed or heterogeneous data, such as storing numeric measurements, categorical variables, dates, and more within a single data frame. Data frames are created with the data.frame() function and the elements can be retrieved with the square bracket notation specifying the row and column indexes, as we saw for matrices. In addition, column vectors can be retrieved using the $ operator (list-subset operator).\n\n# see @factors-code above\nW.initial &lt;- c(55, 65, 70, 93, 71, 50, 61, 80, 81, 60, 43, 77,\n    78, 65, 100)\nW.final &lt;- c(52, 66, 71, 92, 61, 51, 55, 81, 70, 52, 44, 78,\n    77, 60, 90)\nTxt &lt;- c(\"D3\", \"D2\", \"D3\", \"D3\", \"D1\", \"D3\", \"D2\", \"D2\", \"D2\",\n    \"D1\", \"D3\", \"D2\", \"D2\", \"D1\", \"D1\")\nDietDrugs &lt;- data.frame(W.initial, W.final, Txt)  #creates a data frame with 3 columns\nDietDrugs\n\n   W.initial W.final Txt\n1         55      52  D3\n2         65      66  D2\n3         70      71  D3\n4         93      92  D3\n5         71      61  D1\n6         50      51  D3\n7         61      55  D2\n8         80      81  D2\n9         81      70  D2\n10        60      52  D1\n11        43      44  D3\n12        77      78  D2\n13        78      77  D2\n14        65      60  D1\n15       100      90  D1\n\ndim(DietDrugs)\n\n[1] 15  3\n\n# Accessing elements:\nDietDrugs[, 2]\n\n [1] 52 66 71 92 61 51 55 81 70 52 44 78 77 60 90\n\nDietDrugs[1, ]\n\n  W.initial W.final Txt\n1        55      52  D3\n\nDietDrugs[3, 1]\n\n[1] 70\n\nDietDrugs$Txt\n\n [1] \"D3\" \"D2\" \"D3\" \"D3\" \"D1\" \"D3\" \"D2\" \"D2\" \"D2\" \"D1\" \"D3\" \"D2\" \"D2\" \"D1\" \"D1\"\n\nDietDrugs$Txt[3]\n\n[1] \"D3\"\n\nDietDrugs[which(DietDrugs$Txt == \"D1\"), ]\n\n   W.initial W.final Txt\n5         71      61  D1\n10        60      52  D1\n14        65      60  D1\n15       100      90  D1\n\n# view the top or bottom rows of a data frame:\nhead(DietDrugs)\n\n  W.initial W.final Txt\n1        55      52  D3\n2        65      66  D2\n3        70      71  D3\n4        93      92  D3\n5        71      61  D1\n6        50      51  D3\n\ntail(DietDrugs)\n\n   W.initial W.final Txt\n10        60      52  D1\n11        43      44  D3\n12        77      78  D2\n13        78      77  D2\n14        65      60  D1\n15       100      90  D1\n\n# add row names\nPatients &lt;- paste(\"Patient\", 1:15, sep = \"\")\nrownames(DietDrugs) &lt;- Patients\n# add new columns (method #1):\nDietDrugs$W.gain &lt;- DietDrugs$W.final - DietDrugs$W.initial\nDietDrugs\n\n          W.initial W.final Txt W.gain\nPatient1         55      52  D3     -3\nPatient2         65      66  D2      1\nPatient3         70      71  D3      1\nPatient4         93      92  D3     -1\nPatient5         71      61  D1    -10\nPatient6         50      51  D3      1\nPatient7         61      55  D2     -6\nPatient8         80      81  D2      1\nPatient9         81      70  D2    -11\nPatient10        60      52  D1     -8\nPatient11        43      44  D3      1\nPatient12        77      78  D2      1\nPatient13        78      77  D2     -1\nPatient14        65      60  D1     -5\nPatient15       100      90  D1    -10\n\n# add new columns (method #2):\nW.foldchange &lt;- round(DietDrugs$W.final/DietDrugs$W.initial,\n    2)\nDietDrugs &lt;- cbind(DietDrugs, W.foldchange)\nDietDrugs\n\n          W.initial W.final Txt W.gain W.foldchange\nPatient1         55      52  D3     -3         0.95\nPatient2         65      66  D2      1         1.02\nPatient3         70      71  D3      1         1.01\nPatient4         93      92  D3     -1         0.99\nPatient5         71      61  D1    -10         0.86\nPatient6         50      51  D3      1         1.02\nPatient7         61      55  D2     -6         0.90\nPatient8         80      81  D2      1         1.01\nPatient9         81      70  D2    -11         0.86\nPatient10        60      52  D1     -8         0.87\nPatient11        43      44  D3      1         1.02\nPatient12        77      78  D2      1         1.01\nPatient13        78      77  D2     -1         0.99\nPatient14        65      60  D1     -5         0.92\nPatient15       100      90  D1    -10         0.90"
  },
  {
    "objectID": "r1.html#lists",
    "href": "r1.html#lists",
    "title": "R1: Variables, Operators and data structures",
    "section": "4.5 Lists",
    "text": "4.5 Lists\nA list is a data structure consisting of an ordered collection of (potentially different) objects. They are constructed using the function list(). The elements (a.k.a components) in a list are numbered and can be accessed using a double bracket notation and the index of the component. Oftentimes, the elements in a list are also named. In this case, the components can be accessed using the double square bracket and the name of the item instead of its index. Additionally names components can be retrieved using the $ operator (list-subset operator).\n\n# A list of students recording different features notice\n# that each element can be a different type of object or\n# data structure\nStudents &lt;- list(Names = c(\"Ana\", \"Juan\", \"Mar\"), Age = c(20,\n    20, 21), Sex = factor(c(\"F\", \"M\", \"F\")), Courses = list(c(\"HPBBM\",\n    \"BD\", \"BIBMS\"), c(\"HPBBM\", \"MEB\", \"BIBMS\"), c(\"BD\", \"BQS\")),\n    Grades = list(c(7, 9, 8), c(5, 5, 6), c(10, 9)))\nStudents\n\n$Names\n[1] \"Ana\"  \"Juan\" \"Mar\" \n\n$Age\n[1] 20 20 21\n\n$Sex\n[1] F M F\nLevels: F M\n\n$Courses\n$Courses[[1]]\n[1] \"HPBBM\" \"BD\"    \"BIBMS\"\n\n$Courses[[2]]\n[1] \"HPBBM\" \"MEB\"   \"BIBMS\"\n\n$Courses[[3]]\n[1] \"BD\"  \"BQS\"\n\n\n$Grades\n$Grades[[1]]\n[1] 7 9 8\n\n$Grades[[2]]\n[1] 5 5 6\n\n$Grades[[3]]\n[1] 10  9\n\nstr(Students)  #shows the structure of the data object\n\nList of 5\n $ Names  : chr [1:3] \"Ana\" \"Juan\" \"Mar\"\n $ Age    : num [1:3] 20 20 21\n $ Sex    : Factor w/ 2 levels \"F\",\"M\": 1 2 1\n $ Courses:List of 3\n  ..$ : chr [1:3] \"HPBBM\" \"BD\" \"BIBMS\"\n  ..$ : chr [1:3] \"HPBBM\" \"MEB\" \"BIBMS\"\n  ..$ : chr [1:2] \"BD\" \"BQS\"\n $ Grades :List of 3\n  ..$ : num [1:3] 7 9 8\n  ..$ : num [1:3] 5 5 6\n  ..$ : num [1:2] 10 9\n\n# Accessing elements:\nStudents[[1]]\n\n[1] \"Ana\"  \"Juan\" \"Mar\" \n\nStudents$Names\n\n[1] \"Ana\"  \"Juan\" \"Mar\" \n\nStudents$Sex\n\n[1] F M F\nLevels: F M\n\nStudents[[4]]\n\n[[1]]\n[1] \"HPBBM\" \"BD\"    \"BIBMS\"\n\n[[2]]\n[1] \"HPBBM\" \"MEB\"   \"BIBMS\"\n\n[[3]]\n[1] \"BD\"  \"BQS\"\n\nStudents[[4]][[2]]\n\n[1] \"HPBBM\" \"MEB\"   \"BIBMS\"\n\nStudents[[4]][[2]][1]\n\n[1] \"HPBBM\""
  },
  {
    "objectID": "r1.html#footnotes",
    "href": "r1.html#footnotes",
    "title": "R1: Variables, Operators and data structures",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nEverything in R is an object (constants, data structures, functions, graphs, etc.). Objects have a mode that describes how the object is stored and a class that describes how the object is handled by functions. The mode corresponds to what is called a class in other languages. Additionally, objects belong to a type, which basically coincides with the mode.↩︎\nNote that in R, atomic types are always stored as vectors, even when there is a single element.↩︎"
  },
  {
    "objectID": "r8.html",
    "href": "r8.html",
    "title": "R8: Plot your data in R - Episode II",
    "section": "",
    "text": "As we discussed in Lesson R5, exploratory data visualization is one of the greatest advantage of R. One can quickly go from idea to data to graph with a unique balance of flexibility and ease.\nThere are many graphing options available in R. You already know that the graphing capabilities that come with a basic installation of R are already quite useful. There are also a number of packages for creating advances graphs like grid, plotly, or lattice. In this course we chose to use ggplot2 because it is widely used and also the basis of many derivative packages for specific advanced plots. The main advantage of ggplot is that it breaks plots into components in a way that allows beginners to create relatively complex and aesthetically pleasing plots using an intuitive and relatively easy-to-remember syntax. Moreover, although we are not working on it, it belongs to the set of libraries tidyverse and it is very well integrated with them.\n\n\n\nFrom: https://ourcodingclub.github.io/tutorials/dataviz-beautification/\n\n\nI must say that ggplot2 is generally less intuitive for beginners. However, once you get used to it, even if you have to look for help or examples to obtain your plots, you will find that ggplot is amazingly powerful and allows you to create perfect plot, with a high level of detail. This is because it uses a “graphing grammar” (see Wilkinson et al.2000), the gg of ggplot2. This is similar to the way that learning a language grammar can help you construct hundreds of different sentences from a small number of verbs, nouns, and adjectives, rather than memorizing each sentence. Similarly, by learning a small amount of the basic components of ggplot2 and the elements of its grammar, you will be able to create hundreds of different plots to represent the data exactly as the way you think it’s the best way or even better. As with any language, the grammar of graphics can be flexible and we may omit some elements o add more elements of the same type, just like we can add diverse kinds of complements (place, time…) to a sentence.\nFrom a general perspective (see ref. 3), plots are composed of the data, the information you want to visualize, and a mapping, the description of how the data’s variables are mapped to aesthetic attributes. There are five mapping components (again from ref. 3):\n\nA layer is a collection of geometric elements and statistical transformations. Geometric elements, geoms for short, represent what you actually see in the plot: points, lines, polygons, maps, etc. Statistical transformations, stats for short, summarize the data: for example, binning and counting observations to create a histogram, or fitting a linear model.\nScales or aesthetic map is required to map values in the data space to values in the space. This includes the use of colour, shape or size. Scales also draw the legend and axes, which make it possible to read the original data values from the plot (an inverse mapping).\nA coord, or coordinate system, describes how data coordinates are mapped to the plane of the graphic. It also provides axes and gridlines to help read the graph. We normally use the Cartesian coordinate system, but a number of others are available, including polar coordinates and map projections.\nA facet specifies how (usually a factor type vector) to break up and display subsets of data as small multiples. This is also known as conditioning or latticing.\nA theme controls the finer points of display, like the font size and background colour. While the defaults in ggplot2 have been chosen with care, you may need to consult other references to create an attractive plot.\n\nLet’s see all those element through some examples.\n\n\nLet’s start strong. We are going to generate a complex plot in one code line using the EU Covid-19 vaccines table (publicly available at https://www.ecdc.europa.eu/en/publications-data/data-covid-19-vaccination-eu-eea and we have a file vaccines_EU_22oct2022.csv in our data folder.)\n\n#load the data\nlibrary(data.table)\nvaccines&lt;-fread('data/vaccines_EU_22oct2022.csv')\n#install & load ggplot2\nif(!require(ggplot2)) install.packages(\"ggplot2\", dependencies = TRUE)\n\nLoading required package: ggplot2\n\nlibrary(ggplot2)\n \n#step 1: create the plot object\nggplot(data = vaccines)\n\n\n\n\n\n\n\n\nThere are some alternative ways to create the plot than are useful for more complex plots. You can also create an object in the RStudio environment.\n\np &lt;- ggplot(data = vaccines)\nclass(p) \n\n[1] \"gg\"     \"ggplot\"\n\n\nAlso, you will see on many websites the use of the pipe (|&gt; or %&gt;% with dplyr()) as the first argument. This is very convenient to combine ggplot with other tidyverse packages, although we are not using that syntax in the following examples.\n\np &lt;- vaccines |&gt; ggplot()\n\nNow, we can add some data to generate a dot plot:\n\n(p &lt;- ggplot(vaccines, aes(x = YearWeekISO, y = log10(FirstDose), col=TargetGroup)) )\n\n\n\n\n\n\n\n\nWhat happened? Where are my points? We added the data and it allows to plot the axis, but we also need to add the type of plot, that is, the geometry layer. We usually build the final plot adding (just with +) more layers to the previous plot object.\n\n(p &lt;- p + geom_point())\n\n\n\n\n\n\n\n\nFinally, we would like to group our data:\n\nggplot(vaccines, aes(x = YearWeekISO, y = log10(FirstDose), col=TargetGroup), stat=mean) +\n    geom_point() + facet_wrap(~ ReportingCountry)\n\n\n\n\n\n\n\n\nThat is, quite a complex plot in just one code line."
  },
  {
    "objectID": "r8.html#example-1-advanced-plotting-with-ggplot-in-one-line",
    "href": "r8.html#example-1-advanced-plotting-with-ggplot-in-one-line",
    "title": "R8: Plot your data in R - Episode II",
    "section": "",
    "text": "Let’s start strong. We are going to generate a complex plot in one code line using the EU Covid-19 vaccines table (publicly available at https://www.ecdc.europa.eu/en/publications-data/data-covid-19-vaccination-eu-eea and we have a file vaccines_EU_22oct2022.csv in our data folder.)\n\n#load the data\nlibrary(data.table)\nvaccines&lt;-fread('data/vaccines_EU_22oct2022.csv')\n#install & load ggplot2\nif(!require(ggplot2)) install.packages(\"ggplot2\", dependencies = TRUE)\n\nLoading required package: ggplot2\n\nlibrary(ggplot2)\n \n#step 1: create the plot object\nggplot(data = vaccines)\n\n\n\n\n\n\n\n\nThere are some alternative ways to create the plot than are useful for more complex plots. You can also create an object in the RStudio environment.\n\np &lt;- ggplot(data = vaccines)\nclass(p) \n\n[1] \"gg\"     \"ggplot\"\n\n\nAlso, you will see on many websites the use of the pipe (|&gt; or %&gt;% with dplyr()) as the first argument. This is very convenient to combine ggplot with other tidyverse packages, although we are not using that syntax in the following examples.\n\np &lt;- vaccines |&gt; ggplot()\n\nNow, we can add some data to generate a dot plot:\n\n(p &lt;- ggplot(vaccines, aes(x = YearWeekISO, y = log10(FirstDose), col=TargetGroup)) )\n\n\n\n\n\n\n\n\nWhat happened? Where are my points? We added the data and it allows to plot the axis, but we also need to add the type of plot, that is, the geometry layer. We usually build the final plot adding (just with +) more layers to the previous plot object.\n\n(p &lt;- p + geom_point())\n\n\n\n\n\n\n\n\nFinally, we would like to group our data:\n\nggplot(vaccines, aes(x = YearWeekISO, y = log10(FirstDose), col=TargetGroup), stat=mean) +\n    geom_point() + facet_wrap(~ ReportingCountry)\n\n\n\n\n\n\n\n\nThat is, quite a complex plot in just one code line."
  },
  {
    "objectID": "r8.html#example-2-from-r-base-plot-to-personalized-ggplot",
    "href": "r8.html#example-2-from-r-base-plot-to-personalized-ggplot",
    "title": "R8: Plot your data in R - Episode II",
    "section": "2.1 Example 2: From R base plot to personalized ggplot",
    "text": "2.1 Example 2: From R base plot to personalized ggplot\nThe use of ggplot is usually associate to great, gorgeous charts and plots. However, once you learn how to use it and how adapt and re-adapt code to your data, you will probably use ggplot for every graph.\nIn the following code, we are going to use ggplot to solve the exercise 1 from Lesson R5.\n\n#create the same dataset\nset.seed(2023) #set a seed to obtain reproducible random data\n(GeneA &lt;- rnorm(50)) \n\n [1] -0.08378436 -0.98294375 -1.87506732 -0.18614466 -0.63348570  1.09079746\n [7] -0.91372727  1.00163971 -0.39926660 -0.46812305  0.32696208 -0.41274690\n[13]  0.56203647  0.66335826 -0.60289728  0.69837769  0.59584645  0.45209183\n[19]  0.89674396  0.57221651 -0.41165301 -0.29432715  1.21857396  0.24411143\n[25] -0.44515196 -1.84780364 -0.62882531 -0.86108069  1.51492030  2.73523893\n[31] -0.27487706  1.27665407 -0.81098034 -0.04492278 -0.63941238 -0.43835600\n[37]  0.50720220  1.12921920  0.97563765 -0.12460379  0.42833658  0.41872636\n[43]  0.43546649 -0.20426209  0.30235349  0.69435780  2.37306566  1.07597029\n[49]  0.33538478  0.75342823\n\n(GeneB &lt;- c(rep(-1, 30), rep(2, 20)) + rnorm(50))\n\n [1] -0.33561372 -2.09088266 -1.42277085  0.18340204  0.58482679  1.28085537\n [7] -3.06545705 -1.40811197 -0.69898543 -0.30338692 -0.01181613 -1.28406323\n[13] -2.92226747 -2.17371980  0.04428274 -1.13292810 -0.15512296 -1.37159255\n[19]  0.04758385 -0.07458432 -2.47860533 -1.92263494 -1.08490244 -1.86651004\n[25] -0.32495764 -1.08070491 -1.12559261 -1.38833109 -0.98317261 -2.12630659\n[31]  2.21835181  3.74303686  1.88042146  2.48617995  2.14136852  2.30796765\n[37]  2.99408134  1.48218823  1.19286361  0.07682104  0.61086149  2.42867002\n[43]  1.70621858  4.27999879  0.83548924  3.24086762  0.50491614  1.76836367\n[49]  1.17513326  0.67582686\n\n(tumor &lt;- factor(c(rep(\"Colon\", 30), rep(\"Lung\", 20))))\n\n [1] Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon\n[13] Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon\n[25] Colon Colon Colon Colon Colon Colon Lung  Lung  Lung  Lung  Lung  Lung \n[37] Lung  Lung  Lung  Lung  Lung  Lung  Lung  Lung  Lung  Lung  Lung  Lung \n[49] Lung  Lung \nLevels: Colon Lung\n\n#for ggplot it is more convenient to work with dataframes\ngenes &lt;- data.frame(tumor,GeneA,GeneB)\n\n#basic plots\n\n#geneA\nggplot(genes, aes(x=tumor, y=GeneA,color=tumor)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n#geneB with custom colors\nggplot(genes, aes(x=tumor, y=GeneB,fill=tumor)) +\n  scale_fill_manual(values=c(\"#999999\", \"#E69F00\")) +\n  geom_boxplot()\n\n\n\n\n\n\n\n#together\n#we need to adapt dataset with stack()\ngenes2 &lt;- cbind(stack(genes[,2:3]),tumor)\nnames(genes2) &lt;- c(\"Expression\",\"Gene\",\"Tumor\")\n#plot\np &lt;- ggplot(genes2, aes(x=Tumor, y=Expression,fill=Tumor)) +\n  scale_fill_manual(values=c(\"#999999\", \"#E69F00\")) +\n  geom_boxplot()\np #see the plot\n\n\n\n\n\n\n\n\n\nQuick exercise\nDo you remember how you did the boxplot in two panels with base R plots?\n\n#define the setup\npar(mfrow = c(1, 2)) \n\n#generate the two plots\nboxplot(GeneA ~ tumor, col=c(\"#999999\", \"#E69F00\"),ylim = c(-4, 5))\nboxplot(GeneB ~ tumor, col=c(\"#999999\", \"#E69F00\"),ylim = c(-4, 5))\n\n\n\n\n\n\n\n\nNow let’s try the same with ggplot:\nHow would you generate a two-panels boxplot for each gene with ggplot?\n\n ggplot(genes2, aes(x=Tumor, y=Expression,fill=Gene)) + scale_fill_manual(values=c(“#999999”, “#E69F00”)) + geom_boxplot() ggplot(genes2, aes(x=Tumor, y=Expression,fill=Tumor)) + scale_fill_manual(values=c(“#999999”, “#E69F00”)) + geom_boxplot() + facet_wrap(.~ Gene) ggplot(genes2, aes(x=Gene, y=Expression,fill=Tumor)) + scale_fill_manual(values=c(“#999999”, “#E69F00”)) + geom_boxplot() ggplot(genes2, aes(x=Gene, y=Expression,fill=Gene)) + scale_fill_manual(values=c(“#999999”, “#E69F00”)) + geom_boxplot(.~ Tumor)\n\n\n\n\n\n\n\n\n\n\nWhat do you think?\nAs we mentioned above, ggplot may seem more complicated but when you compare it’s a flexible and powerful way to obtain cool plots with one single line code.\n\nFor simple plots, the degree of difficulty and the time consumption of making them with base R plot functions like boxplot() or stripchart() or with ggplot() is very similar, but this is only the very tip of the ggplot iceberg.\nCustomization of your plot is very easy thanks to the themes, and other options, as in the examples below. Check for built-in ggplot themes: https://ggplot2.tidyverse.org/reference/ggtheme.html. Also, you can find some packages with custom themes and you can create your own theme (check this article by Emanuela Furfaro).\n\n(q &lt;- p + facet_grid(.~ Gene) + theme_light())\n\n\n\n\n\n\n\n(q2 &lt;- p+facet_grid(.~ Gene) + theme_dark())\n\n\n\n\n\n\n\n(q3 &lt;- p+facet_grid(.~ Gene) + theme_linedraw())\n\n\n\n\n\n\n\nq+ stat_boxplot(geom ='errorbar', width=0.5, alpha=0.5) \n\n\n\n\n\n\n\nq + theme(legend.position=\"top\")\n\n\n\n\n\n\n\nq + theme(legend.position=\"bottom\")\n\n\n\n\n\n\n\nq + theme(legend.position=\"none\") \n\n\n\n\n\n\n\n\nNow, let’s try some more cool example plots with these same data. Note the effect of the option position in the dotplots and how we can make different plots with the data, like density curves and violin plots.\n\nr &lt;- ggplot(genes2, aes(x=Gene, y=Expression,fill=Tumor)) +\n  scale_fill_manual(values=c(\"#999999\", \"#E69F00\")) +\n  geom_boxplot()\n\nr + geom_dotplot(binaxis='y', stackdir='center',\n                 position=position_dodge(0.75))\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\nr + geom_point(pch = 21, position = position_jitterdodge())\n\n\n\n\n\n\n\n#more examples\na &lt;- ggplot(genes2, aes(x = Expression))\na + geom_density(aes(fill = Gene),alpha=0.4) +\n  scale_fill_manual(values = c(\"#868686FF\", \"#EFC000FF\")) +\n  theme_classic() + facet_grid(.~ Tumor)\n\n\n\n\n\n\n\nlibrary(RColorBrewer)\na &lt;- ggplot(genes2, aes(x = Gene, y=Expression, fill=Tumor)) + \n  scale_fill_brewer(palette = \"Pastel1\") + \n  geom_violin(alpha=0.4, position=\"dodge\")\na"
  },
  {
    "objectID": "r8.html#example-3-color-palettes-and-other-plot-customization",
    "href": "r8.html#example-3-color-palettes-and-other-plot-customization",
    "title": "R8: Plot your data in R - Episode II",
    "section": "2.2 Example 3: Color palettes and other plot customization",
    "text": "2.2 Example 3: Color palettes and other plot customization\nWhen you have large datasets or several factors in your data, selecting the colors is not trivial. In R, there are defined color combinations or palettes that you can select in your plot. Moreover, there are also several packages that contain custom color palettes suitable for base plots and/or ggplots, like viridis or RColorBrewer. You may also find interesting the package ggsci, which contains palettes with colors used in scientific journals, data visualization libraries, science fiction movies…\nTo obtain the desired plot, you sometimes need to rotate the axis x labels, which must be done within a theme() argument. You can customize the label rotation, justification, font…\n\ncoli_genomes &lt;- read.csv(file = 'data/coli_genomes_renamed.csv', strip.white = TRUE, stringsAsFactors = TRUE)\np &lt;- ggplot(coli_genomes,aes(x=Strain, y=contigs1kb, fill=Source)) + geom_bar(stat=\"identity\", position = \"dodge\", alpha=0.6) \np\n\n\n\n\n\n\n\np2 &lt;- p + scale_fill_brewer(palette = \"Dark2\") + theme_linedraw() \np2\n\n\n\n\n\n\n\np2b &lt;- p + scale_fill_brewer(palette = \"Pastel2\") + theme_linedraw() \np2b\n\n\n\n\n\n\n\np3 &lt;- p2 + theme(axis.text.x = element_text(angle = 45,\n    hjust = 1, face = \"bold\"))\np3\n\n\n\n\n\n\n\n\nIn the examples above, we generated a plot and then make variations with some custom palettes (p2). The palettes are available in ggplot, but in order to explore and edit them, you need to install the package. Also, in the plot p3, we modified the font and orientation of the axis labels using a new theme() layer, that contains the text personalizations.\nAs mentioned above, one of the most common palette packages is RColorBrewer. Let’s check it out.\n\nif(!require(RColorBrewer)) install.packages(\"RColorBrewer\")\nlibrary(RColorBrewer)\ndisplay.brewer.all()\n\n\n\n\n\n\n\ndisplay.brewer.all(colorblindFriendly = TRUE) #only colorblind-friendly!\n\n\n\n\n\n\n\n#display only the a number of colors from specific palette\ndisplay.brewer.pal(n = 3, name = 'Dark2')\n\n\n\n\n\n\n\n\n\nSaving your plot\nFinally, saving plots is also very easy with ggplot2, check the function ggsave().\n\n#save \nggsave(filename = \"plot_p3.svg\", plot = p3,width = 10,height = 6)\n\nOf course, you can also do it the same way than with Base plots:\n\nsvg(\"plot_p3b.svg\")\nprint(p3)\ndev.off()\n\nquartz_off_screen \n                2"
  },
  {
    "objectID": "r8.html#example-4-plotting-multiple-variables",
    "href": "r8.html#example-4-plotting-multiple-variables",
    "title": "R8: Plot your data in R - Episode II",
    "section": "2.3 Example 4: Plotting multiple variables",
    "text": "2.3 Example 4: Plotting multiple variables\nOne of the nice ways to summarize data is plotting more than one variable in the same plot. However, you should consider that different data may need different scale to be render in the same plot. Thus, you should scale up/down the data of one variable to the values of the second variable. Then, for the secondary axis, you just need to apply the same scaling factor in the opposite direction.\nIn the following example, we plot the number of Contigs and the Assembly length from our coli_genomes.csv.\n\n#barplot\nplots2 &lt;- ggplot(data=coli_genomes) + \n  geom_bar(aes(x = Strain, y = Contigs, color = Source, fill = Source), stat=\"identity\") \n#add the points and adjust the scale in the right axis\nplots2b &lt;- plots2 +\n  geom_point(aes(x = Strain, y = Assembly_length/15000,  fill = Source, alpha=0.8),col=\"black\",shape=21, size=3)\nplots2b\n\n\n\n\n\n\n\nplots2c &lt;- plots2b  +   scale_y_continuous(name = \"Number of Contigs\",limits = c(0, 400), expand=c(0,0), sec.axis = sec_axis(~15000 * ., name  = \"Assembly length\")) \nplots2c\n\n\n\n\n\n\n\n#add colors and more customization\nplots2custom &lt;- plots2b +   \n    scale_fill_brewer(palette = \"Set1\") + scale_color_brewer(palette = \"Set1\") +\n    theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, face = \"bold\")) +\n    guides(alpha = \"none\", color = \"none\") \nplots2custom\n\n\n\n\n\n\n\n\nWe did the plot in different stages, to check each of the variables and the scale of the secondary axis before apply the customization. As the two variables have different range of value, we need to scale them. In this example, we scale-down the data (/ 15000) and then scale-up the axis to show the real data (* 15000).\nAs you noticed, axis customization may entail adjust the limits with limits(), the axis expansion below and above those limits with expand(), and other aspects as the axis ticks with breaks(). We also can add/remove a legend with the argument guides()."
  },
  {
    "objectID": "r8.html#interactive-plots",
    "href": "r8.html#interactive-plots",
    "title": "R8: Plot your data in R - Episode II",
    "section": "3.1 Interactive plots",
    "text": "3.1 Interactive plots\nAnother interesting application of ggplot is its use for the generation of interactive plots to be published on websites. One that you might find of interest is the package heatmaply, that generates interactive heatmaps. Further, I find awesome the use of the package plotly() for very quick upgrade of any plot as interactive.\nSee the examples:\n\n#install.packages(\"ggplotly\")\n#install.packages(\"heatmaply\")\n\nlibrary(heatmaply)\n\nLoading required package: plotly\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\nLoading required package: viridis\n\n\nLoading required package: viridisLite\n\n\n\n======================\nWelcome to heatmaply version 1.5.0\n\nType citation('heatmaply') for how to cite the package.\nType ?heatmaply for the main documentation.\n\nThe github page is: https://github.com/talgalili/heatmaply/\nPlease submit your suggestions and bug-reports at: https://github.com/talgalili/heatmaply/issues\nYou may ask questions at stackoverflow, use the r and heatmaply tags: \n     https://stackoverflow.com/questions/tagged/heatmaply\n======================\n\n#aggregate the data with xtabs\nmatrix &lt;- xtabs( ~ coli_genomes[,4]+coli_genomes[,5])\n#xtabs objects must be converted into dataframes, but heatmaply requires a matrix...\nheatmaply(as.data.frame.matrix(matrix))\n\n\n\n\nlibrary(plotly)\nggplotly(plots2custom)"
  },
  {
    "objectID": "r7.html",
    "href": "r7.html",
    "title": "R7: Project management for reproducible research in R",
    "section": "",
    "text": "Working with relative paths can get a little bit confusing, especially if run large projects with different folders and subfolders for data and results. A good way to avoid confusion is to make an R project in R Studio.\n\nAs you can see in the screenshot above you can easily start a new project in RStudio using the File menu. Then, just select a name and save it on your computer (it will be have the extension Rproj).\nNow here’s the cool part: When you open your project, you will see that the project folder will be your default relative path, which you can check with getwd(). Also, in the top-right corner of Rstudio you can see the project name and the containing folder.\nWorking with projects come along with other extra features. For instance, every time you open the project, the .Rdata and the .Rhistory are loaded; thus previously edited source documents and RStudio settings (e.g. active tabs, splitter positions, etc.) are restored. This will make a difference if you manage different projects at the same time.\nThere are more reasons to do this, which become more obvious as you progress as a coder and start working on collaborative projects. You can also create your project using a version control (Git or Subversion) repository. Version control helps software teams manage changes to source code over time. Version control software keeps track of every modification to the code in a special kind of database. If a mistake is made, developers can turn back the clock and compare earlier versions of the code to help fix the mistake while minimizing disruption to all team members. Version control systems have been around for a long time but continue to increase in popularity with data science workflows."
  },
  {
    "objectID": "r7.html#markdown-and-rmarkdown",
    "href": "r7.html#markdown-and-rmarkdown",
    "title": "R7: Project management for reproducible research in R",
    "section": "2.1 Markdown and RMarkdown",
    "text": "2.1 Markdown and RMarkdown\nMarkdown is an easy-to-write language for formatting text. It was created in 2004 as a new markup language and since then it has widely used for blogging, instant messaging, online forums and software documentations, among other tools. For instance, websites like Github or Reddit use variants of markdown to facilitate discussions. The typical read me intro file that you see in Github repositories is written in markdown. Several programming languages also implemented markdown as an standard for documentation pages or reports generation.\nRMarkdown is an R packages for the implementation of markdown for R and more commonly RStudio. It combines the core simple syntax of markdown with embedded code chunks that are run so their output can be included in the final document. The key about R Markdown documents is that they are fully reproducible (they can be automatically regenerated whenever underlying R code or data changes).\nCurrently, RMarkdown documents can include chunks in different languages (see the screenshot below), so you can combine in the same document bash or Python scripts along with the R data analysis. Moreover, despite simplicity of its syntax it can include diverse formatting options, spanning enriched text to HTML or Latex contents as well.\n\nAlso, they can be written using a Visual mode (above) that looks like any other word processor, but you can switch to Source anytime.\n\nI found two main advantages in using RMarkdown documents for my data analysis. Initially, I started to use it in order to generate formatted reports including all the information about the project in a paper-like format, from the background to the data analysis and the conclusions. Indeed, those “reports” can be as fancy as you wish, from html or latex-formatted pdf, to MS Word or even presentations. A second benefit of the use of markdown is that it facilitates your own work a lot, specially when you work in several different projects or you if you need to do some analysis after some time. Additionally, you can use Rmarkdown documents for web applications based in R using Shiny.\nMoreover, there are a number of specialized sites to publish your Rmarkdown documents, such as Rpubs, bookdown.org or RStudio connect.\nYou can insert a chunk by writing the header ```{r} and foot ``` if you work in the Source mode or with green +C button in the Visual mode. See the example below.\n\n{r, label='my-first-chunk'}\n\nCode in the chunks can be executed line-by-line using Ctrl+ENTER (Cmd+Enter in MacOS) or as a whole chunk using the play button on the top-right corner. Also, chunk output can be customized with some options (see Ref. 11) that allow you to choose whether a particular chunk will be executed or not or include invisible chunks that will not be shown in the final knitted doc… Some examples are (note that boolean properties are True by default):\n\ninclude = FALSE prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.\necho = FALSE prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.\nmessage = FALSE prevents messages that are generated by code from appearing in the finished file.\nwarning = FALSE prevents warnings that are generated by code from appearing in the finished.\nfig.cap = \"...\" adds a caption to graphical results.\nlabel = \" \" set a name or label specific to that chunk\n\nChunk options arguments can be set in the {} of a chunk header. Alternatively, you can write chunk options in the body of a code chunk after #|, e.g.,\n\nFurther customization options in R Markdown can be found in the references listed below. I especially recommend references 5 and 6 to start customizing your HTML Markdown documents, including different section headers, a table of contents (TOC), or even a personalized color scheme.\n\nQuick exercise: Create your first R Markdown document\nAs with any other language, it is much easier to learn the syntax if you do some examples. We can turn one of our exercises into a Markdown HTML document in just a few steps:\n\n\nStart a new R Markdown document. Initially, you will be asked for a title, an author and a date. You can also specify the type of output document here. This data will be included in the header of your rmd document (orange square in the figure below), a configuration section in YAML format that can be edited at any time. This section contains all the doc information, including about the title, the use of a TOC (Table of Contents), authoring, section numbering, html themes…\n\nOnce you have your new document, it includes some standard instructions for writing and creating coding chunks. You can switch back and forth between the Source and Visual formats to see the difference as in the pic above, and then replace the instructions with text like the exercise text.\nInsert a script from the exercises in the previous lessons into a chunk and try it. You can also split the script into multiple chunks and sprinkle in some explanations.\nAdd a final chunk with the sessionInfo() to facilitate reproducibility.\nKnit it! You can try knitting into html, pdf or word document.\n\n\n\n\n\n\n\nKnitting PDFs\n\n\n\nNote that knitting into pdf may require the installation of a LaTeX distribution or R package. There are several alternatives, like tinytex, MacTeX or MikTeX, among others (see references 10 and 11).\nIf you struggle to adjust the chunks text width to in the PDF document, you may install the package formatR, as explained in the following StackOverflow answer: https://stackoverflow.com/questions/33481271/how-to-wrap-code-and-the-output-in-markdown-rmd"
  },
  {
    "objectID": "r7.html#r-notebooks",
    "href": "r7.html#r-notebooks",
    "title": "R7: Project management for reproducible research in R",
    "section": "2.2 R Notebooks",
    "text": "2.2 R Notebooks\nTechnically, R Markdown is a file format, whereas R Notebook is just a way to work with R Markdown files. R Notebooks do not have their own file format, they all use Rmd. All R Notebooks can be ‘knitted’ to R Markdown outputs, and all R Markdown documents can be interfaced as a Notebook. The R nb document is launched directly and no wizard (as in the case of .RMD) appears. Along with the notebook file, an additional html file that extension *.nb.html is generated. The notebook has the option for Preview. If any code is altered or edited, the new output is not shown. The output is shown in the code editor itself. Whatever the old output was it is only rendered. No new output is generated from the code change. In order to show the code output, we need to execute the chunk and then it will appear in the output. The YAML header has output as: output: html_notebook\nWriting an R Notebook document is no different than writing an R Markdown document. The text and code chunk syntax does not differ from what you learned in the R Markdown tutorial. The primary difference is in the interativeness of an R Notebook. Primarily that when executing chunks in an R Markdown document, all the code is sent to the console at once, but in an R Notebook, only one line at a time is sent. This allows execution to stop if a line raises an error."
  },
  {
    "objectID": "r6.html",
    "href": "r6.html",
    "title": "R6: Advanced data management",
    "section": "",
    "text": "When you need to explore, present, analyze, or transform your data, it often requires subdividing, aggregating, or sorting a vector or data frame by one or more variables. The R environment primarily relies on two approaches: Base R and tidyverse libraries (dplyr() & tidyr()). Although these two methods are often viewed as distinct philosophies, they are designed to complement each other(see ref. 8 below).\nThis lesson provides examples and techniques from Base R because learning Base R offers a wider range of capabilities for different types of data and work environments in the future.\n\n\nHow come? Numeric? Alphabetic? increasing or decreasing order?\nThere are two main functions in R to order your data, sort() and order(). Let’s see an example using the file coli_genomes_renamed.csv, that we used in the lesson R3.\n\n#load the dataset\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes_renamed.csv\", strip.white = TRUE)\n\n#test sort() & order() in a vector\norder(coli_genomes$Year)\n\n [1] 15  7  8  6  3  2  5 14 16 17 18 20 22  9 10 11 12 13 19 21  1  4\n\nsort(coli_genomes$Year)\n\n [1] 2005 2006 2006 2007 2008 2010 2011 2011 2012 2012 2012 2012 2012 2013 2013\n[16] 2013 2013 2013 2015 2016\n\nsort(coli_genomes$Year, decreasing=TRUE)\n\n [1] 2016 2015 2013 2013 2013 2013 2013 2012 2012 2012 2012 2012 2011 2011 2010\n[16] 2008 2007 2006 2006 2005\n\norder(coli_genomes$Phylogroup)\n\n [1]  4  5  6  7  8 12 13 18 20 21  3 14 22  2 15 16 17 19  1  9 10 11\n\nsort(coli_genomes$Phylogroup)\n\n [1] \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"B1\" \"B1\" \"B1\" \"C\"  \"C\" \n[16] \"C\"  \"C\"  \"C\"  \"D\"  \"D\"  \"D\"  \"D\" \n\n\nAs you noticed, the R function order() returns a permutation of the order of the elements of a vector. The output is an index vector, not the vector itself. Also note that if the vector contains any NA values, they will be at the end of the index vector by default.\nOn the other hand, the function sort() returns returns the vector you pass as input sorted in ascending order by default.\nBoth functions order the data increasingly, and can be used for numeric or string variables. If you set the decreasing argument to TRUE in a sort() or order(), you will geet the vector of indices in descending order.\nYou can also use these functions to order a data frame according to a vector. Alternatively, you can also arrange or shuffle a data frame in reverse order.\n\n#order the dataframe by one column, sort or order?\ncoli_genomes[order(coli_genomes$Year),]\n\n    Strain    Biosample Year  Source Phylogroup Serotype  Clonotype\n15 LREC255 SAMN14278630 2005   Avian          C  O78:H19     CH4-27\n7  LREC244 SAMN14278619 2006 Porcine          A   O2:H32    CH11-23\n8  LREC245 SAMN14278620 2006 Porcine          A  ONT:H45    C11-398\n6  LREC243 SAMN14278618 2007 Porcine          A   O9:H37     CH7-31\n3  LREC240 SAMN14278615 2008   Human         B1  O76:H30    CH29-38\n2  LREC239 SAMN14278614 2010   Human          C O153:H19     CH4-25\n5  LREC242 SAMN14278617 2011 Porcine          A  ONT:HNM     CH7-54\n14 LREC254 SAMN14278629 2011   Avian         B1 O142:H30     C41-35\n16 LREC256 SAMN14278631 2012   Human          C   O8:H19     CH4-54\n17 LREC257 SAMN14278632 2012   Human          C   O9:H19     CH4-27\n18 LREC258 SAMN14278633 2012   Human          A    O9:H4     CH7-34\n20 LREC260 SAMN14278635 2012   Human          A  ONT:H33    CH11-54\n22 LREC262 SAMN14278637 2012   Human         B1  O66:H10     CH4-32\n9  LREC249 SAMN14278624 2013   Human          D O145:H28   CH23-331\n10 LREC250 SAMN14278625 2013   Human          D O145:H28   CH23-331\n11 LREC251 SAMN14278626 2013   Human          D O145:H28   CH23-331\n12 LREC252 SAMN14278627 2013   Human          A  ONT:H37     C11-54\n13 LREC253 SAMN14278628 2013   Avian          A  ONT:H19    CH94-23\n19 LREC259 SAMN14278634 2015   Human          C   O9:H19 CH4like-27\n21 LREC261 SAMN14278636 2016   Human          A  O98:H26    CH27-23\n1  LREC237 SAMN14278613   NA   Human          D  ONT:H28   CH23-331\n4  LREC241 SAMN14278616   NA   Human          A  O78:H11    CH11-41\n   Sequence.Type VF Plasmids kmer Contigs    N50 longest.contig..bp.\n15          ST88 11        4  113     108 405376             1190696\n7           ST10  4        7  115     277  89185              281444\n8        ST10888  2        7  115     203  94368              280268\n6         ST3011  7        3   93     158 106897              369508\n3          ST156 10        2   89     114 270767              738861\n2           ST88 14        3  117     159 323172              760527\n5          ST746  5        9   89     320  45936              128053\n14         ST359  9        4  113     102 240847              460510\n16          ST88 14        2  113     108 281822             1140163\n17          ST88 14        4   91     224 140521              284241\n18          ST46  8        4   85     204  86565              300086\n20          ST10  2        5  117     120 228491              576949\n22        ST1049  4        2  113      94 325747              822206\n9           ST32 22        1  115     376 200150              424527\n10         ST137 22        3  111     205 281589              617142\n11          ST32 20        1  113     206 182651              412836\n12          ST48  1        0  113     140 105396              272304\n13         ST347  2        0  117     134 110661              497785\n19       ST10890 13        3  113     171 326962              749412\n21        ST8233  2        4   89     114 187945              537848\n1          ST524 18        3  117     223 272287              662555\n4           ST48  5        3  117     212 112160              285056\n   Assembly_length contigs1kb average_contig\n15         5196698         38       48117.57\n7          5406295        155       19517.31\n8          4796593        114       23628.54\n6          4638334         93       29356.54\n3          4875343         47       42766.17\n2          5415613         57       34060.46\n5          4858138        212       15181.68\n14         4992565         42       48946.72\n16         5252065         43       48630.23\n17         5085107        110       22701.37\n18         4915667        121       24096.41\n20         4881205         48       40676.71\n22         4839344         32       51482.38\n9          5389075        131       14332.65\n10         5340478         78       26051.11\n11         5276782         95       25615.45\n12         4507328         78       32195.20\n13         4664768         77       34811.70\n19         5200701         77       30413.46\n21         4821342         53       42292.47\n1          5341632         74       23953.51\n4          5167401        101       24374.53\n\ncoli_genomes[sort(coli_genomes$Year),] #what happened?\n\n      Strain Biosample Year Source Phylogroup Serotype Clonotype Sequence.Type\nNA      &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.1    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.2    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.3    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.4    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.5    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.6    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.7    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.8    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.9    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.10   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.11   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.12   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.13   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.14   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.15   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.16   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.17   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.18   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.19   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\n      VF Plasmids kmer Contigs N50 longest.contig..bp. Assembly_length\nNA    NA       NA   NA      NA  NA                  NA              NA\nNA.1  NA       NA   NA      NA  NA                  NA              NA\nNA.2  NA       NA   NA      NA  NA                  NA              NA\nNA.3  NA       NA   NA      NA  NA                  NA              NA\nNA.4  NA       NA   NA      NA  NA                  NA              NA\nNA.5  NA       NA   NA      NA  NA                  NA              NA\nNA.6  NA       NA   NA      NA  NA                  NA              NA\nNA.7  NA       NA   NA      NA  NA                  NA              NA\nNA.8  NA       NA   NA      NA  NA                  NA              NA\nNA.9  NA       NA   NA      NA  NA                  NA              NA\nNA.10 NA       NA   NA      NA  NA                  NA              NA\nNA.11 NA       NA   NA      NA  NA                  NA              NA\nNA.12 NA       NA   NA      NA  NA                  NA              NA\nNA.13 NA       NA   NA      NA  NA                  NA              NA\nNA.14 NA       NA   NA      NA  NA                  NA              NA\nNA.15 NA       NA   NA      NA  NA                  NA              NA\nNA.16 NA       NA   NA      NA  NA                  NA              NA\nNA.17 NA       NA   NA      NA  NA                  NA              NA\nNA.18 NA       NA   NA      NA  NA                  NA              NA\nNA.19 NA       NA   NA      NA  NA                  NA              NA\n      contigs1kb average_contig\nNA            NA             NA\nNA.1          NA             NA\nNA.2          NA             NA\nNA.3          NA             NA\nNA.4          NA             NA\nNA.5          NA             NA\nNA.6          NA             NA\nNA.7          NA             NA\nNA.8          NA             NA\nNA.9          NA             NA\nNA.10         NA             NA\nNA.11         NA             NA\nNA.12         NA             NA\nNA.13         NA             NA\nNA.14         NA             NA\nNA.15         NA             NA\nNA.16         NA             NA\nNA.17         NA             NA\nNA.18         NA             NA\nNA.19         NA             NA\n\n# Random order of rows with sample \ncoli_genomes[sample(nrow(coli_genomes), replace = FALSE), ]\n\n    Strain    Biosample Year  Source Phylogroup Serotype  Clonotype\n21 LREC261 SAMN14278636 2016   Human          A  O98:H26    CH27-23\n2  LREC239 SAMN14278614 2010   Human          C O153:H19     CH4-25\n22 LREC262 SAMN14278637 2012   Human         B1  O66:H10     CH4-32\n12 LREC252 SAMN14278627 2013   Human          A  ONT:H37     C11-54\n7  LREC244 SAMN14278619 2006 Porcine          A   O2:H32    CH11-23\n14 LREC254 SAMN14278629 2011   Avian         B1 O142:H30     C41-35\n15 LREC255 SAMN14278630 2005   Avian          C  O78:H19     CH4-27\n18 LREC258 SAMN14278633 2012   Human          A    O9:H4     CH7-34\n3  LREC240 SAMN14278615 2008   Human         B1  O76:H30    CH29-38\n20 LREC260 SAMN14278635 2012   Human          A  ONT:H33    CH11-54\n16 LREC256 SAMN14278631 2012   Human          C   O8:H19     CH4-54\n1  LREC237 SAMN14278613   NA   Human          D  ONT:H28   CH23-331\n11 LREC251 SAMN14278626 2013   Human          D O145:H28   CH23-331\n6  LREC243 SAMN14278618 2007 Porcine          A   O9:H37     CH7-31\n13 LREC253 SAMN14278628 2013   Avian          A  ONT:H19    CH94-23\n4  LREC241 SAMN14278616   NA   Human          A  O78:H11    CH11-41\n9  LREC249 SAMN14278624 2013   Human          D O145:H28   CH23-331\n8  LREC245 SAMN14278620 2006 Porcine          A  ONT:H45    C11-398\n19 LREC259 SAMN14278634 2015   Human          C   O9:H19 CH4like-27\n17 LREC257 SAMN14278632 2012   Human          C   O9:H19     CH4-27\n10 LREC250 SAMN14278625 2013   Human          D O145:H28   CH23-331\n5  LREC242 SAMN14278617 2011 Porcine          A  ONT:HNM     CH7-54\n   Sequence.Type VF Plasmids kmer Contigs    N50 longest.contig..bp.\n21        ST8233  2        4   89     114 187945              537848\n2           ST88 14        3  117     159 323172              760527\n22        ST1049  4        2  113      94 325747              822206\n12          ST48  1        0  113     140 105396              272304\n7           ST10  4        7  115     277  89185              281444\n14         ST359  9        4  113     102 240847              460510\n15          ST88 11        4  113     108 405376             1190696\n18          ST46  8        4   85     204  86565              300086\n3          ST156 10        2   89     114 270767              738861\n20          ST10  2        5  117     120 228491              576949\n16          ST88 14        2  113     108 281822             1140163\n1          ST524 18        3  117     223 272287              662555\n11          ST32 20        1  113     206 182651              412836\n6         ST3011  7        3   93     158 106897              369508\n13         ST347  2        0  117     134 110661              497785\n4           ST48  5        3  117     212 112160              285056\n9           ST32 22        1  115     376 200150              424527\n8        ST10888  2        7  115     203  94368              280268\n19       ST10890 13        3  113     171 326962              749412\n17          ST88 14        4   91     224 140521              284241\n10         ST137 22        3  111     205 281589              617142\n5          ST746  5        9   89     320  45936              128053\n   Assembly_length contigs1kb average_contig\n21         4821342         53       42292.47\n2          5415613         57       34060.46\n22         4839344         32       51482.38\n12         4507328         78       32195.20\n7          5406295        155       19517.31\n14         4992565         42       48946.72\n15         5196698         38       48117.57\n18         4915667        121       24096.41\n3          4875343         47       42766.17\n20         4881205         48       40676.71\n16         5252065         43       48630.23\n1          5341632         74       23953.51\n11         5276782         95       25615.45\n6          4638334         93       29356.54\n13         4664768         77       34811.70\n4          5167401        101       24374.53\n9          5389075        131       14332.65\n8          4796593        114       23628.54\n19         5200701         77       30413.46\n17         5085107        110       22701.37\n10         5340478         78       26051.11\n5          4858138        212       15181.68\n\n# Reverse order of rows\ncoli_genomes[nrow(coli_genomes):1, ]\n\n    Strain    Biosample Year  Source Phylogroup Serotype  Clonotype\n22 LREC262 SAMN14278637 2012   Human         B1  O66:H10     CH4-32\n21 LREC261 SAMN14278636 2016   Human          A  O98:H26    CH27-23\n20 LREC260 SAMN14278635 2012   Human          A  ONT:H33    CH11-54\n19 LREC259 SAMN14278634 2015   Human          C   O9:H19 CH4like-27\n18 LREC258 SAMN14278633 2012   Human          A    O9:H4     CH7-34\n17 LREC257 SAMN14278632 2012   Human          C   O9:H19     CH4-27\n16 LREC256 SAMN14278631 2012   Human          C   O8:H19     CH4-54\n15 LREC255 SAMN14278630 2005   Avian          C  O78:H19     CH4-27\n14 LREC254 SAMN14278629 2011   Avian         B1 O142:H30     C41-35\n13 LREC253 SAMN14278628 2013   Avian          A  ONT:H19    CH94-23\n12 LREC252 SAMN14278627 2013   Human          A  ONT:H37     C11-54\n11 LREC251 SAMN14278626 2013   Human          D O145:H28   CH23-331\n10 LREC250 SAMN14278625 2013   Human          D O145:H28   CH23-331\n9  LREC249 SAMN14278624 2013   Human          D O145:H28   CH23-331\n8  LREC245 SAMN14278620 2006 Porcine          A  ONT:H45    C11-398\n7  LREC244 SAMN14278619 2006 Porcine          A   O2:H32    CH11-23\n6  LREC243 SAMN14278618 2007 Porcine          A   O9:H37     CH7-31\n5  LREC242 SAMN14278617 2011 Porcine          A  ONT:HNM     CH7-54\n4  LREC241 SAMN14278616   NA   Human          A  O78:H11    CH11-41\n3  LREC240 SAMN14278615 2008   Human         B1  O76:H30    CH29-38\n2  LREC239 SAMN14278614 2010   Human          C O153:H19     CH4-25\n1  LREC237 SAMN14278613   NA   Human          D  ONT:H28   CH23-331\n   Sequence.Type VF Plasmids kmer Contigs    N50 longest.contig..bp.\n22        ST1049  4        2  113      94 325747              822206\n21        ST8233  2        4   89     114 187945              537848\n20          ST10  2        5  117     120 228491              576949\n19       ST10890 13        3  113     171 326962              749412\n18          ST46  8        4   85     204  86565              300086\n17          ST88 14        4   91     224 140521              284241\n16          ST88 14        2  113     108 281822             1140163\n15          ST88 11        4  113     108 405376             1190696\n14         ST359  9        4  113     102 240847              460510\n13         ST347  2        0  117     134 110661              497785\n12          ST48  1        0  113     140 105396              272304\n11          ST32 20        1  113     206 182651              412836\n10         ST137 22        3  111     205 281589              617142\n9           ST32 22        1  115     376 200150              424527\n8        ST10888  2        7  115     203  94368              280268\n7           ST10  4        7  115     277  89185              281444\n6         ST3011  7        3   93     158 106897              369508\n5          ST746  5        9   89     320  45936              128053\n4           ST48  5        3  117     212 112160              285056\n3          ST156 10        2   89     114 270767              738861\n2           ST88 14        3  117     159 323172              760527\n1          ST524 18        3  117     223 272287              662555\n   Assembly_length contigs1kb average_contig\n22         4839344         32       51482.38\n21         4821342         53       42292.47\n20         4881205         48       40676.71\n19         5200701         77       30413.46\n18         4915667        121       24096.41\n17         5085107        110       22701.37\n16         5252065         43       48630.23\n15         5196698         38       48117.57\n14         4992565         42       48946.72\n13         4664768         77       34811.70\n12         4507328         78       32195.20\n11         5276782         95       25615.45\n10         5340478         78       26051.11\n9          5389075        131       14332.65\n8          4796593        114       23628.54\n7          5406295        155       19517.31\n6          4638334         93       29356.54\n5          4858138        212       15181.68\n4          5167401        101       24374.53\n3          4875343         47       42766.17\n2          5415613         57       34060.46\n1          5341632         74       23953.51\n\n\nNow imagine you have a large data set and want to subdivide only some cases (=rows). You already know some ways to do this, but in the following example we will test the function subset(), which is very handy when you want to extract the cases that satisfy multiple conditions.\nImagine that for a new project we want to select the strains with better genome design quality or from a subset. We will keep strains from Phylogroup A, with an assembly N50 &gt; 150,000 bp and less than 100 contigs &gt;= 1 kb.\n\n#option 1: multi-step\nselection&lt;-coli_genomes[coli_genomes$contigs1kb&lt;100,]\nselection&lt;-selection[selection$N50&gt;150000,]\nselection&lt;-selection[selection$Phylogroup=='A',]\n\n#option 2:  which statements \nselection2&lt;-coli_genomes[which(coli_genomes$contigs1kb&lt;100 & coli_genomes$N50&gt;150000 & coli_genomes$Phylogroup=='A'),]\n\n#option 2b:with attach(dataframe) you avoid repeat the name of the dataframe\nattach(coli_genomes)\nselection2 &lt;- coli_genomes[which(contigs1kb&lt;100 & N50&gt;150000 & Phylogroup=='A'),]\ndetach(coli_genomes) #detach dataframe\n\n#option 3: subset() is a straightforward way to do that trick \nselection3&lt;-subset(coli_genomes, subset= contigs1kb&lt;100 & N50&gt;150000 & Phylogroup=='A')\n\nIf you want to make sure that the three methods give the same output, you can check the data frame, or check the dimensions or structure with dim() or str(), but this is difficult with large data sets with hundreds or thousands of cases (see below). The function all.equal() does this task for you.\n\n#Are they the same?\nall.equal(selection,selection2) \n\n[1] TRUE\n\nall.equal(selection,selection3)\n\n[1] TRUE\n\n\n\n\n\nIf you work with a lot of data or get different batches of related data frames, you may have multiple tables and want to combine them in different ways. An easy way is to use cbind() or rbind() if you have the same number of rows and columns. A more practical way is to use the merge() function. Look and test the following examples using the coli_genomes data frame and a new table named colis3.csv\n\ncolis &lt;- read.csv2(file = 'data/colis3.csv')\n#rbind() and cbind()\nrbind(coli_genomes,colis) #did it work? why??\n\nError in rbind(deparse.level, ...): numbers of columns of arguments do not match\n\ncbind(coli_genomes, colis) \n\nError in data.frame(..., check.names = FALSE): arguments imply differing number of rows: 22, 27\n\n#merge()\nmerge&lt;-merge(coli_genomes,colis) #inner join\nstr(merge)\n\n'data.frame':   22 obs. of  24 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 22 22 ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 1 3 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 115 111 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 376 205 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 200150 281589 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 424527 617142 ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5389075 5340478 ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 131 78 ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 12 13 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 7 7 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 2 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 26 21 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge1&lt;-merge(coli_genomes,colis, by=\"Strain\")\nstr(merge1)\n\n'data.frame':   22 obs. of  25 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Year.x             : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 22 22 ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 1 3 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 115 111 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 376 205 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 200150 281589 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 424527 617142 ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5389075 5340478 ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 131 78 ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 12 13 ...\n $ Year.y             : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 7 7 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 2 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 26 21 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge2&lt;-merge(coli_genomes,colis, by=\"Year\")\nstr(merge2)\n\n'data.frame':   81 obs. of  25 variables:\n $ Year               : int  2005 2006 2006 2006 2006 2007 2008 2010 2010 2011 ...\n $ Strain.x           : chr  \"LREC255\" \"LREC244\" \"LREC244\" \"LREC245\" ...\n $ Biosample          : chr  \"SAMN14278630\" \"SAMN14278619\" \"SAMN14278619\" \"SAMN14278620\" ...\n $ Source             : chr  \"Avian\" \"Porcine\" \"Porcine\" \"Porcine\" ...\n $ Phylogroup         : chr  \"C\" \"A\" \"A\" \"A\" ...\n $ Serotype           : chr  \"O78:H19\" \"O2:H32\" \"O2:H32\" \"ONT:H45\" ...\n $ Clonotype          : chr  \"CH4-27\" \"CH11-23\" \"CH11-23\" \"C11-398\" ...\n $ Sequence.Type      : chr  \"ST88\" \"ST10\" \"ST10\" \"ST10888\" ...\n $ VF                 : int  11 4 4 2 2 7 10 14 14 5 ...\n $ Plasmids           : int  4 7 7 7 7 3 2 3 3 9 ...\n $ kmer               : int  113 115 115 115 115 93 89 117 117 89 ...\n $ Contigs            : int  108 277 277 203 203 158 114 159 159 320 ...\n $ N50                : int  405376 89185 89185 94368 94368 106897 270767 323172 323172 45936 ...\n $ longest.contig..bp.: int  1190696 281444 281444 280268 280268 369508 738861 760527 760527 128053 ...\n $ Assembly_length    : int  5196698 5406295 5406295 4796593 4796593 4638334 4875343 5415613 5415613 4858138 ...\n $ contigs1kb         : int  38 155 155 114 114 93 47 57 57 212 ...\n $ average_contig     : num  48118 19517 19517 23629 23629 ...\n $ X                  : int  18 8 7 8 7 6 3 9 2 5 ...\n $ Strain.y           : chr  \"LREC255\" \"LREC245\" \"LREC244\" \"LREC245\" ...\n $ CRISPR             : int  10 10 7 10 7 10 5 6 12 9 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),, CAS-TypeID (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),, CAS (n=1),, CAS (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),, CAS (n=1),, CAS (n=1),]\" ...\n $ AMR                : int  NA 4 2 4 2 2 5 4 2 4 ...\n $ Vir                : int  7 4 7 4 7 6 10 8 12 4 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-08-03\" \"2019-12-30\" \"2018-08-14\" \"2019-12-30\" ...\n\nmerge3&lt;-merge(coli_genomes,colis, by=c(\"Strain\",\"Year\"))\nstr(merge3)\n\n'data.frame':   22 obs. of  24 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 22 22 ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 1 3 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 115 111 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 376 205 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 200150 281589 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 424527 617142 ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5389075 5340478 ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 131 78 ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 12 13 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 7 7 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 2 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 26 21 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge4&lt;-merge(coli_genomes,colis, all=TRUE) #outer join\nstr(merge4)\n\n'data.frame':   27 obs. of  24 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2010 2013 ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 NA NA ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 NA NA ...\n $ kmer               : int  117 117 89 117 89 93 115 115 NA NA ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 NA NA ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 NA NA ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 NA NA ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 NA NA ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 NA NA ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 9 10 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 6 8 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 4 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 8 23 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge5&lt;-merge(coli_genomes,colis, all.x=TRUE)\nstr(merge5)\n\n'data.frame':   22 obs. of  24 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 22 22 ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 1 3 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 115 111 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 376 205 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 200150 281589 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 424527 617142 ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5389075 5340478 ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 131 78 ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 12 13 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 7 7 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 2 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 26 21 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge6&lt;-merge(coli_genomes,colis, all.y=TRUE)\nstr(merge6)\n\n'data.frame':   27 obs. of  24 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2010 2013 ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 NA NA ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 NA NA ...\n $ kmer               : int  117 117 89 117 89 93 115 115 NA NA ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 NA NA ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 NA NA ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 NA NA ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 NA NA ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 NA NA ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 9 10 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 6 8 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 4 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 8 23 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge7&lt;-merge(coli_genomes,colis, by=NULL)\nstr(merge7)\n\n'data.frame':   594 obs. of  26 variables:\n $ Strain.x           : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Year.x             : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 22 22 ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 1 3 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 115 111 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 376 205 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 200150 281589 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 424527 617142 ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5389075 5340478 ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 131 78 ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 1 1 1 1 1 1 1 1 1 ...\n $ Strain.y           : chr  \"LREC237\" \"LREC237\" \"LREC237\" \"LREC237\" ...\n $ Year.y             : int  NA NA NA NA NA NA NA NA NA NA ...\n $ CRISPR             : int  9 9 9 9 9 9 9 9 9 9 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 2 2 2 2 2 2 2 2 ...\n $ Vir                : int  20 20 20 20 20 20 20 20 20 20 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2020-07-24\" \"2020-07-24\" \"2020-07-24\" ...\n\n\nAs you noticed, the function merge() combines dataframes, however it is a generic function that can be also used with other objects (like vectors or matrices), but they will be coerced to data.frame class.\nBy default, merge() will do a natural join or inner join, merging two dataframes in one that contains only once the common elements of both. The arguments all = TRUE, all.x = TRUE and all.y = TRUE will force an outer join in which all elements of both, the first or the second dataframes are selected. In these cases, if not all rows in the first data frame match all the rows in the second, the output is filled with NA values in those cases.\nFinally, the Cartesian product of both dataframes can be obtained in R setting as NULL the argument by of the merge() function.\n\n\nTwo students enrolled in different University courses: Rafa in A, B, D, E and G and Roger in B, C, D and F. Rafa got the following marks 8, 9, 9.5, 8.75 and 9 and Roger obtained 10, 9.7, 9 and 10. Write a R program to create merged dataframes with all the marks (outer join), all the Rafa’s marks (left outer), all the Roger’s marks (right outer), and the marks in the common courses (inner join).\n\n#Create the dataframes\nrafa &lt;- data.frame(c(\"A\",\"B\",\"D\",\"E\",\"G\"),c(8,9,9.5,8.75,9.5))\nroger &lt;- data.frame(c(\"B\",\"C\",\"D\",\"F\"),c(10,9.7,9,10))\nnames(rafa) &lt;- c(\"Course\",\"Rafa\")\nnames(roger) &lt;- c(\"Course\",\"Roger\")\n\nHow would you obtain a table containing the marks of both students only for their common courses?\n\n merge(rafa, roger, by = “Student”) merge(rafa, roger, by = “Course”) merge(rafa, roger) merge(rafa, roger, by = “Course”, all=TRUE)\n\nHow would you obtain a table containing the marks of both students only for Rafa’s courses?\n\n merge(rafa, roger, by = “Student”) merge(rafa, roger, all.y=TRUE) merge(rafa, roger, all.x=TRUE) merge(rafa, roger, by = “Course”, all=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n How should I arrange my data table?\n\n\n\nA column per experimental condition or a column per variable? Is the same?\n\n\nIn the table Zebrafish_data.csv from the Lesson R5 we have the results of an experiment in which a collaborator scored the number of metastatic cancer cells upon the expression of different transcripts of the EFNA3 gene. Each transcript is cloned into a pLoC plasmid, and we have negative (empty plasmid) and positive controls (wt transcript). Let’s import and check the data.\n\nZFdata &lt;- read.csv(\"data/Zebrafish_data.csv\")\nstr(ZFdata)\n\n'data.frame':   41 obs. of  6 variables:\n $ pLoC : int  36 32 10 26 15 23 17 14 44 12 ...\n $ EFNA3: int  35 33 17 25 89 36 40 36 35 37 ...\n $ NC1  : int  58 26 26 18 20 24 10 31 28 26 ...\n $ NC1s : int  11 11 19 12 12 20 7 104 116 11 ...\n $ NC2  : int  53 37 56 48 27 29 22 79 22 18 ...\n $ NC2s : int  40 43 19 18 33 29 29 25 28 47 ...\n\nhead(ZFdata)\n\n  pLoC EFNA3 NC1 NC1s NC2 NC2s\n1   36    35  58   11  53   40\n2   32    33  26   11  37   43\n3   10    17  26   19  56   19\n4   26    25  18   12  48   18\n5   15    89  20   12  27   33\n6   23    36  24   20  29   29\n\n\nHow many columns has the table? How many variables are there?\nHere we have one column per experimental condition. Thus, this table format does not agree with the standard way to introduce the data in a table, the data-matrix: Rows for cases and columns for variables.\nHaving the data, we transform it in a datamatrix (aka long table) using the function stack(). You can also do it the other way around with the function unstack().\n\nZF_stacked &lt;- stack(ZFdata)\nstr(ZF_stacked)\n\n'data.frame':   246 obs. of  2 variables:\n $ values: int  36 32 10 26 15 23 17 14 44 12 ...\n $ ind   : Factor w/ 6 levels \"pLoC\",\"EFNA3\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\nhead(ZF_stacked)\n\n  values  ind\n1     36 pLoC\n2     32 pLoC\n3     10 pLoC\n4     26 pLoC\n5     15 pLoC\n6     23 pLoC\n\nZF_old &lt;- unstack(ZF_stacked)\nstr(ZF_old)\n\n'data.frame':   41 obs. of  6 variables:\n $ pLoC : int  36 32 10 26 15 23 17 14 44 12 ...\n $ EFNA3: int  35 33 17 25 89 36 40 36 35 37 ...\n $ NC1  : int  58 26 26 18 20 24 10 31 28 26 ...\n $ NC1s : int  11 11 19 12 12 20 7 104 116 11 ...\n $ NC2  : int  53 37 56 48 27 29 22 79 22 18 ...\n $ NC2s : int  40 43 19 18 33 29 29 25 28 47 ...\n\nhead(ZF_old)\n\n  pLoC EFNA3 NC1 NC1s NC2 NC2s\n1   36    35  58   11  53   40\n2   32    33  26   11  37   43\n3   10    17  26   19  56   19\n4   26    25  18   12  48   18\n5   15    89  20   12  27   33\n6   23    36  24   20  29   29\n\n\nHowever, some times the dataset is more complex and there are other variables that change the table structure, as in the table Zebrafish_full.csv. In this case, remember that stack is designed to transform tables of only two variables. Thus, you must stack only the desired two variables and then final construct the table by adding the rest of the information, for instance with cbind(), as in the example below.\n\nZF_full &lt;- read.csv(\"data/Zebrafish_full.csv\", row.names=1)\nhead(ZF_full)\n\n  pLoC EFNA3 NC1 NC1s NC2 NC2s assay\n1   36    35  58   11  53   40     2\n2   32    33  26   11  37   43     2\n3   10    17  26   19  56   19     2\n4   26    25  18   12  48   18     1\n5   15    89  20   12  27   33     1\n6   23    36  24   20  29   29     1\n\n#option 1:\n#step1: stack two main variables (sample & number of cells)\nZF_full_some_stack &lt;- stack(ZF_full[,1:6])\nhead(ZF_full_some_stack,15)\n\n   values  ind\n1      36 pLoC\n2      32 pLoC\n3      10 pLoC\n4      26 pLoC\n5      15 pLoC\n6      23 pLoC\n7      17 pLoC\n8      14 pLoC\n9      44 pLoC\n10     12 pLoC\n11      3 pLoC\n12     21 pLoC\n13     21 pLoC\n14     39 pLoC\n15     19 pLoC\n\n#step2: reconstruct the table adding the third variable\nZF_full_stack &lt;- cbind(ZF_full_some_stack,ZF_full[,7])\ncolnames(ZF_full_stack) &lt;- c(\"Cells\",\"Sample\",\"Assay\")\nhead(ZF_full_stack,15)\n\n   Cells Sample Assay\n1     36   pLoC     2\n2     32   pLoC     2\n3     10   pLoC     2\n4     26   pLoC     1\n5     15   pLoC     1\n6     23   pLoC     1\n7     17   pLoC     3\n8     14   pLoC     2\n9     44   pLoC     3\n10    12   pLoC     1\n11     3   pLoC     1\n12    21   pLoC     1\n13    21   pLoC     3\n14    39   pLoC     2\n15    19   pLoC     3\n\n#option2: shorcut\nZF_full_stack2 &lt;- cbind(stack(ZF_full[,1:6]),ZF_full[,7])\ncolnames(ZF_full_stack2) &lt;- c(\"Cells\",\"Sample\",\"Assay\")\nhead(ZF_full_stack2,15)\n\n   Cells Sample Assay\n1     36   pLoC     2\n2     32   pLoC     2\n3     10   pLoC     2\n4     26   pLoC     1\n5     15   pLoC     1\n6     23   pLoC     1\n7     17   pLoC     3\n8     14   pLoC     2\n9     44   pLoC     3\n10    12   pLoC     1\n11     3   pLoC     1\n12    21   pLoC     1\n13    21   pLoC     3\n14    39   pLoC     2\n15    19   pLoC     3\n\n#the same result in both cases?\nall.equal(ZF_full_stack,ZF_full_stack2)\n\n[1] TRUE\n\n\nRemember that datamatrix is not an R structure, but a general concept in data analysis. Also, for more complex dataframes, I suggest to use the function melt(). However, this function name refers to two different functions in two alternative packages: reshape2 and data.table, with slightly different behavior.\n\n\nFrom the previous exercise with marks of two students, we have a table students with all the marks, in which each student is a column.\n\nstudents &lt;-  merge(rafa, roger, by = \"Course\", all = TRUE)\nstudents\n\n  Course Rafa Roger\n1      A 8.00    NA\n2      B 9.00  10.0\n3      C   NA   9.7\n4      D 9.50   9.0\n5      E 8.75    NA\n6      F   NA  10.0\n7      G 9.50    NA\n\n\nHowever, we need a table in which each column is a variable, as follows:\n\n\n   Course  Mark Student\n1       A  8.00    Rafa\n2       B  9.00    Rafa\n3       C    NA    Rafa\n4       D  9.50    Rafa\n5       E  8.75    Rafa\n6       F    NA    Rafa\n7       G  9.50    Rafa\n8       A    NA   Roger\n9       B 10.00   Roger\n10      C  9.70   Roger\n11      D  9.00   Roger\n12      E    NA   Roger\n13      F 10.00   Roger\n14      G    NA   Roger\n\n\nHow would you obtain the second table?\n\n\n\nSee an answer\n\n#1. Create the table\nstudents2 &lt;- cbind(students[,1], stack(students[,2:3]))\n#Note that we have used stack() for only two columns and bind the output with the column 1 in the previous table\n\n#2. Rename variables\nnames(students2) &lt;- c(\"Course\",\"Mark\",\"Student\")\n\n#3. Show table\nstudents2\n\n   Course  Mark Student\n1       A  8.00    Rafa\n2       B  9.00    Rafa\n3       C    NA    Rafa\n4       D  9.50    Rafa\n5       E  8.75    Rafa\n6       F    NA    Rafa\n7       G  9.50    Rafa\n8       A    NA   Roger\n9       B 10.00   Roger\n10      C  9.70   Roger\n11      D  9.00   Roger\n12      E    NA   Roger\n13      F 10.00   Roger\n14      G    NA   Roger"
  },
  {
    "objectID": "r6.html#sorting-and-subsetting-data",
    "href": "r6.html#sorting-and-subsetting-data",
    "title": "R6: Advanced data management",
    "section": "",
    "text": "How come? Numeric? Alphabetic? increasing or decreasing order?\nThere are two main functions in R to order your data, sort() and order(). Let’s see an example using the file coli_genomes_renamed.csv, that we used in the lesson R3.\n\n#load the dataset\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes_renamed.csv\", strip.white = TRUE)\n\n#test sort() & order() in a vector\norder(coli_genomes$Year)\n\n [1] 15  7  8  6  3  2  5 14 16 17 18 20 22  9 10 11 12 13 19 21  1  4\n\nsort(coli_genomes$Year)\n\n [1] 2005 2006 2006 2007 2008 2010 2011 2011 2012 2012 2012 2012 2012 2013 2013\n[16] 2013 2013 2013 2015 2016\n\nsort(coli_genomes$Year, decreasing=TRUE)\n\n [1] 2016 2015 2013 2013 2013 2013 2013 2012 2012 2012 2012 2012 2011 2011 2010\n[16] 2008 2007 2006 2006 2005\n\norder(coli_genomes$Phylogroup)\n\n [1]  4  5  6  7  8 12 13 18 20 21  3 14 22  2 15 16 17 19  1  9 10 11\n\nsort(coli_genomes$Phylogroup)\n\n [1] \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"A\"  \"B1\" \"B1\" \"B1\" \"C\"  \"C\" \n[16] \"C\"  \"C\"  \"C\"  \"D\"  \"D\"  \"D\"  \"D\" \n\n\nAs you noticed, the R function order() returns a permutation of the order of the elements of a vector. The output is an index vector, not the vector itself. Also note that if the vector contains any NA values, they will be at the end of the index vector by default.\nOn the other hand, the function sort() returns returns the vector you pass as input sorted in ascending order by default.\nBoth functions order the data increasingly, and can be used for numeric or string variables. If you set the decreasing argument to TRUE in a sort() or order(), you will geet the vector of indices in descending order.\nYou can also use these functions to order a data frame according to a vector. Alternatively, you can also arrange or shuffle a data frame in reverse order.\n\n#order the dataframe by one column, sort or order?\ncoli_genomes[order(coli_genomes$Year),]\n\n    Strain    Biosample Year  Source Phylogroup Serotype  Clonotype\n15 LREC255 SAMN14278630 2005   Avian          C  O78:H19     CH4-27\n7  LREC244 SAMN14278619 2006 Porcine          A   O2:H32    CH11-23\n8  LREC245 SAMN14278620 2006 Porcine          A  ONT:H45    C11-398\n6  LREC243 SAMN14278618 2007 Porcine          A   O9:H37     CH7-31\n3  LREC240 SAMN14278615 2008   Human         B1  O76:H30    CH29-38\n2  LREC239 SAMN14278614 2010   Human          C O153:H19     CH4-25\n5  LREC242 SAMN14278617 2011 Porcine          A  ONT:HNM     CH7-54\n14 LREC254 SAMN14278629 2011   Avian         B1 O142:H30     C41-35\n16 LREC256 SAMN14278631 2012   Human          C   O8:H19     CH4-54\n17 LREC257 SAMN14278632 2012   Human          C   O9:H19     CH4-27\n18 LREC258 SAMN14278633 2012   Human          A    O9:H4     CH7-34\n20 LREC260 SAMN14278635 2012   Human          A  ONT:H33    CH11-54\n22 LREC262 SAMN14278637 2012   Human         B1  O66:H10     CH4-32\n9  LREC249 SAMN14278624 2013   Human          D O145:H28   CH23-331\n10 LREC250 SAMN14278625 2013   Human          D O145:H28   CH23-331\n11 LREC251 SAMN14278626 2013   Human          D O145:H28   CH23-331\n12 LREC252 SAMN14278627 2013   Human          A  ONT:H37     C11-54\n13 LREC253 SAMN14278628 2013   Avian          A  ONT:H19    CH94-23\n19 LREC259 SAMN14278634 2015   Human          C   O9:H19 CH4like-27\n21 LREC261 SAMN14278636 2016   Human          A  O98:H26    CH27-23\n1  LREC237 SAMN14278613   NA   Human          D  ONT:H28   CH23-331\n4  LREC241 SAMN14278616   NA   Human          A  O78:H11    CH11-41\n   Sequence.Type VF Plasmids kmer Contigs    N50 longest.contig..bp.\n15          ST88 11        4  113     108 405376             1190696\n7           ST10  4        7  115     277  89185              281444\n8        ST10888  2        7  115     203  94368              280268\n6         ST3011  7        3   93     158 106897              369508\n3          ST156 10        2   89     114 270767              738861\n2           ST88 14        3  117     159 323172              760527\n5          ST746  5        9   89     320  45936              128053\n14         ST359  9        4  113     102 240847              460510\n16          ST88 14        2  113     108 281822             1140163\n17          ST88 14        4   91     224 140521              284241\n18          ST46  8        4   85     204  86565              300086\n20          ST10  2        5  117     120 228491              576949\n22        ST1049  4        2  113      94 325747              822206\n9           ST32 22        1  115     376 200150              424527\n10         ST137 22        3  111     205 281589              617142\n11          ST32 20        1  113     206 182651              412836\n12          ST48  1        0  113     140 105396              272304\n13         ST347  2        0  117     134 110661              497785\n19       ST10890 13        3  113     171 326962              749412\n21        ST8233  2        4   89     114 187945              537848\n1          ST524 18        3  117     223 272287              662555\n4           ST48  5        3  117     212 112160              285056\n   Assembly_length contigs1kb average_contig\n15         5196698         38       48117.57\n7          5406295        155       19517.31\n8          4796593        114       23628.54\n6          4638334         93       29356.54\n3          4875343         47       42766.17\n2          5415613         57       34060.46\n5          4858138        212       15181.68\n14         4992565         42       48946.72\n16         5252065         43       48630.23\n17         5085107        110       22701.37\n18         4915667        121       24096.41\n20         4881205         48       40676.71\n22         4839344         32       51482.38\n9          5389075        131       14332.65\n10         5340478         78       26051.11\n11         5276782         95       25615.45\n12         4507328         78       32195.20\n13         4664768         77       34811.70\n19         5200701         77       30413.46\n21         4821342         53       42292.47\n1          5341632         74       23953.51\n4          5167401        101       24374.53\n\ncoli_genomes[sort(coli_genomes$Year),] #what happened?\n\n      Strain Biosample Year Source Phylogroup Serotype Clonotype Sequence.Type\nNA      &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.1    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.2    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.3    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.4    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.5    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.6    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.7    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.8    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.9    &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.10   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.11   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.12   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.13   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.14   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.15   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.16   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.17   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.18   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\nNA.19   &lt;NA&gt;      &lt;NA&gt;   NA   &lt;NA&gt;       &lt;NA&gt;     &lt;NA&gt;      &lt;NA&gt;          &lt;NA&gt;\n      VF Plasmids kmer Contigs N50 longest.contig..bp. Assembly_length\nNA    NA       NA   NA      NA  NA                  NA              NA\nNA.1  NA       NA   NA      NA  NA                  NA              NA\nNA.2  NA       NA   NA      NA  NA                  NA              NA\nNA.3  NA       NA   NA      NA  NA                  NA              NA\nNA.4  NA       NA   NA      NA  NA                  NA              NA\nNA.5  NA       NA   NA      NA  NA                  NA              NA\nNA.6  NA       NA   NA      NA  NA                  NA              NA\nNA.7  NA       NA   NA      NA  NA                  NA              NA\nNA.8  NA       NA   NA      NA  NA                  NA              NA\nNA.9  NA       NA   NA      NA  NA                  NA              NA\nNA.10 NA       NA   NA      NA  NA                  NA              NA\nNA.11 NA       NA   NA      NA  NA                  NA              NA\nNA.12 NA       NA   NA      NA  NA                  NA              NA\nNA.13 NA       NA   NA      NA  NA                  NA              NA\nNA.14 NA       NA   NA      NA  NA                  NA              NA\nNA.15 NA       NA   NA      NA  NA                  NA              NA\nNA.16 NA       NA   NA      NA  NA                  NA              NA\nNA.17 NA       NA   NA      NA  NA                  NA              NA\nNA.18 NA       NA   NA      NA  NA                  NA              NA\nNA.19 NA       NA   NA      NA  NA                  NA              NA\n      contigs1kb average_contig\nNA            NA             NA\nNA.1          NA             NA\nNA.2          NA             NA\nNA.3          NA             NA\nNA.4          NA             NA\nNA.5          NA             NA\nNA.6          NA             NA\nNA.7          NA             NA\nNA.8          NA             NA\nNA.9          NA             NA\nNA.10         NA             NA\nNA.11         NA             NA\nNA.12         NA             NA\nNA.13         NA             NA\nNA.14         NA             NA\nNA.15         NA             NA\nNA.16         NA             NA\nNA.17         NA             NA\nNA.18         NA             NA\nNA.19         NA             NA\n\n# Random order of rows with sample \ncoli_genomes[sample(nrow(coli_genomes), replace = FALSE), ]\n\n    Strain    Biosample Year  Source Phylogroup Serotype  Clonotype\n21 LREC261 SAMN14278636 2016   Human          A  O98:H26    CH27-23\n2  LREC239 SAMN14278614 2010   Human          C O153:H19     CH4-25\n22 LREC262 SAMN14278637 2012   Human         B1  O66:H10     CH4-32\n12 LREC252 SAMN14278627 2013   Human          A  ONT:H37     C11-54\n7  LREC244 SAMN14278619 2006 Porcine          A   O2:H32    CH11-23\n14 LREC254 SAMN14278629 2011   Avian         B1 O142:H30     C41-35\n15 LREC255 SAMN14278630 2005   Avian          C  O78:H19     CH4-27\n18 LREC258 SAMN14278633 2012   Human          A    O9:H4     CH7-34\n3  LREC240 SAMN14278615 2008   Human         B1  O76:H30    CH29-38\n20 LREC260 SAMN14278635 2012   Human          A  ONT:H33    CH11-54\n16 LREC256 SAMN14278631 2012   Human          C   O8:H19     CH4-54\n1  LREC237 SAMN14278613   NA   Human          D  ONT:H28   CH23-331\n11 LREC251 SAMN14278626 2013   Human          D O145:H28   CH23-331\n6  LREC243 SAMN14278618 2007 Porcine          A   O9:H37     CH7-31\n13 LREC253 SAMN14278628 2013   Avian          A  ONT:H19    CH94-23\n4  LREC241 SAMN14278616   NA   Human          A  O78:H11    CH11-41\n9  LREC249 SAMN14278624 2013   Human          D O145:H28   CH23-331\n8  LREC245 SAMN14278620 2006 Porcine          A  ONT:H45    C11-398\n19 LREC259 SAMN14278634 2015   Human          C   O9:H19 CH4like-27\n17 LREC257 SAMN14278632 2012   Human          C   O9:H19     CH4-27\n10 LREC250 SAMN14278625 2013   Human          D O145:H28   CH23-331\n5  LREC242 SAMN14278617 2011 Porcine          A  ONT:HNM     CH7-54\n   Sequence.Type VF Plasmids kmer Contigs    N50 longest.contig..bp.\n21        ST8233  2        4   89     114 187945              537848\n2           ST88 14        3  117     159 323172              760527\n22        ST1049  4        2  113      94 325747              822206\n12          ST48  1        0  113     140 105396              272304\n7           ST10  4        7  115     277  89185              281444\n14         ST359  9        4  113     102 240847              460510\n15          ST88 11        4  113     108 405376             1190696\n18          ST46  8        4   85     204  86565              300086\n3          ST156 10        2   89     114 270767              738861\n20          ST10  2        5  117     120 228491              576949\n16          ST88 14        2  113     108 281822             1140163\n1          ST524 18        3  117     223 272287              662555\n11          ST32 20        1  113     206 182651              412836\n6         ST3011  7        3   93     158 106897              369508\n13         ST347  2        0  117     134 110661              497785\n4           ST48  5        3  117     212 112160              285056\n9           ST32 22        1  115     376 200150              424527\n8        ST10888  2        7  115     203  94368              280268\n19       ST10890 13        3  113     171 326962              749412\n17          ST88 14        4   91     224 140521              284241\n10         ST137 22        3  111     205 281589              617142\n5          ST746  5        9   89     320  45936              128053\n   Assembly_length contigs1kb average_contig\n21         4821342         53       42292.47\n2          5415613         57       34060.46\n22         4839344         32       51482.38\n12         4507328         78       32195.20\n7          5406295        155       19517.31\n14         4992565         42       48946.72\n15         5196698         38       48117.57\n18         4915667        121       24096.41\n3          4875343         47       42766.17\n20         4881205         48       40676.71\n16         5252065         43       48630.23\n1          5341632         74       23953.51\n11         5276782         95       25615.45\n6          4638334         93       29356.54\n13         4664768         77       34811.70\n4          5167401        101       24374.53\n9          5389075        131       14332.65\n8          4796593        114       23628.54\n19         5200701         77       30413.46\n17         5085107        110       22701.37\n10         5340478         78       26051.11\n5          4858138        212       15181.68\n\n# Reverse order of rows\ncoli_genomes[nrow(coli_genomes):1, ]\n\n    Strain    Biosample Year  Source Phylogroup Serotype  Clonotype\n22 LREC262 SAMN14278637 2012   Human         B1  O66:H10     CH4-32\n21 LREC261 SAMN14278636 2016   Human          A  O98:H26    CH27-23\n20 LREC260 SAMN14278635 2012   Human          A  ONT:H33    CH11-54\n19 LREC259 SAMN14278634 2015   Human          C   O9:H19 CH4like-27\n18 LREC258 SAMN14278633 2012   Human          A    O9:H4     CH7-34\n17 LREC257 SAMN14278632 2012   Human          C   O9:H19     CH4-27\n16 LREC256 SAMN14278631 2012   Human          C   O8:H19     CH4-54\n15 LREC255 SAMN14278630 2005   Avian          C  O78:H19     CH4-27\n14 LREC254 SAMN14278629 2011   Avian         B1 O142:H30     C41-35\n13 LREC253 SAMN14278628 2013   Avian          A  ONT:H19    CH94-23\n12 LREC252 SAMN14278627 2013   Human          A  ONT:H37     C11-54\n11 LREC251 SAMN14278626 2013   Human          D O145:H28   CH23-331\n10 LREC250 SAMN14278625 2013   Human          D O145:H28   CH23-331\n9  LREC249 SAMN14278624 2013   Human          D O145:H28   CH23-331\n8  LREC245 SAMN14278620 2006 Porcine          A  ONT:H45    C11-398\n7  LREC244 SAMN14278619 2006 Porcine          A   O2:H32    CH11-23\n6  LREC243 SAMN14278618 2007 Porcine          A   O9:H37     CH7-31\n5  LREC242 SAMN14278617 2011 Porcine          A  ONT:HNM     CH7-54\n4  LREC241 SAMN14278616   NA   Human          A  O78:H11    CH11-41\n3  LREC240 SAMN14278615 2008   Human         B1  O76:H30    CH29-38\n2  LREC239 SAMN14278614 2010   Human          C O153:H19     CH4-25\n1  LREC237 SAMN14278613   NA   Human          D  ONT:H28   CH23-331\n   Sequence.Type VF Plasmids kmer Contigs    N50 longest.contig..bp.\n22        ST1049  4        2  113      94 325747              822206\n21        ST8233  2        4   89     114 187945              537848\n20          ST10  2        5  117     120 228491              576949\n19       ST10890 13        3  113     171 326962              749412\n18          ST46  8        4   85     204  86565              300086\n17          ST88 14        4   91     224 140521              284241\n16          ST88 14        2  113     108 281822             1140163\n15          ST88 11        4  113     108 405376             1190696\n14         ST359  9        4  113     102 240847              460510\n13         ST347  2        0  117     134 110661              497785\n12          ST48  1        0  113     140 105396              272304\n11          ST32 20        1  113     206 182651              412836\n10         ST137 22        3  111     205 281589              617142\n9           ST32 22        1  115     376 200150              424527\n8        ST10888  2        7  115     203  94368              280268\n7           ST10  4        7  115     277  89185              281444\n6         ST3011  7        3   93     158 106897              369508\n5          ST746  5        9   89     320  45936              128053\n4           ST48  5        3  117     212 112160              285056\n3          ST156 10        2   89     114 270767              738861\n2           ST88 14        3  117     159 323172              760527\n1          ST524 18        3  117     223 272287              662555\n   Assembly_length contigs1kb average_contig\n22         4839344         32       51482.38\n21         4821342         53       42292.47\n20         4881205         48       40676.71\n19         5200701         77       30413.46\n18         4915667        121       24096.41\n17         5085107        110       22701.37\n16         5252065         43       48630.23\n15         5196698         38       48117.57\n14         4992565         42       48946.72\n13         4664768         77       34811.70\n12         4507328         78       32195.20\n11         5276782         95       25615.45\n10         5340478         78       26051.11\n9          5389075        131       14332.65\n8          4796593        114       23628.54\n7          5406295        155       19517.31\n6          4638334         93       29356.54\n5          4858138        212       15181.68\n4          5167401        101       24374.53\n3          4875343         47       42766.17\n2          5415613         57       34060.46\n1          5341632         74       23953.51\n\n\nNow imagine you have a large data set and want to subdivide only some cases (=rows). You already know some ways to do this, but in the following example we will test the function subset(), which is very handy when you want to extract the cases that satisfy multiple conditions.\nImagine that for a new project we want to select the strains with better genome design quality or from a subset. We will keep strains from Phylogroup A, with an assembly N50 &gt; 150,000 bp and less than 100 contigs &gt;= 1 kb.\n\n#option 1: multi-step\nselection&lt;-coli_genomes[coli_genomes$contigs1kb&lt;100,]\nselection&lt;-selection[selection$N50&gt;150000,]\nselection&lt;-selection[selection$Phylogroup=='A',]\n\n#option 2:  which statements \nselection2&lt;-coli_genomes[which(coli_genomes$contigs1kb&lt;100 & coli_genomes$N50&gt;150000 & coli_genomes$Phylogroup=='A'),]\n\n#option 2b:with attach(dataframe) you avoid repeat the name of the dataframe\nattach(coli_genomes)\nselection2 &lt;- coli_genomes[which(contigs1kb&lt;100 & N50&gt;150000 & Phylogroup=='A'),]\ndetach(coli_genomes) #detach dataframe\n\n#option 3: subset() is a straightforward way to do that trick \nselection3&lt;-subset(coli_genomes, subset= contigs1kb&lt;100 & N50&gt;150000 & Phylogroup=='A')\n\nIf you want to make sure that the three methods give the same output, you can check the data frame, or check the dimensions or structure with dim() or str(), but this is difficult with large data sets with hundreds or thousands of cases (see below). The function all.equal() does this task for you.\n\n#Are they the same?\nall.equal(selection,selection2) \n\n[1] TRUE\n\nall.equal(selection,selection3)\n\n[1] TRUE"
  },
  {
    "objectID": "r6.html#combining-dataframes",
    "href": "r6.html#combining-dataframes",
    "title": "R6: Advanced data management",
    "section": "",
    "text": "If you work with a lot of data or get different batches of related data frames, you may have multiple tables and want to combine them in different ways. An easy way is to use cbind() or rbind() if you have the same number of rows and columns. A more practical way is to use the merge() function. Look and test the following examples using the coli_genomes data frame and a new table named colis3.csv\n\ncolis &lt;- read.csv2(file = 'data/colis3.csv')\n#rbind() and cbind()\nrbind(coli_genomes,colis) #did it work? why??\n\nError in rbind(deparse.level, ...): numbers of columns of arguments do not match\n\ncbind(coli_genomes, colis) \n\nError in data.frame(..., check.names = FALSE): arguments imply differing number of rows: 22, 27\n\n#merge()\nmerge&lt;-merge(coli_genomes,colis) #inner join\nstr(merge)\n\n'data.frame':   22 obs. of  24 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 22 22 ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 1 3 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 115 111 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 376 205 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 200150 281589 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 424527 617142 ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5389075 5340478 ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 131 78 ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 12 13 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 7 7 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 2 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 26 21 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge1&lt;-merge(coli_genomes,colis, by=\"Strain\")\nstr(merge1)\n\n'data.frame':   22 obs. of  25 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Year.x             : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 22 22 ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 1 3 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 115 111 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 376 205 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 200150 281589 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 424527 617142 ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5389075 5340478 ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 131 78 ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 12 13 ...\n $ Year.y             : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 7 7 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 2 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 26 21 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge2&lt;-merge(coli_genomes,colis, by=\"Year\")\nstr(merge2)\n\n'data.frame':   81 obs. of  25 variables:\n $ Year               : int  2005 2006 2006 2006 2006 2007 2008 2010 2010 2011 ...\n $ Strain.x           : chr  \"LREC255\" \"LREC244\" \"LREC244\" \"LREC245\" ...\n $ Biosample          : chr  \"SAMN14278630\" \"SAMN14278619\" \"SAMN14278619\" \"SAMN14278620\" ...\n $ Source             : chr  \"Avian\" \"Porcine\" \"Porcine\" \"Porcine\" ...\n $ Phylogroup         : chr  \"C\" \"A\" \"A\" \"A\" ...\n $ Serotype           : chr  \"O78:H19\" \"O2:H32\" \"O2:H32\" \"ONT:H45\" ...\n $ Clonotype          : chr  \"CH4-27\" \"CH11-23\" \"CH11-23\" \"C11-398\" ...\n $ Sequence.Type      : chr  \"ST88\" \"ST10\" \"ST10\" \"ST10888\" ...\n $ VF                 : int  11 4 4 2 2 7 10 14 14 5 ...\n $ Plasmids           : int  4 7 7 7 7 3 2 3 3 9 ...\n $ kmer               : int  113 115 115 115 115 93 89 117 117 89 ...\n $ Contigs            : int  108 277 277 203 203 158 114 159 159 320 ...\n $ N50                : int  405376 89185 89185 94368 94368 106897 270767 323172 323172 45936 ...\n $ longest.contig..bp.: int  1190696 281444 281444 280268 280268 369508 738861 760527 760527 128053 ...\n $ Assembly_length    : int  5196698 5406295 5406295 4796593 4796593 4638334 4875343 5415613 5415613 4858138 ...\n $ contigs1kb         : int  38 155 155 114 114 93 47 57 57 212 ...\n $ average_contig     : num  48118 19517 19517 23629 23629 ...\n $ X                  : int  18 8 7 8 7 6 3 9 2 5 ...\n $ Strain.y           : chr  \"LREC255\" \"LREC245\" \"LREC244\" \"LREC245\" ...\n $ CRISPR             : int  10 10 7 10 7 10 5 6 12 9 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),, CAS-TypeID (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),, CAS (n=1),, CAS (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),, CAS (n=1),, CAS (n=1),]\" ...\n $ AMR                : int  NA 4 2 4 2 2 5 4 2 4 ...\n $ Vir                : int  7 4 7 4 7 6 10 8 12 4 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-08-03\" \"2019-12-30\" \"2018-08-14\" \"2019-12-30\" ...\n\nmerge3&lt;-merge(coli_genomes,colis, by=c(\"Strain\",\"Year\"))\nstr(merge3)\n\n'data.frame':   22 obs. of  24 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 22 22 ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 1 3 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 115 111 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 376 205 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 200150 281589 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 424527 617142 ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5389075 5340478 ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 131 78 ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 12 13 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 7 7 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 2 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 26 21 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge4&lt;-merge(coli_genomes,colis, all=TRUE) #outer join\nstr(merge4)\n\n'data.frame':   27 obs. of  24 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2010 2013 ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 NA NA ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 NA NA ...\n $ kmer               : int  117 117 89 117 89 93 115 115 NA NA ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 NA NA ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 NA NA ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 NA NA ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 NA NA ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 NA NA ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 9 10 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 6 8 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 4 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 8 23 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge5&lt;-merge(coli_genomes,colis, all.x=TRUE)\nstr(merge5)\n\n'data.frame':   22 obs. of  24 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 22 22 ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 1 3 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 115 111 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 376 205 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 200150 281589 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 424527 617142 ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5389075 5340478 ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 131 78 ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 12 13 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 7 7 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 2 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 26 21 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge6&lt;-merge(coli_genomes,colis, all.y=TRUE)\nstr(merge6)\n\n'data.frame':   27 obs. of  24 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2010 2013 ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 NA NA ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 NA NA ...\n $ kmer               : int  117 117 89 117 89 93 115 115 NA NA ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 NA NA ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 NA NA ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 NA NA ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 NA NA ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 NA NA ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 2 3 4 5 6 7 8 9 10 ...\n $ CRISPR             : int  9 12 5 9 9 10 7 10 6 8 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS (n=1),, CAS (n=1),, CAS (n=1),, CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 5 2 4 2 2 4 4 2 ...\n $ Vir                : int  20 12 10 3 4 6 7 4 8 23 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2019-02-27\" \"2018-03-08\" \"2020-10-12\" ...\n\nmerge7&lt;-merge(coli_genomes,colis, by=NULL)\nstr(merge7)\n\n'data.frame':   594 obs. of  26 variables:\n $ Strain.x           : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Year.x             : int  NA 2010 2008 NA 2011 2007 2006 2006 2013 2013 ...\n $ Source             : chr  \"Human\" \"Human\" \"Human\" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 22 22 ...\n $ Plasmids           : int  3 3 2 3 9 3 7 7 1 3 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 115 111 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 376 205 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 200150 281589 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 424527 617142 ...\n $ Assembly_length    : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5389075 5340478 ...\n $ contigs1kb         : int  74 57 47 101 212 93 155 114 131 78 ...\n $ average_contig     : num  23954 34060 42766 24375 15182 ...\n $ X                  : int  1 1 1 1 1 1 1 1 1 1 ...\n $ Strain.y           : chr  \"LREC237\" \"LREC237\" \"LREC237\" \"LREC237\" ...\n $ Year.y             : int  NA NA NA NA NA NA NA NA NA NA ...\n $ CRISPR             : int  9 9 9 9 9 9 9 9 9 9 ...\n $ Cas                : chr  \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" \"[CAS-TypeIE (n=1),]\" ...\n $ AMR                : int  2 2 2 2 2 2 2 2 2 2 ...\n $ Vir                : int  20 20 20 20 20 20 20 20 20 20 ...\n $ Integron           : int  0 0 0 0 0 0 0 0 0 0 ...\n $ seqs               : chr  \"2020-07-24\" \"2020-07-24\" \"2020-07-24\" \"2020-07-24\" ...\n\n\nAs you noticed, the function merge() combines dataframes, however it is a generic function that can be also used with other objects (like vectors or matrices), but they will be coerced to data.frame class.\nBy default, merge() will do a natural join or inner join, merging two dataframes in one that contains only once the common elements of both. The arguments all = TRUE, all.x = TRUE and all.y = TRUE will force an outer join in which all elements of both, the first or the second dataframes are selected. In these cases, if not all rows in the first data frame match all the rows in the second, the output is filled with NA values in those cases.\nFinally, the Cartesian product of both dataframes can be obtained in R setting as NULL the argument by of the merge() function.\n\n\nTwo students enrolled in different University courses: Rafa in A, B, D, E and G and Roger in B, C, D and F. Rafa got the following marks 8, 9, 9.5, 8.75 and 9 and Roger obtained 10, 9.7, 9 and 10. Write a R program to create merged dataframes with all the marks (outer join), all the Rafa’s marks (left outer), all the Roger’s marks (right outer), and the marks in the common courses (inner join).\n\n#Create the dataframes\nrafa &lt;- data.frame(c(\"A\",\"B\",\"D\",\"E\",\"G\"),c(8,9,9.5,8.75,9.5))\nroger &lt;- data.frame(c(\"B\",\"C\",\"D\",\"F\"),c(10,9.7,9,10))\nnames(rafa) &lt;- c(\"Course\",\"Rafa\")\nnames(roger) &lt;- c(\"Course\",\"Roger\")\n\nHow would you obtain a table containing the marks of both students only for their common courses?\n\n merge(rafa, roger, by = “Student”) merge(rafa, roger, by = “Course”) merge(rafa, roger) merge(rafa, roger, by = “Course”, all=TRUE)\n\nHow would you obtain a table containing the marks of both students only for Rafa’s courses?\n\n merge(rafa, roger, by = “Student”) merge(rafa, roger, all.y=TRUE) merge(rafa, roger, all.x=TRUE) merge(rafa, roger, by = “Course”, all=TRUE)"
  },
  {
    "objectID": "r6.html#zebra",
    "href": "r6.html#zebra",
    "title": "R6: Advanced data management",
    "section": "",
    "text": "How should I arrange my data table?\n\n\n\nA column per experimental condition or a column per variable? Is the same?\n\n\nIn the table Zebrafish_data.csv from the Lesson R5 we have the results of an experiment in which a collaborator scored the number of metastatic cancer cells upon the expression of different transcripts of the EFNA3 gene. Each transcript is cloned into a pLoC plasmid, and we have negative (empty plasmid) and positive controls (wt transcript). Let’s import and check the data.\n\nZFdata &lt;- read.csv(\"data/Zebrafish_data.csv\")\nstr(ZFdata)\n\n'data.frame':   41 obs. of  6 variables:\n $ pLoC : int  36 32 10 26 15 23 17 14 44 12 ...\n $ EFNA3: int  35 33 17 25 89 36 40 36 35 37 ...\n $ NC1  : int  58 26 26 18 20 24 10 31 28 26 ...\n $ NC1s : int  11 11 19 12 12 20 7 104 116 11 ...\n $ NC2  : int  53 37 56 48 27 29 22 79 22 18 ...\n $ NC2s : int  40 43 19 18 33 29 29 25 28 47 ...\n\nhead(ZFdata)\n\n  pLoC EFNA3 NC1 NC1s NC2 NC2s\n1   36    35  58   11  53   40\n2   32    33  26   11  37   43\n3   10    17  26   19  56   19\n4   26    25  18   12  48   18\n5   15    89  20   12  27   33\n6   23    36  24   20  29   29\n\n\nHow many columns has the table? How many variables are there?\nHere we have one column per experimental condition. Thus, this table format does not agree with the standard way to introduce the data in a table, the data-matrix: Rows for cases and columns for variables.\nHaving the data, we transform it in a datamatrix (aka long table) using the function stack(). You can also do it the other way around with the function unstack().\n\nZF_stacked &lt;- stack(ZFdata)\nstr(ZF_stacked)\n\n'data.frame':   246 obs. of  2 variables:\n $ values: int  36 32 10 26 15 23 17 14 44 12 ...\n $ ind   : Factor w/ 6 levels \"pLoC\",\"EFNA3\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\nhead(ZF_stacked)\n\n  values  ind\n1     36 pLoC\n2     32 pLoC\n3     10 pLoC\n4     26 pLoC\n5     15 pLoC\n6     23 pLoC\n\nZF_old &lt;- unstack(ZF_stacked)\nstr(ZF_old)\n\n'data.frame':   41 obs. of  6 variables:\n $ pLoC : int  36 32 10 26 15 23 17 14 44 12 ...\n $ EFNA3: int  35 33 17 25 89 36 40 36 35 37 ...\n $ NC1  : int  58 26 26 18 20 24 10 31 28 26 ...\n $ NC1s : int  11 11 19 12 12 20 7 104 116 11 ...\n $ NC2  : int  53 37 56 48 27 29 22 79 22 18 ...\n $ NC2s : int  40 43 19 18 33 29 29 25 28 47 ...\n\nhead(ZF_old)\n\n  pLoC EFNA3 NC1 NC1s NC2 NC2s\n1   36    35  58   11  53   40\n2   32    33  26   11  37   43\n3   10    17  26   19  56   19\n4   26    25  18   12  48   18\n5   15    89  20   12  27   33\n6   23    36  24   20  29   29\n\n\nHowever, some times the dataset is more complex and there are other variables that change the table structure, as in the table Zebrafish_full.csv. In this case, remember that stack is designed to transform tables of only two variables. Thus, you must stack only the desired two variables and then final construct the table by adding the rest of the information, for instance with cbind(), as in the example below.\n\nZF_full &lt;- read.csv(\"data/Zebrafish_full.csv\", row.names=1)\nhead(ZF_full)\n\n  pLoC EFNA3 NC1 NC1s NC2 NC2s assay\n1   36    35  58   11  53   40     2\n2   32    33  26   11  37   43     2\n3   10    17  26   19  56   19     2\n4   26    25  18   12  48   18     1\n5   15    89  20   12  27   33     1\n6   23    36  24   20  29   29     1\n\n#option 1:\n#step1: stack two main variables (sample & number of cells)\nZF_full_some_stack &lt;- stack(ZF_full[,1:6])\nhead(ZF_full_some_stack,15)\n\n   values  ind\n1      36 pLoC\n2      32 pLoC\n3      10 pLoC\n4      26 pLoC\n5      15 pLoC\n6      23 pLoC\n7      17 pLoC\n8      14 pLoC\n9      44 pLoC\n10     12 pLoC\n11      3 pLoC\n12     21 pLoC\n13     21 pLoC\n14     39 pLoC\n15     19 pLoC\n\n#step2: reconstruct the table adding the third variable\nZF_full_stack &lt;- cbind(ZF_full_some_stack,ZF_full[,7])\ncolnames(ZF_full_stack) &lt;- c(\"Cells\",\"Sample\",\"Assay\")\nhead(ZF_full_stack,15)\n\n   Cells Sample Assay\n1     36   pLoC     2\n2     32   pLoC     2\n3     10   pLoC     2\n4     26   pLoC     1\n5     15   pLoC     1\n6     23   pLoC     1\n7     17   pLoC     3\n8     14   pLoC     2\n9     44   pLoC     3\n10    12   pLoC     1\n11     3   pLoC     1\n12    21   pLoC     1\n13    21   pLoC     3\n14    39   pLoC     2\n15    19   pLoC     3\n\n#option2: shorcut\nZF_full_stack2 &lt;- cbind(stack(ZF_full[,1:6]),ZF_full[,7])\ncolnames(ZF_full_stack2) &lt;- c(\"Cells\",\"Sample\",\"Assay\")\nhead(ZF_full_stack2,15)\n\n   Cells Sample Assay\n1     36   pLoC     2\n2     32   pLoC     2\n3     10   pLoC     2\n4     26   pLoC     1\n5     15   pLoC     1\n6     23   pLoC     1\n7     17   pLoC     3\n8     14   pLoC     2\n9     44   pLoC     3\n10    12   pLoC     1\n11     3   pLoC     1\n12    21   pLoC     1\n13    21   pLoC     3\n14    39   pLoC     2\n15    19   pLoC     3\n\n#the same result in both cases?\nall.equal(ZF_full_stack,ZF_full_stack2)\n\n[1] TRUE\n\n\nRemember that datamatrix is not an R structure, but a general concept in data analysis. Also, for more complex dataframes, I suggest to use the function melt(). However, this function name refers to two different functions in two alternative packages: reshape2 and data.table, with slightly different behavior.\n\n\nFrom the previous exercise with marks of two students, we have a table students with all the marks, in which each student is a column.\n\nstudents &lt;-  merge(rafa, roger, by = \"Course\", all = TRUE)\nstudents\n\n  Course Rafa Roger\n1      A 8.00    NA\n2      B 9.00  10.0\n3      C   NA   9.7\n4      D 9.50   9.0\n5      E 8.75    NA\n6      F   NA  10.0\n7      G 9.50    NA\n\n\nHowever, we need a table in which each column is a variable, as follows:\n\n\n   Course  Mark Student\n1       A  8.00    Rafa\n2       B  9.00    Rafa\n3       C    NA    Rafa\n4       D  9.50    Rafa\n5       E  8.75    Rafa\n6       F    NA    Rafa\n7       G  9.50    Rafa\n8       A    NA   Roger\n9       B 10.00   Roger\n10      C  9.70   Roger\n11      D  9.00   Roger\n12      E    NA   Roger\n13      F 10.00   Roger\n14      G    NA   Roger\n\n\nHow would you obtain the second table?\n\n\n\nSee an answer\n\n#1. Create the table\nstudents2 &lt;- cbind(students[,1], stack(students[,2:3]))\n#Note that we have used stack() for only two columns and bind the output with the column 1 in the previous table\n\n#2. Rename variables\nnames(students2) &lt;- c(\"Course\",\"Mark\",\"Student\")\n\n#3. Show table\nstudents2\n\n   Course  Mark Student\n1       A  8.00    Rafa\n2       B  9.00    Rafa\n3       C    NA    Rafa\n4       D  9.50    Rafa\n5       E  8.75    Rafa\n6       F    NA    Rafa\n7       G  9.50    Rafa\n8       A    NA   Roger\n9       B 10.00   Roger\n10      C  9.70   Roger\n11      D  9.00   Roger\n12      E    NA   Roger\n13      F 10.00   Roger\n14      G    NA   Roger"
  },
  {
    "objectID": "r6.html#fast-loading-of-huge-datasets-and-creation-of-contingency-tables",
    "href": "r6.html#fast-loading-of-huge-datasets-and-creation-of-contingency-tables",
    "title": "R6: Advanced data management",
    "section": "2.1 Fast loading of huge datasets and creation of contingency tables",
    "text": "2.1 Fast loading of huge datasets and creation of contingency tables\nWe are going to make some examples with a huge dataset of Covid19 Vaccination data in EU. The data is publicly available at https://www.ecdc.europa.eu/en/publications-data/data-covid-19-vaccination-eu-eea. While you can download and open a file from internet in R, in order to use the same dataset, we have a file vaccines_EU_22oct2022.csv in our data folder.\n\n\n\n\n\n\nNote\n\n\n\nFrom this point on, in some examples we will show only some lines of the output of the code chunks (you will notice that the output ends with — Cropped output —). Otherwise, this document is very long and difficult to follow.\nAs always, it’s encouraged to run the code yourself to see and understand the full returned output.\n\n\n\n#open directly from the ECDC\nvaccines &lt;- read.csv(file = \"https://opendata.ecdc.europa.eu/covid19/vaccine_tracker/csv/data.csv\", header=TRUE)\n\n#explore the data\nstr(vaccines)\n\n'data.frame':   813367 obs. of  18 variables:\n $ YearWeekISO        : chr  \"2021-W02\" \"2023-W19\" \"2023-W19\" \"2023-W19\" ...\n $ ReportingCountry   : chr  \"AT\" \"AT\" \"AT\" \"AT\" ...\n $ Denominator        : int  424628 431785 7427239 1551690 524214 741680 1086320 1392642 435176 3005708 ...\n $ NumberDosesReceived: int  0 0 0 0 0 0 0 0 0 0 ...\n $ NumberDosesExported: int  0 0 0 0 0 0 0 0 0 0 ...\n $ FirstDose          : int  0 0 1 0 0 0 0 0 0 0 ...\n $ FirstDoseRefused   : int  NA NA NA NA NA NA NA NA NA NA ...\n $ SecondDose         : int  0 0 0 0 0 0 0 0 0 0 ...\n $ DoseAdditional1    : int  0 0 1 0 0 0 0 0 0 1 ...\n $ DoseAdditional2    : int  0 0 9 0 1 1 3 1 0 3 ...\n $ DoseAdditional3    : int  0 0 13 0 3 4 2 3 0 1 ...\n $ DoseAdditional4    : int  0 0 0 0 0 0 0 0 0 0 ...\n $ DoseAdditional5    : int  0 0 0 0 0 0 0 0 0 0 ...\n $ UnknownDose        : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Region             : chr  \"AT\" \"AT\" \"AT\" \"AT\" ...\n $ TargetGroup        : chr  \"Age10_14\" \"Age0_4\" \"ALL\" \"Age&lt;18\" ...\n $ Vaccine            : chr  \"COMBA.4-5\" \"MODBA.1\" \"MOD\" \"MOD\" ...\n $ Population         : int  8932664 8978929 8978929 8978929 8978929 8978929 8978929 8978929 8978929 8978929 ...\nNA\n--- Cropped output ---\n\nhead(vaccines)\n\n  YearWeekISO ReportingCountry Denominator NumberDosesReceived\n1    2021-W02               AT      424628                   0\n2    2023-W19               AT      431785                   0\n3    2023-W19               AT     7427239                   0\n4    2023-W19               AT     1551690                   0\n5    2023-W19               AT      524214                   0\n6    2023-W19               AT      741680                   0\n  NumberDosesExported FirstDose FirstDoseRefused SecondDose DoseAdditional1\n1                   0         0               NA          0               0\n2                   0         0               NA          0               0\n3                   0         1               NA          0               1\n4                   0         0               NA          0               0\n5                   0         0               NA          0               0\n6                   0         0               NA          0               0\n  DoseAdditional2 DoseAdditional3 DoseAdditional4 DoseAdditional5 UnknownDose\n1               0               0               0               0           0\n2               0               0               0               0           0\n3               9              13               0               0           0\n4               0               0               0               0           0\n5               1               3               0               0           0\n--- Cropped output ---\n\n\nEven with large datasets, we can use table() or summary() functions, to overview data. But, sometimes we just doesn’t.\n\ntable(vaccines$Region)\n\n\n     AT      BE      BG      CY      CZ      DE      DK      EE      EL      ES \n  17292    7330    6001    7098    6593     564    4821    7755   16413   12960 \n     FI    FI19   FI193   FI194   FI195   FI197    FI1B   FI1B1    FI1C   FI1C1 \n  16965   16965   16965   16965   16965   16965   16965   16965   16965   16965 \n  FI1C2   FI1C3   FI1C4   FI1C5    FI1D   FI1D1   FI1D2   FI1D3   FI1D5   FI1D7 \n  16965   16965   16965   16965   16965   16965   16965   16965   16965   16965 \n  FI1D8   FI1D9    FI20   FI200      FR     FR1     FRB     FRC     FRD     FRE \n  16965   16965   16965   16965    2394    1064    1064    1064    1064    1064 \n    FRF     FRG     FRH     FRI     FRJ     FRK     FRL     FRM    FRY1    FRY2 \n   1064    1064    1064    1064    1064    1064    1064    1064    1064    1064 \n   FRY3    FRY4    FRY5      HR      HU      IE      IS      IT    ITC1    ITC2 \n   1064    1064    1064    9270    6712    6367    5215    7119     570     347 \n   ITC3    ITC4    ITF1    ITF2    ITF3    ITF4    ITF5    ITF6    ITG1    ITG2 \n    486     503     436     337     492     449     393     419     468     389 \n   ITH1    ITH2    ITH3    ITH4    ITH5    ITI1    ITI2    ITI3    ITI4      LI \n    399     419     486     445     507     437     449     451     506    5070 \n     LT    LT01    LT02      LU      LV      MT      NL      NO      PL    PL21 \n   8502    1308    1308   10476    5454    5964   14355    4467    9425    9425 \n   PL22    PL41    PL42    PL43    PL51    PL52    PL61    PL62    PL63    PL71 \n   9425    9425    9425    9425    9425    9425    9425    9425    9425    9425 \n   PL72    PL81    PL82    PL84   PL92X      PT PTCSR01 PTCSR02 PTCSR03 PTCSR04 \n   9425    9425    9425    9425    9425    8136     750     756     403     953 \nPTCSR05 PTCSR06 PTCSR07      RO      SE    SE11    SE12    SE21    SE22    SE23 \n   1092     278    1048    5867    4673     580     580     580     580     580 \n   SE31    SE32    SE33      SI      SK     UNK \n    580     580     580    3131    3710    1197 \n\n\n\ntable(vaccines$Region, vaccines$NumberDosesReceived)\n\n         \n              0     1     2     3     4     5     6     7     8     9    10\n  AT      17072     0     0     0     0     0     0     0     0     0     0\n  BE        129     0     0     0     0     0     0     0     0     0     0\n  BG        423     0     0     0     0     0     0     0     0     0     0\n  CY       6957     0     0     0     0     0     0     0     0     0     0\n  CZ        649     0     0     0     0     0     0     0     0     0     0\n  DE         21     0     0     0     0     0     0     0     0     0     0\n  DK       4756     0     0     0     0     0     0     0     0     0     0\n  EE       7603     0     0     0     0     0     0     0     0     0     0\n  EL        866     0     0     0     0     0     0     0     0     0     0\n  ES        478     0     0     0     0     0     0     0     0     0     0\n  FI          0     0     0     0     0     0     0     0     0     0     0\n  FI19        0     0     0     0     0     0     0     0     0     0     0\n  FI193       0     0     0     0     0     0     0     0     0     0     0\n  FI194       0     0     0     0     0     0     0     0     0     0     0\n  FI195       0     0     0     0     0     0     0     0     0     0     0\n  FI197       0     0     0     0     0     0     0     0     0     0     0\n  FI1B        0     0     0     0     0     0     0     0     0     0     0\n  FI1B1       0     0     0     0     0     0     0     0     0     0     0\n  FI1C        0     0     0     0     0     0     0     0     0     0     0\n  FI1C1       0     0     0     0     0     0     0     0     0     0     0\n  FI1C2       0     0     0     0     0     0     0     0     0     0     0\n  FI1C3       0     0     0     0     0     0     0     0     0     0     0\n  FI1C4       0     0     0     0     0     0     0     0     0     0     0\n  FI1C5       0     0     0     0     0     0     0     0     0     0     0\n  FI1D        0     0     0     0     0     0     0     0     0     0     0\n  FI1D1       0     0     0     0     0     0     0     0     0     0     0\n  FI1D2       0     0     0     0     0     0     0     0     0     0     0\n  FI1D3       0     0     0     0     0     0     0     0     0     0     0\n--- Cropped output ---\n\n\n\nsummary(vaccines[which(vaccines$Region==\"ES\"),][,6]) #see the data from Spain\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0    6581       2 1512566 \n\ntable(vaccines)\n\nError in table(vaccines): attempt to make a table with &gt;= 2^31 elements\n\n\nWhen exploring (very) large datasets as in the example above you can find that some functions don’t work because they can’t handle all that data (Error in table(vaccines) : attempt to make a table with &gt;= 2^31 elements). Here, we are going to use alternative methods, more efficient and convenient for reading and handle these large datasets.\nOne of those tricks is the use of the package data.table, very handy for large datasets. In the following lines, we will compare reading/writting data with the function fread() and fwrite().\n\n#load the package may require installing it before\nif(!require(data.table)){\n    install.packages(\"data.table\")\n}\n\nLoading required package: data.table\n\n# if that doesn't work try: install.packages(\"data.table\", type = \"source\", repos = \"https://Rdatatable.gitlab.io/data.table\")\n\nsystem.time(vaccines &lt;- read.csv(file = 'data/vaccines_EU_22oct2022.csv', header=TRUE))\n\n   user  system elapsed \n  2.587   0.092   2.682 \n\nsystem.time(vaccines&lt;-fread('data/vaccines_EU_22oct2022.csv'))\n\n   user  system elapsed \n  1.507   0.061   0.215 \n\n#we can also prevent loading of some columns  to save time\nsystem.time(vaccines2 &lt;-fread('data/vaccines_EU_22oct2022.csv',drop=c(3,5,7,9,10)))  \n\n   user  system elapsed \n  0.935   0.028   0.121 \n\nsystem.time(vaccines3 &lt;-fread('data/vaccines_EU_22oct2022.csv',colClasses = \"character\")) #we can also select the variables by type\n\n   user  system elapsed \n  3.683   0.089   0.474"
  },
  {
    "objectID": "r6.html#frequency-tables-table-vs.-xtabs",
    "href": "r6.html#frequency-tables-table-vs.-xtabs",
    "title": "R6: Advanced data management",
    "section": "2.2 Frequency tables: table() vs. xtabs()",
    "text": "2.2 Frequency tables: table() vs. xtabs()\nTabulating frequencies is a common and efficient way to explore data. While the table() function is versatile and can be used with various data structures (vectors, dataframes, lists…), it might become less convenient for complex cross-tabulations, especially with large datasets. Alternatively, as shown below, the xtabs() function offers a more streamlined approach, particularly for multi-dimensional tables. It leverages a formula-based syntax, allowing for easy specification of variables and automatic generation of row and column labels. Additionally, the data= argument in xtabs() simplifies the process by directly referencing variable names within the dataframe.\n\n#compare table() and xtabs()\ntable(vaccines$ReportingCountry)\n\n\n    AT     BE     BG     CY     CZ     DE     DK     EE     EL     ES     FI \n 17292   7330   6001   7098   6593    564   4821   7755  16413  12960 407160 \n    FR     HR     HU     IE     IS     IT     LI     LT     LU     LV     MT \n 22743   9270   6712   6367   5215  16507   5070  11118  10476   5454   5964 \n    NL     NO     PL     PT     RO     SE     SI     SK \n 14355   4467 160225  13416   5867   9313   3131   3710 \n\nstr(table(vaccines$ReportingCountry))\n\n 'table' int [1:30(1d)] 17292 7330 6001 7098 6593 564 4821 7755 16413 12960 ...\n - attr(*, \"dimnames\")=List of 1\n  ..$ : chr [1:30] \"AT\" \"BE\" \"BG\" \"CY\" ...\n\nxtabs(formula= ~ ReportingCountry  ,data=vaccines)\n\nReportingCountry\n    AT     BE     BG     CY     CZ     DE     DK     EE     EL     ES     FI \n 17292   7330   6001   7098   6593    564   4821   7755  16413  12960 407160 \n    FR     HR     HU     IE     IS     IT     LI     LT     LU     LV     MT \n 22743   9270   6712   6367   5215  16507   5070  11118  10476   5454   5964 \n    NL     NO     PL     PT     RO     SE     SI     SK \n 14355   4467 160225  13416   5867   9313   3131   3710 \n\nstr(xtabs(formula= ~ ReportingCountry  ,data=vaccines))\n\n 'xtabs' int [1:30(1d)] 17292 7330 6001 7098 6593 564 4821 7755 16413 12960 ...\n - attr(*, \"dimnames\")=List of 1\n  ..$ ReportingCountry: chr [1:30] \"AT\" \"BE\" \"BG\" \"CY\" ...\n - attr(*, \"call\")= language xtabs(formula = ~ReportingCountry, data = vaccines)\n\n#Note: library(stats) if xtabs() does not work\n\nSo far, they seem very similar in terms of coding and obtained output. However, what about if you want to use to several variables?\n\n#with 2 or more variables?\ntable(vaccines[,c(ReportingCountry,as.factor(Vaccine))]) #not really\n\n\n     1     10     11     12     13     14     15     16     17     18     19 \n108389 117037   8332   3003   2317  92285   1973   1385    681  74429  46812 \n     2      3      4      5      6      7      8      9     AT     BE     BG \n  2342    344 124068  58714  59509   2533     83 109131  17292   7330   6001 \n    CY     CZ     DE     DK     EE     EL     ES     FI     FR     HR     HU \n  7098   6593    564   4821   7755  16413  12960 407160  22743   9270   6712 \n    IE     IS     IT     LI     LT     LU     LV     MT     NL     NO     PL \n  6367   5215  16507   5070  11118  10476   5454   5964  14355   4467 160225 \n    PT     RO     SE     SI     SK \n 13416   5867   9313   3131   3710 \nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n--- Cropped output ---\n\ntable(vaccines$ReportingCountry,vaccines$Vaccine) #yes!\n\n    \n        AZ BECNBG BHACOV   COM COMBA.1 COMBA.4-5 COMBIV COMXBB JANSS   MOD\n  AT  1572      0      0  1572    1572      1572      0      0  1572  1572\n  BE   920      0      0  1540     640       620      0      0  1160  1320\n  BG  1500      0      0  1551       0         0      0      0  1400  1550\n  CY  1130      0      0  1530     264       641      0      0  1153  1108\n  CZ   581      0      0  1758     433       645      0     32   879  1364\n  DE     0      0      0     0       0         0      0      0     0     0\n  DK   600      0      0  1487     406       512      0      0   648  1118\n  EE  1274      0      0  1351     504       477      0      0  1169  1306\n  EL  2320      0      0  2413    2320      2372      0      0  2348  2320\n  ES  2160      0      0  2160       0         0   2160      0  2160  2160\n  FI 45240      0      0 45240   45240     45240      0      0 45240 45240\n  FR   133      0      0   133       0       133      0      0   133   133\n  HR  1410      0      0  2175       0         0      0      0  2025  1950\n  HU   701   1130      0  1426     495         0      0      0  1266  1180\n  IE   704      0      0  1794     533       711      0      0   550  1069\n  IS   646      0      0  1736     492       411      0      0   877   809\n  IT  1318      0      0  4176    1464      1591      0      0  1737  3079\n  LI     0      0      0  1430     500         0      0      0  1040  1430\n  LT  2346      0      0  2465       0         0      0      0  2176  2414\n  LU  1668      0      0  1740     672       852      0     48  1560  1704\n  LV   465      0      0  1275     415       434      0      0   854  1016\n  MT  1524      0      0  1549       0         0      0      0  1396  1495\n  NL  1595      0      0  1595    1595      1595      0      0  1595  1595\n--- Cropped output ---\n\n## you can also use \"with\", but not so intuitive to me\nwith(vaccines, table(ReportingCountry, as.factor(Vaccine))) \n\n                \nReportingCountry    AZ BECNBG BHACOV   COM COMBA.1 COMBA.4-5 COMBIV COMXBB\n              AT  1572      0      0  1572    1572      1572      0      0\n              BE   920      0      0  1540     640       620      0      0\n              BG  1500      0      0  1551       0         0      0      0\n              CY  1130      0      0  1530     264       641      0      0\n              CZ   581      0      0  1758     433       645      0     32\n              DE     0      0      0     0       0         0      0      0\n              DK   600      0      0  1487     406       512      0      0\n              EE  1274      0      0  1351     504       477      0      0\n              EL  2320      0      0  2413    2320      2372      0      0\n              ES  2160      0      0  2160       0         0   2160      0\n              FI 45240      0      0 45240   45240     45240      0      0\n              FR   133      0      0   133       0       133      0      0\n              HR  1410      0      0  2175       0         0      0      0\n              HU   701   1130      0  1426     495         0      0      0\n              IE   704      0      0  1794     533       711      0      0\n              IS   646      0      0  1736     492       411      0      0\n              IT  1318      0      0  4176    1464      1591      0      0\n              LI     0      0      0  1430     500         0      0      0\n              LT  2346      0      0  2465       0         0      0      0\n              LU  1668      0      0  1740     672       852      0     48\n              LV   465      0      0  1275     415       434      0      0\n              MT  1524      0      0  1549       0         0      0      0\n              NL  1595      0      0  1595    1595      1595      0      0\n--- Cropped output ---\n\n#more strightforward alternative with xtabs\n(vaccines_split &lt;- xtabs(formula= ~ ReportingCountry  + as.factor(Vaccine), data = vaccines))\n\n                as.factor(Vaccine)\nReportingCountry    AZ BECNBG BHACOV   COM COMBA.1 COMBA.4-5 COMBIV COMXBB\n              AT  1572      0      0  1572    1572      1572      0      0\n              BE   920      0      0  1540     640       620      0      0\n              BG  1500      0      0  1551       0         0      0      0\n              CY  1130      0      0  1530     264       641      0      0\n              CZ   581      0      0  1758     433       645      0     32\n              DE     0      0      0     0       0         0      0      0\n              DK   600      0      0  1487     406       512      0      0\n              EE  1274      0      0  1351     504       477      0      0\n              EL  2320      0      0  2413    2320      2372      0      0\n              ES  2160      0      0  2160       0         0   2160      0\n              FI 45240      0      0 45240   45240     45240      0      0\n              FR   133      0      0   133       0       133      0      0\n              HR  1410      0      0  2175       0         0      0      0\n              HU   701   1130      0  1426     495         0      0      0\n              IE   704      0      0  1794     533       711      0      0\n              IS   646      0      0  1736     492       411      0      0\n              IT  1318      0      0  4176    1464      1591      0      0\n              LI     0      0      0  1430     500         0      0      0\n              LT  2346      0      0  2465       0         0      0      0\n              LU  1668      0      0  1740     672       852      0     48\n              LV   465      0      0  1275     415       434      0      0\n              MT  1524      0      0  1549       0         0      0      0\n              NL  1595      0      0  1595    1595      1595      0      0\n--- Cropped output ---\n\n\nAs mentioned above, xtabs() can be easily used with more than two variables. Moreover, you can create a cross-tabulated table using a numeric variable instead of frequencies. To do so, you just need to use the left side of the formula.\n\n#also with several variables\n(vaccines_split2 &lt;- xtabs(NumberDosesReceived ~ ReportingCountry  + as.factor(Vaccine) + as.factor(TargetGroup), vaccines))\n\n, , as.factor(TargetGroup) = 1_Age&lt;60\n\n                as.factor(Vaccine)\nReportingCountry        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5\n              AT         0         0         0         0         0         0\n              BE         0         0         0         0         0         0\n              BG         0         0         0         0         0         0\n              CY         0         0         0         0         0         0\n              CZ         0         0         0         0         0         0\n              DE         0         0         0         0         0         0\n              DK         0         0         0         0         0         0\n              EE         0         0         0         0         0         0\n              EL                   0         0                              \n              ES         0         0         0         0         0         0\n              FI         0         0         0         0         0         0\n              FR         0         0         0         0         0         0\n              HR         0         0         0         0         0         0\n              HU         0         0         0         0         0         0\n              IE         0         0         0         0         0         0\n              IS         0         0         0         0         0         0\n              IT         0         0         0         0         0         0\n              LI         0         0         0         0         0         0\n              LT         0         0         0         0         0         0\n              LU         0         0         0         0         0         0\n              LV         0         0         0         0         0         0\n              MT         0         0         0         0         0         0\n              NL         0         0         0         0         0         0\n              NO         0         0         0         0         0         0\n              PL         0         0         0         0         0         0\n              PT         0         0         0         0         0         0\n              RO                   0         0                   0         0\n              SE         0         0         0         0         0         0\n              SI         0         0         0         0         0         0\n              SK         0         0         0         0         0         0\n                as.factor(Vaccine)\nReportingCountry    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5\n              AT         0         0         0         0         0         0\n              BE         0         0         0         0         0         0\n              BG         0         0         0         0         0         0\n              CY         0         0         0         0         0         0\n              CZ         0         0         0         0         0         0\n              DE         0         0         0         0         0         0\n              DK         0         0         0         0         0         0\n              EE         0         0         0         0         0         0\n              EL         0         0                             0         0\n              ES         0         0         0         0         0         0\n              FI         0         0         0         0         0         0\n              FR         0         0         0         0         0         0\n              HR         0         0         0         0         0         0\n              HU         0         0         0         0         0         0\n--- Cropped output ---\n\n\nThat was a very long output to check! If you want to show your tabulated data in a more useful format, you can covert the cross-tabulated data into a flat table with ftable(). See the examples below and try to understand how the row.bars statement works.\n\nftable(vaccines_split, row.vars = 2)\n\n                   ReportingCountry    AT    BE    BG    CY    CZ    DE    DK    EE    EL    ES    FI    FR    HR    HU    IE    IS    IT    LI    LT    LU    LV    MT    NL    NO    PL    PT    RO    SE    SI    SK\nas.factor(Vaccine)                                                                                                                                                                                                     \nAZ                                   1572   920  1500  1130   581     0   600  1274  2320  2160 45240   133  1410   701   704   646  1318     0  2346  1668   465  1524  1595   602 32045  1548  1417  2320   376   274\nBECNBG                                  0     0     0     0     0     0     0     0     0     0     0     0     0  1130     0     0     0     0     0     0     0     0     0     0     0  1212     0     0     0     0\nBHACOV                                  0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   344     0     0     0     0\nCOM                                  1572  1540  1551  1530  1758     0  1487  1351  2413  2160 45240   133  2175  1426  1794  1736  4176  1430  2465  1740  1275  1549  1595  1248 32045  2480  1549  2320  1022  1308\nCOMBA.1                              1572   640     0   264   433     0   406   504  2320     0 45240     0     0   495   533   492  1464   500     0   672   415     0  1595   305     0   864     0     0     0     0\nCOMBA.4-5                            1572   620     0   641   645     0   512   477  2372     0 45240   133     0     0   711   411  1591     0     0   852   434     0  1595   436     0  1267     0     0     0     0\nCOMBIV                                  0     0     0     0     0     0     0     0     0  2160     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   373     0\nCOMXBB                                  0     0     0     0    32     0     0     0     0     0     0     0     0     0     0     0     0     0     0    48     0     0     0     0     0     0     0     0     3     0\nJANSS                                1572  1160  1400  1153   879     0   648  1169  2348  2160 45240   133  2025  1266   550   877  1737  1040  2176  1560   854  1396  1595   438 32045  1410  1362     0   328   610\nMOD                                  1572  1320  1550  1108  1364     0  1118  1306  2320  2160 45240   133  1950  1180  1069   809  3079  1430  2414  1704  1016  1495  1595  1002 32045  1672  1539  2320   718   809\nMODBA.1                              1572   460     0   264   350     0     0   504     0     0     0   133     0     0   363     4   850   510     0   672   318     0  1595   150     0   587     0     0     0     0\nMODBA.4-5                               0     0     0   432    69     0     0   414     0     0     0   133     0     0   225    29   732     0     0   552     3     0     0   286     0   128     0     0     0     0\nMODBIV                                  0     0     0     0     0     0     0     0     0  2160     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   157     0\nNVXD                                 1572   670     0   576   443     0     0   756  2320     0 45240   133   465     0   418    91  1415   160     0  1008   227     0  1595     0 32045   441     0  2320   151   239\nSGSK                                 1572     0     0     0    39     0     0     0     0     0     0   133     0     0     0     0   145     0     0     0     3     0     0     0     0    78     0     0     3     0\nSIN                                     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0  1385     0     0     0     0\nSPU                                     0     0     0     0     0     0     0     0     0     0     0     0     0   514     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0   167\nUNK                                  1572     0     0     0     0   564    50     0     0     0 45240 21546  1245     0     0   120     0     0  1717     0   444     0  1595     0     0     0     0    33     0   303\nVLA                                  1572     0     0     0     0     0     0     0     0     0 45240     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0\nNA\nNA\nNA\nNA\n--- Cropped output ---\n\nftable(vaccines_split2, row.vars = 2)\n\n                   ReportingCountryn                   as.factor(TargetGroup)  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF  1_Age&lt;60  1_Age60+    Age&lt;18    Age0_4  Age10_14  Age15_17  Age18_24  Age25_49    Age5_9  Age50_59  Age60_69  Age70_79    Age80+    AgeUNK       ALL       HCW      LTCF\nas.factor(VaccinenAZ                                                0         0         0         0         0         0         0         0         0         0         0         0         0         0   5519600         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0    432300         0         0         0         0        NA         0         0        NA        NA        NA         0        NA        NA        NA        NA         0   1628400        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    202920         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    818300         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA   4035800        NA         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0  10355500         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA   6513800        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0   1442700         0         0         0         0         0     97800     97800     97800     97800     97800     97800     97800     97800     97800     97800     97800    100880     97800     97800         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   1121594         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    186600         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   1273400         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0   4503400         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0    578400        NA         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA        NA         0         0         0         0        NA        NA         0        NA        NA        NA        NA         0   2999600        NA        NA         0         0         0         0         0        NA        NA        NA         0        NA        NA        NA        NA         0        NA         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0   1123800        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   1612810         0         0\nnnCOM                                               0         0         0         0         0         0         0         0         0         0         0         0         0         0  24394773         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA   7265580        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0   2033293         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0  21204560        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   7614360         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   2304060         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA  25348740        NA        NA         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA 100959011        NA        NA         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0 136804000         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA  13163840        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0  11135050         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA    794870        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0         0         0         0       763         0         0         0         0         0         0         0     22650         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   6789378         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   1346640         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   3001755         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0  34003726         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0  11373105        NA         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA        NA        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0  18276235        NA        NA         0         0         0         0         0        NA        NA        NA         0        NA        NA        NA        NA         0        NA         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0   3987390        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   7723560         0         0\nCOMBA.1                                           0         0         0         0         0         0         0         0         0         0         0         0         0         0   1512000         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0        NA        NA        NA        NA        NA        NA        NA        NA        NA         0   1321920        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    279360         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA    800640        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA    216000         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA    126720        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0         0         0         0      1020         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     86400         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    460800         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   2871360         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0    889920        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0\nCOMBA.4-5                                         0         0         0         0         0         0         0         0         0         0         0         0         0         0   5530560         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     37440         0         0         0         0        NA         0        NA        NA        NA        NA        NA        NA        NA        NA        NA         0   5135040        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    350400         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA   1428480        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0  23481600         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA    100800        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    168000         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   1088640         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   6325440         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0   2453760        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0\nnnJANSS                                             0         0         0         0         0         0         0         0         0         0         0         0         0         0   1292400         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0    190100         0         0         0         0        NA         0        NA        NA        NA        NA         0        NA        NA        NA        NA         0   1396200        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     42300         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    120800         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA   2401800        NA        NA         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   3732300         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA   4309200        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0    281500         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA     57500        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0       650         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    653097         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     80250         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   1259800         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0   2464800         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0    403900        NA         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA        NA         0         0         0         0        NA        NA         0        NA        NA        NA        NA         0   2820300        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0    230400        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    475200         0         0\nMOD                                               0         0         0         0         0         0         0         0         0         0         0         0         0         0   5963500         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0    155200         0         0         0         0        NA         0        NA        NA        NA        NA         0        NA        NA        NA        NA         0   3685100        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   1350690         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    270400         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA   1770000        NA         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0  54929280         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA   1736400        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0   3290500         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA    261720        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0         0         0         0       680         0         0         0         0         0         0         0     44500         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    732830         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    302610         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   1171300         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0  11327200         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0   3982600        NA         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0        NA        NA        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0   2805700        NA        NA         0         0         0         0         0        NA        NA        NA         0        NA        NA        NA        NA         0        NA         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0    714400        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    871200         0         0\nMODBA.1                                           0         0         0         0         0         0         0         0         0         0         0         0         0         0   2474610         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     24250         0         0         0         0        NA         0        NA        NA        NA        NA         0        NA        NA        NA        NA         0    199700        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    192750         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   8321200         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     65350         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0         0         0         0      2505         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    303240         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    543980         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   6175700         0         0         0         0         0         0         0         0        NA        NA         0        NA        NA        NA        NA         0   1443150        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA         0        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0\nMODBA.4-5                                         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0      9500         0         0         0         0         0         0         0         0        NA        NA         0        NA        NA        NA        NA         0     46750        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     98400         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   3315650         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     98350         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    243300         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    123600         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA         0        NA        NA        NA        NA         0   2271400        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA         0        NA        NA        NA         0         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0\nnNVXD                                              0         0         0         0         0         0         0         0         0         0         0         0         0         0   3192000         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     90000         0         0         0         0        NA         0        NA        NA        NA        NA         0        NA        NA        NA        NA         0    578000        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     60800         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA    396000        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0   2965000         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    198000         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA     42000        NA        NA         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    105000         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    189600         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    707000         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA         0        NA        NA        NA        NA         0        NA         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0     94000         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     93000         0         0\nSGSK                                              0         0         0         0         0         0         0         0         0         0         0         0         0         0   2243300         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     64800         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0  16576400         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0         0        NA        NA         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0    108000         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0         0         0    115200         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0\nnnnVLA                                               0         0         0         0         0         0         0         0         0         0         0         0         0         0    151200         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0\nNA\nNA\nNA\n--- Cropped output ---\n\nftable(vaccines_split2, row.vars = 3)\n\n                       ReportingCountryn                       as.factor(Vaccine)        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA        AZ    BECNBG    BHACOV       COM   COMBA.1 COMBA.4-5    COMBIV    COMXBB     JANSS       MOD   MODBA.1 MODBA.4-5    MODBIV      NVXD      SGSK       SIN       SPU       UNK       VLA\nas.factor(TargetGroupn1_Age&ltn1_Age60+                                          0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA         0         0         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0\nAge&ltnAgenAgenAgenAgenAgenAgenAge50_59                                          0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA        NA         0         0        NA         0         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0        NA        NA        NA        NA        NA         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA         0         0         0        NA         0         0         0         0         0        NA         0         0        NA         0         0        NA         0        NA        NA         0         0        NA         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA         0         0         0        NA         0         0         0        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0        NA         0         0         0        NA         0        NA        NA         0        NA        NA         0         0         0        NA        NA         0         0         0         0         0         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     97800         0         0        NA        NA        NA         0         0        NA        NA         0         0         0        NA         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA        NA        NA         0        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA        NA        NA         0         0         0         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0        NA         0         0         0         0         0        NA        NA         0        NA        NA        NA         0         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0         0         0         0         0         0         0        NA         0         0        NA         0         0         0         0         0        NA         0         0         0        NA         0         0         0         0         0        NA         0         0        NA         0         0        NA         0        NA        NA         0         0        NA        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0\nAgenAgenAgenAgenALL                                         5519600         0         0  24394773   1512000   5530560         0         0   1292400   5963500   2474610         0         0   3192000   2243300         0         0         0    151200        NA         0         0        NA        NA        NA         0         0        NA        NA        NA         0         0        NA         0         0         0         0         0        NA         0         0   7265580         0         0         0         0        NA        NA         0         0         0         0         0         0         0         0         0    432300         0         0   2033293         0     37440         0         0    190100    155200     24250      9500         0     90000         0         0         0         0         0   1628400         0         0  21204560   1321920   5135040         0     97920   1396200   3685100    199700     46750         0    578000     64800         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0 241419933         0    202920         0         0   7614360         0         0         0         0     42300   1350690         0         0         0         0         0         0         0         0         0    818300         0         0   2304060    279360    350400         0         0    120800    270400    192750     98400         0     60800         0         0         0         0         0   4035800         0         0  25348740    800640   1428480         0         0   2401800   1770000         0         0         0    396000         0         0         0         0         0        NA         0         0 100959011         0         0        NA         0        NA        NA         0         0        NA         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA         0         0         0        NA         0         0         0        NA        NA  10355500         0         0 136804000         0  23481600         0         0   3732300  54929280   8321200   3315650         0   2965000  16576400         0         0        NA         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0        NA         0         0         0        NA         0   6513800   5187056         0  13163840    216000         0         0         0   4309200   1736400         0         0         0         0         0         0   2000000         0         0   1442700         0         0  11135050         0         0         0         0    281500   3290500         0         0         0    198000         0         0         0         0         0    100880         0         0    794870    126720    100800         0         0     57500    261720     65350     98350         0     42000         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA        NA        NA         0        NA        NA         0         0         0         0         0         0         0     22650         0         0         0         0       650     44500         0         0         0         0         0         0         0         0         0   1121594         0         0   6789378         0         0         0         0    653097    732830         0         0         0         0         0         0         0     10162         0    186600         0         0   1346640     86400    168000         0     18240     80250    302610    303240    243300         0    105000         0         0         0         0         0   1273400         0         0   3001755    460800   1088640         0         0   1259800   1171300    543980    123600         0    189600    108000         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0         0         0         0         0         0         0   4503400         0         0  34003726   2871360   6325440         0         0   2464800  11327200   6175700         0         0    707000         0         0         0         0         0    578400         0         0  11373105    889920   2453760         0         0    403900   3982600   1443150   2271400         0         0         0         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0        NA         0         0         0         0         0        NA        NA        NA        NA        NA        NA         0         0        NA        NA        NA        NA         0        NA        NA        NA         0         0         0   2999600         0         0  18276235         0         0         0         0   2820300   2805700         0         0         0         0         0         0         0         0         0        NA         0         0        NA         0         0         0         0         0        NA         0         0         0        NA         0         0         0         0         0   1123800         0         0   3987390         0         0    800640     58560    230400    714400         0         0    705400     94000    115200         0         0         0         0   1612810         0         0   7723560         0         0         0         0    475200    871200         0         0         0     93000         0         0    200000         0         0\nHCW                                               0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA        NA         0         0        NA         0         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0        NA        NA        NA        NA        NA         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA         0         0         0        NA         0         0         0         0         0        NA         0         0        NA         0         0        NA         0        NA        NA         0         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0        NA         0         0         0        NA         0        NA        NA         0        NA         0         0         0         0        NA        NA         0         0         0         0         0         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0     97800         0         0        NA        NA        NA         0         0        NA        NA         0         0         0        NA         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA        NA        NA         0        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA        NA        NA         0         0        NA        NA        NA        NA         0         0         0         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0         0        NA         0         0         0         0        NA        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0        NA         0        NA         0         0        NA         0         0        NA         0        NA        NA         0         0        NA         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0\nnNA\nNA\nNA\nNA\nNA\n--- Cropped output ---\n\n\n\nQuick exercise (III)\nSometimes, it is better to use a shorter table as an example… Let’s go back to the coli_genomes data that you already know.\nCould you obtain a table like the following, with the number of Contigs by isolation source (Source) and phylogenetic group (Phylogroup)?\n\n with(coli_genomes, table(Source, Phylogroup)) xtabs(Contigs ~ Source + Phylogroup, coli_genomes) xtabs( ~ Contigs + Source + Phylogroup, coli_genomes)\n\n\n\n         Phylogroup\nSource       A   B1    C    D\n  Avian    134  102  108    0\n  Human    790  208  662 1010\n  Porcine  958    0    0    0\n\n\nNow, let’s do it a little bit more complicated. If we split the previous table by the STs (aka. multilocus sequence typing), you obtain a very large table:\n\n\n, , Sequence.Type = ST10\n\n         Phylogroup\nSource      A  B1   C   D\n  Avian     0   0   0   0\n  Human   120   0   0   0\n  Porcine 277   0   0   0\n\n, , Sequence.Type = ST1049\n\n         Phylogroup\nSource      A  B1   C   D\n  Avian     0   0   0   0\n  Human     0  94   0   0\n  Porcine   0   0   0   0\n\n, , Sequence.Type = ST10888\n\n         Phylogroup\nSource      A  B1   C   D\n  Avian     0   0   0   0\n  Human     0   0   0   0\n  Porcine 203   0   0   0\n\n, , Sequence.Type = ST10890\n\n         Phylogroup\nSource      A  B1   C   D\n  Avian     0   0   0   0\n  Human     0   0 171   0\n  Porcine   0   0   0   0\n\n, , Sequence.Type = ST137\n\n         Phylogroup\nSource      A  B1   C   D\n  Avian     0   0   0   0\n  Human     0   0   0 205\n  Porcine   0   0   0   0\n\n, , Sequence.Type = ST156\n\n         Phylogroup\nSource      A  B1   C   D\n  Avian     0   0   0   0\n  Human     0 114   0   0\n  Porcine   0   0   0   0\n\n, , Sequence.Type = ST3011\n\n--- Cropped output ---\n\n\nThis is quite a long cross-table that we have cropped on the output, maybe you could find more convenient transforming it to a flat contingency table with ftable().\nHow would you generate a flat table using the previous cross-tabulated table?\n\n ftable(coli_xgenomes) ftable(coli_xgenomes, col.vars=1 ftable(coli_xgenomes, row.vars=3 ftable(coli_xgenomes, col.vars=c(1,2)\n\nIf you test the different options, you will notice that the format of the table can be defined by the order of the variables and also using the arguments row.vars and col.vars to define which variables will be summarized as column or row.\nAgain, rather than concepts from R or RStudio, cross-tabulation and flat contingency tables are general concepts in data analysis."
  },
  {
    "objectID": "r6.html#by-aggregate",
    "href": "r6.html#by-aggregate",
    "title": "R6: Advanced data management",
    "section": "3.1 By() & aggregate()",
    "text": "3.1 By() & aggregate()\nWhile frequency tables can be very quickly generated with table() and xtable(), sometimes you may want other calculations than frequency, like basic statistics per group or other, even custom, calculations.\nYou have already tried the function by() as a very useful trick to make group-calculations. However, this function has some limitations when we have large datasets and when we try to use multiple factors that can be solved with aggregate(). In both cases, the function can be any function that suits your data, either from R packages or a custom function.\nIn the following example, we are using a smaller dataset named vacines2 that we can obtain by sampling (randomly extraction of a portion of data) with the R function sample().\n\nvaccines2 &lt;- vaccines[sample(x = 1:nrow(vaccines),size = 50000, replace=FALSE),]\n\n#using by()\nby(vaccines2$NumberDosesReceived, INDICES = vaccines2$Region, FUN=mean, na.rm=TRUE)\n\nvaccines2$Region: AT\n[1] 1820.799\n------------------------------------------------------------ \nvaccines2$Region: BE\n[1] 129075\n------------------------------------------------------------ \nvaccines2$Region: BG\n[1] 7526.923\n------------------------------------------------------------ \nvaccines2$Region: CY\n[1] 961.1449\n------------------------------------------------------------ \nvaccines2$Region: CZ\n[1] 42646.17\n------------------------------------------------------------ \nvaccines2$Region: DE\n[1] 1508313\n------------------------------------------------------------ \nvaccines2$Region: DK\n[1] 846.0469\n------------------------------------------------------------ \nvaccines2$Region: EE\n[1] 568.2353\n------------------------------------------------------------ \nvaccines2$Region: EL\n--- Cropped output ---\n\n\nIn the example above, we could calculate the mean by groups. Can we do it with more than one grouping factor? Let’s try some alternatives and see the output\n\nby(vaccines2$NumberDosesReceived, INDICES = vaccines2$Region + vaccines2$Vaccine, FUN=mean, na.rm=TRUE)\n\nError in vaccines2$Region + vaccines2$Vaccine: non-numeric argument to binary operator\n\nby(vaccines2$NumberDosesReceived, INDICES = c(vaccines2$Region,vaccines2$Vaccine), FUN=mean, na.rm=TRUE)\n\nError in tapply(seq_len(50000L), list(`c(vaccines2$Region, vaccines2$Vaccine)` = c(\"FI1D3\", : arguments must have same length\n\nby(vaccines2$NumberDosesReceived, INDICES = list(vaccines2$Region,vaccines2$Vaccine), FUN=mean, na.rm=TRUE)\n\n: AT\n: AZ\n[1] 0\n------------------------------------------------------------ \n: BE\n: AZ\n[1] 7200\n------------------------------------------------------------ \n: BG\n: AZ\n[1] 15120\n------------------------------------------------------------ \n: CY\n: AZ\n[1] 1293.151\n------------------------------------------------------------ \n: CZ\n: AZ\n[1] 1000\n------------------------------------------------------------ \n: DE\n: AZ\n[1] NA\n------------------------------------------------------------ \n: DK\n--- Cropped output ---\n\n\nWhen you find difficult using by(), aggregate() is usually the best quick alternative\n\n#aggregate is more convenient sometimes\naggregate(vaccines2$NumberDosesReceived ~ vaccines2$Region, FUN=mean)\n\n   vaccines2$Region vaccines2$NumberDosesReceived\n1                AT                  1.820799e+03\n2                BE                  1.290750e+05\n3                BG                  7.526923e+03\n4                CY                  9.611449e+02\n5                CZ                  4.264617e+04\n6                DE                  1.508313e+06\n7                DK                  8.460469e+02\n8                EE                  5.682353e+02\n9                EL                  2.371864e+04\n10               ES                  3.382172e+05\n11               FI                  1.116314e+05\n12               FR                  1.957214e+05\n13               HR                  8.688250e+04\n14               HU                  6.722391e+04\n--- Cropped output ---\n\naggregate(NumberDosesReceived ~ Region+Vaccine, data=vaccines2, FUN=mean) \n\n    Region   Vaccine NumberDosesReceived\n1       AT        AZ        0.000000e+00\n2       BE        AZ        7.200000e+03\n3       BG        AZ        1.512000e+04\n4       CY        AZ        1.293151e+03\n5       CZ        AZ        1.000000e+03\n6       DK        AZ        1.824000e+03\n7       EE        AZ        0.000000e+00\n8       EL        AZ        3.296000e+04\n9       ES        AZ        4.043429e+05\n10      FR        AZ        0.000000e+00\n11      HR        AZ        8.820000e+04\n12      HU        AZ        1.478125e+05\n13      IE        AZ        3.272727e+03\n14      IS        AZ        2.492857e+03\n--- Cropped output ---\n\naggregate(FirstDoseRefused ~ TargetGroup, data=vaccines2, FUN=median) \n\n   TargetGroup FirstDoseRefused\n1     1_Age&lt;60                0\n2     1_Age60+                0\n3       Age&lt;18                0\n4     Age18_24                0\n5     Age25_49                0\n6     Age50_59                0\n7     Age60_69                0\n8     Age70_79                0\n9       Age80+                0\n10         ALL                0\n11         HCW                0\n12        LTCF                0\nNA\nNA\n--- Cropped output ---\n\n#note that by default NAs are disregarded\naggregate(FirstDoseRefused ~ TargetGroup, data=vaccines2, na.action = NULL, FUN=median) \n\n   TargetGroup FirstDoseRefused\n1     1_Age&lt;60               NA\n2     1_Age60+               NA\n3       Age&lt;18               NA\n4       Age0_4               NA\n5     Age10_14               NA\n6     Age15_17               NA\n7     Age18_24               NA\n8     Age25_49               NA\n9       Age5_9               NA\n10    Age50_59               NA\n11    Age60_69               NA\n12    Age70_79               NA\n13      Age80+               NA\n14      AgeUNK               NA\n--- Cropped output ---\n\n#we can make it for several numeric variables at the same time\naggregate(cbind(NumberDosesReceived,FirstDose,SecondDose) ~ as.factor(TargetGroup), data=vaccines2, FUN=mean)\n\n   as.factor(TargetGroup) NumberDosesReceived    FirstDose   SecondDose\n1                  Age&lt;18             0.00000   360.761905   207.704082\n2                  Age0_4            37.50000     4.709091     4.540909\n3                Age10_14            96.20419   226.910995    96.395288\n4                Age15_17           142.01474   209.975430   158.481572\n5                Age18_24           189.38614   216.421782    96.994059\n6                Age25_49            40.58594   771.611328   702.041016\n7                  Age5_9           269.50000    21.011765    13.173529\n8                Age50_59           148.78193   836.726916   518.021611\n9                Age60_69           117.41410   513.113924   252.345389\n10               Age70_79            66.21771   296.022140   477.173432\n11                 Age80+           141.37525   151.667976   189.634578\n12                 AgeUNK           577.50000     1.515625     1.351562\n13                    ALL         79578.49621 23380.368939 15199.045455\n14                    HCW           451.43590    32.707692   120.261538\n--- Cropped output ---\n\n\nWe can also add a custom function, using the short, usually with the inline notation:\n\n#we can also use custom functions here\naggregate(cbind(FirstDose,SecondDose) ~ as.factor(TargetGroup), data=vaccines2, FUN=function(x) mean(x)*100/mean(vaccines2$NumberDosesReceived, na.rm=TRUE))\n\n   as.factor(TargetGroup)    FirstDose   SecondDose\n1                1_Age&lt;60 1.413636e+02 1.114906e+02\n2                1_Age60+ 2.662959e+01 7.600026e+01\n3                  Age&lt;18 4.873412e+00 3.680116e+00\n4                  Age0_4 3.089616e-03 3.031055e-03\n5                Age10_14 1.623797e+00 6.841251e-01\n6                Age15_17 5.816713e-01 4.111577e-01\n7                Age18_24 2.119778e+00 1.974510e+00\n8                Age25_49 1.093650e+01 9.386779e+00\n9                  Age5_9 1.315910e-01 1.318426e-01\n10               Age50_59 4.691836e+00 4.204253e+00\n11               Age60_69 3.992111e+00 3.348901e+00\n12               Age70_79 4.032144e+00 3.293795e+00\n13                 Age80+ 2.271214e+00 1.823335e+00\n14                 AgeUNK 8.045944e-02 1.872705e-02\n15                    ALL 4.650848e+01 3.291632e+01\n16                    HCW 1.761317e+00 1.155694e+00\n17                   LTCF 1.955176e+00 1.179603e+00\n\n\n\nQuick exercise (IV)\nWe are using again the coli_genomes dataframe.\nCan you obtain the following table displaying the mean (%) of virulece factors (VF) and plasmids per genome nucleotide (Assembly_length) grouped by Source\n\n aggregate(cbind(VF,Plasmids) ~ Source, data=coli_genomes, FUN=mean) aggregate(cbind(VF,Plasmids) ~ Source, data=coli_genomes, FUN=function(x) mean(x) * 100 / mean(Assembly_length)) aggregate(cbind(VF,Plasmids) ~ Source, data=coli_genomes, FUN=function(x) mean(x) * 100 / mean(coli_genomes$Assembly_length))\n\n\n\n   Source           VF     Plasmids\n1   Avian 1.455256e-04 5.291842e-05\n2   Human 2.235803e-04 5.291842e-05\n3 Porcine 8.929983e-05 1.289886e-04"
  },
  {
    "objectID": "r6.html#apply-family-of-functions",
    "href": "r6.html#apply-family-of-functions",
    "title": "R6: Advanced data management",
    "section": "3.2 Apply family of functions",
    "text": "3.2 Apply family of functions\n\n\n\n\nApply family of functions\n\n\n\nThe functions of the Apply family are designed to apply a function to each element of a data structure. It includes various functions, designed for matrices, dataframes or lists. What is special about these functions is that their arguments are not only data but also functions. Using an apply function can sometimes seem complicated, but once you get used to it, it’s actually very handy and faster than other alternatives, such as loops. In this section, we look at the apply() function and its variants, including lapply(), sapply(), tapply(), rapply() & mapply(). In general, Apply is a very efficient tool to perform repetitive calculations.\nRather than describing in detail all the functions, in the following examples we test some of the possibilities of some applies. Try yourself and check the code comments.\n\n#apply()\napply(vaccines[,4:12], MARGIN = 1, FUN = mean, na.rm=TRUE)\n\n    [1] 0.000000e+00 0.000000e+00 3.000000e+00 0.000000e+00 5.000000e-01\n    [6] 6.250000e-01 6.250000e-01 5.000000e-01 0.000000e+00 6.250000e-01\n   [11] 1.250000e-01 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\n   [16] 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\n   [21] 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\n   [26] 0.000000e+00 8.887500e+01 3.750000e+00 1.325000e+01 1.862500e+01\n--- Cropped output ---\n\napply(vaccines[,4:12], 2, mean, na.rm=TRUE) # 1 for row-wise operation, 2 for column-wise\n\nNumberDosesReceived NumberDosesExported           FirstDose    FirstDoseRefused \n       1.400034e+04        8.621084e+02        1.147629e+03        4.015204e-01 \n         SecondDose     DoseAdditional1     DoseAdditional2     DoseAdditional3 \n       1.044477e+03        8.282688e+02        2.215100e+02        3.164597e+01 \n    DoseAdditional4 \n       4.815256e-01 \n--- Cropped output ---\n\n\n\napply(vaccines, 2, is.numeric)\n\n        YearWeekISO    ReportingCountry         Denominator NumberDosesReceived \n              FALSE               FALSE               FALSE               FALSE \nNumberDosesExported           FirstDose    FirstDoseRefused          SecondDose \n              FALSE               FALSE               FALSE               FALSE \n    DoseAdditional1     DoseAdditional2     DoseAdditional3     DoseAdditional4 \n              FALSE               FALSE               FALSE               FALSE \n    DoseAdditional5         UnknownDose              Region         TargetGroup \n              FALSE               FALSE               FALSE               FALSE \n            Vaccine          Population \n              FALSE               FALSE \n\napply(vaccines[,3:6], 2, is.numeric)\n\n        Denominator NumberDosesReceived NumberDosesExported           FirstDose \n               TRUE                TRUE                TRUE                TRUE \n\n\nNote that you can use any function, although apply()is best suited for numeric calculations as it coerces your data to an array (via as.matrix()). Thus, when a dataframe cannot be transformed in a matrix your function may return fail. In the example above is.numeric() returns false for all columns within the apply when the dataframe contains character data, but if we use a subset that only contains numeric data the result makes sense. As you can see below, sapply() and lapply() are best suited for this kind of functions.\n\n#lapply() and sapply() are very useful\nlapply(by(vaccines$Population,vaccines$ReportingCountry,mean), log10) \n\n$AT\n[1] 6.952307\n\n$BE\n[1] 7.064378\n\n$BG\n[1] 6.836669\n\n$CY\n[1] 5.955408\n\n$CZ\n[1] 7.021618\n\n$DE\n[1] 7.920154\n\n$DK\n[1] 6.767897\n\n$EE\n[1] 6.124304\n\n$EL\n--- Cropped output ---\n\n\n\nsapply(by(vaccines$Population,vaccines$ReportingCountry,mean), log10) \n\n      AT       BE       BG       CY       CZ       DE       DK       EE \n6.952307 7.064378 6.836669 5.955408 7.021618 7.920154 6.767897 6.124304 \n      EL       ES       FI       FR       HR       HU       IE       IS \n7.022918 7.675960 6.743725 7.831098 6.594992 6.987135 6.702566 5.571271 \n      IT       LI       LT       LU       LV       MT       NL       NO \n7.771600 4.593620 6.447600 5.808232 6.274627 5.715350 7.244198 6.733418 \n      PL       PT       RO       SE       SI       SK \n7.576630 7.014051 7.280790 7.018045 6.323863 6.736098 \n\nclass(lapply(by(vaccines$Population,vaccines$ReportingCountry,mean), log10) ) \n\n[1] \"list\"\n\n#lapply take a list (or object that can be coerced as one) and gives a list\nclass(sapply(by(vaccines$Population,vaccines$ReportingCountry,mean), log10) ) \n\n[1] \"numeric\"\n\n#sapply is actually a 'wrapper' of lapply that returns a vector or matrix instead of a list\n\n\nsapply(list(vaccines2$Population, vaccines2$FirstDose,vaccines2$SecondDose, vaccines2$NumberDosesReceived), median) # we can do it with several variables\n\n[1] 5548241       0       0      NA\n\nsapply(vaccines2,class) #again, you can use any function, not only numeric calculations\n\n        YearWeekISO    ReportingCountry         Denominator NumberDosesReceived \n        \"character\"         \"character\"           \"integer\"           \"integer\" \nNumberDosesExported           FirstDose    FirstDoseRefused          SecondDose \n          \"integer\"           \"integer\"           \"integer\"           \"integer\" \n    DoseAdditional1     DoseAdditional2     DoseAdditional3     DoseAdditional4 \n          \"integer\"           \"integer\"           \"integer\"           \"integer\" \n    DoseAdditional5         UnknownDose              Region         TargetGroup \n          \"integer\"           \"integer\"         \"character\"         \"character\" \n            Vaccine          Population \n        \"character\"           \"integer\" \n\nsapply(vaccines2, is.numeric) \n\n        YearWeekISO    ReportingCountry         Denominator NumberDosesReceived \n              FALSE               FALSE                TRUE                TRUE \nNumberDosesExported           FirstDose    FirstDoseRefused          SecondDose \n               TRUE                TRUE                TRUE                TRUE \n    DoseAdditional1     DoseAdditional2     DoseAdditional3     DoseAdditional4 \n               TRUE                TRUE                TRUE                TRUE \n    DoseAdditional5         UnknownDose              Region         TargetGroup \n               TRUE                TRUE               FALSE               FALSE \n            Vaccine          Population \n              FALSE                TRUE \n\n\n\n#other apply functions are more case-specific:\n\n#mapply() is the matrix (or multivariable) version\nmapply(sub,vaccines2[,4],vaccines2[,6],vaccines2[,7]) \n\nWarning in (function (pattern, replacement, x, ignore.case = FALSE, perl =\nFALSE, : argument 'pattern' has length &gt; 1 and only the first element will be\nused\n\n\nWarning in (function (pattern, replacement, x, ignore.case = FALSE, perl =\nFALSE, : argument 'replacement' has length &gt; 1 and only the first element will\nbe used\n\n\n         NumberDosesReceived\n    [1,] NA                 \n    [2,] NA                 \n    [3,] NA                 \n    [4,] NA                 \n    [5,] NA                 \n    [6,] NA                 \n    [7,] NA                 \n    [8,] NA                 \n    [9,] NA                 \n--- Cropped output ---\n\n\n\nmapply(rep, letters[1:4], 4:1)\n\n$a\n[1] \"a\" \"a\" \"a\" \"a\"\n\n$b\n[1] \"b\" \"b\" \"b\"\n\n$c\n[1] \"c\" \"c\"\n\n$d\n[1] \"d\"\n\n#tapply() breaks a vector into pieces, can be used instead of aggregate\ntapply(vaccines$NumberDosesReceived, vaccines$ReportingCountry, median,na.rm=TRUE) \n\n    AT     BE     BG     CY     CZ     DE     DK     EE     EL     ES     FI \n     0      0      0      0      0 842400      0      0      0      0  91875 \n    FR     HR     HU     IE     IS     IT     LI     LT     LU     LV     MT \n     0  34800      0      0      0      0      0      0      0      0     NA \n    NL     NO     PL     PT     RO     SE     SI     SK \n     0      0      0      0      0      0      0      0 \n\ntapply(coli_genomes$VF, coli_genomes$Source, mean, na.rm=TRUE) \n\n    Avian     Human   Porcine \n 7.333333 11.266667  4.500000 \n\n\n\n#vapply() is similar to sapply(), but has a pre-specified type of return value\nvapply(vaccines[,8:11],mean,numeric(1))\n\n     SecondDose DoseAdditional1 DoseAdditional2 DoseAdditional3 \n     1044.47747       828.26878       221.51000        31.64597 \n\n\n\nvapply(vaccines[,8:11],function(x) x^2,numeric(nrow(vaccines)))\n\n            SecondDose DoseAdditional1 DoseAdditional2 DoseAdditional3\n     [1,] 0.000000e+00    0.000000e+00    0.000000e+00               0\n     [2,] 0.000000e+00    0.000000e+00    0.000000e+00               0\n     [3,] 0.000000e+00    1.000000e+00    8.100000e+01             169\n     [4,] 0.000000e+00    0.000000e+00    0.000000e+00               0\n     [5,] 0.000000e+00    0.000000e+00    1.000000e+00               9\n     [6,] 0.000000e+00    0.000000e+00    1.000000e+00              16\n     [7,] 0.000000e+00    0.000000e+00    9.000000e+00               4\n     [8,] 0.000000e+00    0.000000e+00    1.000000e+00               9\n     [9,] 0.000000e+00    0.000000e+00    0.000000e+00               0\n--- Cropped output ---\n\n\n\n#rapply can be a handy trick for recursive calculations\nrapply(vaccines, mean, class=\"integer\") \n\n        Denominator NumberDosesReceived NumberDosesExported           FirstDose \n                 NA                  NA                  NA        1.147629e+03 \n   FirstDoseRefused          SecondDose     DoseAdditional1     DoseAdditional2 \n                 NA        1.044477e+03        8.282688e+02        2.215100e+02 \n    DoseAdditional3     DoseAdditional4     DoseAdditional5         UnknownDose \n       3.164597e+01        4.815256e-01        4.917829e-06        9.610626e+00 \n         Population \n       1.584276e+07 \n\nrapply(vaccines, table, class=\"factor\")\n\nNULL\n\n\n\nvaccines$ReportingCountry&lt;-as.factor(vaccines$ReportingCountry)\nvaccines$Vaccine&lt;-as.factor(vaccines$Vaccine)\nvaccines$TargetGroup&lt;-as.factor(vaccines$TargetGroup)\nvaccines$Region&lt;-as.factor(vaccines$Region)\nrapply(vaccines, table, class=\"factor\") #factors need to be defined and now it gives the counts for each group of each factor\n\n ReportingCountry.AT  ReportingCountry.BE  ReportingCountry.BG \n               17292                 7330                 6001 \n ReportingCountry.CY  ReportingCountry.CZ  ReportingCountry.DE \n                7098                 6593                  564 \n ReportingCountry.DK  ReportingCountry.EE  ReportingCountry.EL \n                4821                 7755                16413 \n ReportingCountry.ES  ReportingCountry.FI  ReportingCountry.FR \n               12960               407160                22743 \n ReportingCountry.HR  ReportingCountry.HU  ReportingCountry.IE \n                9270                 6712                 6367 \n--- Cropped output ---\n\nrapply(vaccines, median, how=\"list\", class=\"integer\", na.rm=TRUE) #returns a list\n\n$YearWeekISO\nNULL\n\n$ReportingCountry\nNULL\n\n$Denominator\n[1] 272851\n\n$NumberDosesReceived\n--- Cropped output ---\n\n\n\nrapply(vaccines, median,  how=\"unlist\",class=\"integer\", na.rm=TRUE) #gives a vector\n\n        Denominator NumberDosesReceived NumberDosesExported           FirstDose \n             272851                   0                   0                   0 \n   FirstDoseRefused          SecondDose     DoseAdditional1     DoseAdditional2 \n                  0                   0                   0                   0 \n    DoseAdditional3     DoseAdditional4     DoseAdditional5         UnknownDose \n                  0                   0                   0                   0 \n         Population \n            5548241 \n\n#what do you mean by RECURSIVELY?\nx &lt;- list(\"a\",list(24,443),434,list(54,list(6443,7234))) #this is a complex list with sublists\n\nstr(x)\n\nList of 4\n $ : chr \"a\"\n $ :List of 2\n  ..$ : num 24\n  ..$ : num 443\n $ : num 434\n $ :List of 2\n  ..$ : num 54\n  ..$ :List of 2\n  .. ..$ : num 6443\n  .. ..$ : num 7234\n\nrapply(x,log2,class=c(\"numeric\"))\n\n[1]  4.584963  8.791163  8.761551  5.754888 12.653517 12.820578\n\n(r &lt;- rapply(x,log2,class=c(\"numeric\"), how=\"unlist\"))\n\n[1]  4.584963  8.791163  8.761551  5.754888 12.653517 12.820578\n\nstr(r)\n\n num [1:6] 4.58 8.79 8.76 5.75 12.65 ...\n\n\nNote that tapply() and by() are very similar. Indeed, by() is a wrapper of tapply(). On the other hand, vapply() is similar to sapply, but has a pre-specified type of return value, so it can be safer (or faster) to use sometimes. Finally, rapply() is not very often used, but it can be the best option for complex datasets, like those including nested lists or complex lists with several dataframes and/or vectors.\nThe applications of apply functions are very wide, particularly the apply() and lapply(). You can use them to parse data with many different input and output structures and almost any kind of R functions, including plots (see Lesson R8).\n\nQuick exercise (V)\nOf course, based on the coli_genomes dataframe.\nHow would you obtain log10 of the mean of all the columns?\n\n apply(coli_genomes,2,log10(mean), na.rm=TRUE) apply(coli_genomes,1,log10(mean), na.rm=TRUE) lapply(coli_genomes,log10(mean), na.rm=TRUE) sapply(coli_genomes,log10(mean), na.rm=TRUE) None of the previous\n\nYes, a function must be suitable for the selected data and the dataframe coli_genomes contains numeric and categorical variables, but the function log10(mean) only can work with numeric data. Let’s do it in two steps:\nHow would you select only numeric columns?\n\n apply(coli_genomes, 2, is.numeric)  coli_genomes[lapply(coli_genomes, is.numeric)] coli_genomes[sapply(coli_genomes, is.numeric)] sapply(coli_genomes, is.numeric) lapply(coli_genomes, is.numeric)\n\nHow would you obtain log10 of the mean of all the numeric columns?\n\n apply(coli_genomes[sapply(coli_genomes, is.numeric)],2,function(x)log(mean(x)))  apply(coli_genomes[sapply(coli_genomes, is.numeric)],2,log(mean))  apply(coli_genomes[sapply(coli_genomes, is.numeric)],2,fun(x) log(mean), na.rm=TRUE) apply(coli_genomes[sapply(coli_genomes, is.numeric)],2,function(x)log(mean(x, na.rm=TRUE)))"
  },
  {
    "objectID": "r9.html",
    "href": "r9.html",
    "title": "R9: R for Molecular Biology",
    "section": "",
    "text": "Biological data, like protein or nucleic acid sequences can be stored and explored in different formats, each following its own structure. As you can imagine, that facilitates the use of regular expressions in any programming language to access that data. The use of regular expressions in R is similar to other languages, particularly, to the use you learnt in Python. Anyway, I suggest that you have a look to the References below.\nMoreover, for advanced manipulation of string object, I’d advice the package Strings.\nIn the code below, we are going to use some simple regular expressions to explore and analyze the data in a multifasta file containing the whole proteome of the bacteria Bacillus thuringiensis HER1410 (HER1410.fasta) in our data folder, using grep(), substr(), sub(), and regexpr().\n\n#read the text file with readLines()\nproteome &lt;- readLines(\"data/HER1410.fasta\")\n#number of sequences in the multifasta using grep\nlength(grep(proteome, pattern=\"&gt;\"))\n\n[1] 5807\n\n#extract recombinases\ngrep(\"recombinase\", proteome,value=TRUE)\n\n [1] \"&gt;QKO37045.1 recombinase RecA (plasmid) [Bacillus thuringiensis]\"                          \n [2] \"&gt;QKO36998.1 recombinase family protein (plasmid) [Bacillus thuringiensis]\"                \n [3] \"&gt;QKO36701.1 DDE-type integrase/transposase/recombinase (plasmid) [Bacillus thuringiensis]\"\n [4] \"&gt;QKO36696.1 tyrosine recombinase XerS (plasmid) [Bacillus thuringiensis]\"                 \n [5] \"&gt;QKO36060.1 tyrosine-type recombinase/integrase [Bacillus thuringiensis]\"                 \n [6] \"&gt;QKO36057.1 tyrosine-type recombinase/integrase [Bacillus thuringiensis]\"                 \n [7] \"&gt;QKO35589.1 recombinase family protein [Bacillus thuringiensis]\"                          \n [8] \"&gt;QKO35551.1 tyrosine-type recombinase/integrase [Bacillus thuringiensis]\"                 \n [9] \"&gt;QKO35280.1 recombinase family protein [Bacillus thuringiensis]\"                          \n[10] \"&gt;QKO34873.1 site-specific tyrosine recombinase XerD [Bacillus thuringiensis]\"             \n[11] \"&gt;QKO34618.1 tyrosine recombinase XerC [Bacillus thuringiensis]\"                           \n[12] \"&gt;QKO34567.1 recombinase RecA [Bacillus thuringiensis]\"                                    \n[13] \"&gt;QKO34482.1 recombinase family protein [Bacillus thuringiensis]\"                          \n[14] \"&gt;QKO32507.1 recombinase RecQ [Bacillus thuringiensis]\"                                    \n[15] \"&gt;QKO32484.1 tyrosine-type recombinase/integrase [Bacillus thuringiensis]\"                 \n\n#enzymes (aka \"-ases\")\nhead(grep(\"ase\", proteome,value=TRUE))\n\n[1] \"&gt;QKO37046.1 helicase DnaB (plasmid) [Bacillus x1]\"                                \n[2] \"&gt;QKO37045.1 recombinase RecA (plasmid) [Bacillus thuringiensis]\"                  \n[3] \"&gt;QKO37043.1 IS3 family transposase (plasmid) [Bacillus thuringiensis]\"            \n[4] \"&gt;QKO37040.1 serine acetyltransferase (plasmid) [Bacillus thuringiensis]\"          \n[5] \"&gt;QKO37039.1 O-antigen ligase family protein (plasmid) [Bacillus thuringiensis]\"   \n[6] \"&gt;QKO37026.1 HK97 family phage prohead protease (plasmid) [Bacillus thuringiensis]\"\n\nhead(grep(\"ase\", proteome,value=TRUE,ignore.case=TRUE)) #lower- & uppercase\n\n[1] \"&gt;QKO37046.1 helicase DnaB (plasmid) [Bacillus x1]\"                             \n[2] \"&gt;QKO37045.1 recombinase RecA (plasmid) [Bacillus thuringiensis]\"               \n[3] \"&gt;QKO37043.1 IS3 family transposase (plasmid) [Bacillus thuringiensis]\"         \n[4] \"&gt;QKO37040.1 serine acetyltransferase (plasmid) [Bacillus thuringiensis]\"       \n[5] \"&gt;QKO37039.1 O-antigen ligase family protein (plasmid) [Bacillus thuringiensis]\"\n[6] \"SMSCDIDPTEIITRLTPLGTRIESKNEGATDASEARLTIESVNNGVPYIDHPSGIKEFGIQGKSITWDDV\"        \n\n#extract names\nfastanames &lt;- proteome[grep(proteome, pattern=\"&gt;\")] #extract the headers of all the sequences\nnames_ase &lt;- fastanames[grep(fastanames, pattern=\"ase\")]\n\n\n\nHow would you extract the NCBI protein ID of the enzymes?\n\n sub(names_ase, 1,11) sub(names_ase, 2,11)) substr(names_ase, 1,11) substr(names_ase, 2,11)\n\n\n\n   [1] \"QKO37046.1\" \"QKO37045.1\" \"QKO37043.1\" \"QKO37040.1\" \"QKO37039.1\"\n   [6] \"QKO37026.1\" \"QKO37024.1\" \"QKO37023.1\" \"QKO37022.1\" \"QKO37016.1\"\n  [11] \"QKO37013.1\" \"QKO37011.1\" \"QKO37005.1\" \"QKO36998.1\" \"QKO36995.1\"\n  [16] \"QKO36992.1\" \"QKO36990.1\" \"QKO36988.1\" \"QKO36987.1\" \"QKO36983.1\"\n  [21] \"QKO36981.1\" \"QKO36979.1\" \"QKO36974.1\" \"QKO36973.1\" \"QKO36972.1\"\n  [26] \"QKO36971.1\" \"QKO36970.1\" \"QKO36966.1\" \"QKO36958.1\" \"QKO36956.1\"\n  [31] \"QKO36954.1\" \"QKO36952.1\" \"QKO36940.1\" \"QKO36939.1\" \"QKO36938.1\"\n  [36] \"QKO36936.1\" \"QKO36935.1\" \"QKO36933.1\" \"QKO36932.1\" \"QKO36931.1\"\n  [41] \"QKO36928.1\" \"QKO36927.1\" \"QKO36926.1\" \"QKO36924.1\" \"QKO36923.1\"\n  [46] \"QKO36922.1\" \"QKO36921.1\" \"QKO36920.1\" \"QKO36918.1\" \"QKO36912.1\"\n  [51] \"QKO36909.1\" \"QKO36907.1\" \"QKO36905.1\" \"QKO36904.1\" \"QKO36903.1\"\n  [56] \"QKO36899.1\" \"QKO36897.1\" \"QKO36896.1\" \"QKO36894.1\" \"QKO36892.1\"\n  [61] \"QKO36891.1\" \"QKO36890.1\" \"QKO36889.1\" \"QKO36887.1\" \"QKO36885.1\"\n  [66] \"QKO36884.1\" \"QKO36883.1\" \"QKO36878.1\" \"QKO36875.1\" \"QKO36871.1\"\n  [71] \"QKO36866.1\" \"QKO36864.1\" \"QKO36855.1\" \"QKO36853.1\" \"QKO36850.1\"\n  [76] \"QKO36849.1\" \"QKO36848.1\" \"QKO36845.1\" \"QKO36844.1\" \"QKO36843.1\"\n  [81] \"QKO36842.1\" \"QKO36841.1\" \"QKO36833.1\" \"QKO36832.1\" \"QKO36829.1\"\n  [86] \"QKO36828.1\" \"QKO36822.1\" \"QKO36820.1\" \"QKO36814.1\" \"QKO36813.1\"\n  [91] \"QKO36812.1\" \"QKO36808.1\" \"QKO36807.1\" \"QKO36806.1\" \"QKO36805.1\"\n  [96] \"QKO36802.1\" \"QKO36796.1\" \"QKO36793.1\" \"QKO36791.1\" \"QKO36782.1\"\n--- Cropped output ---\n\n\nHow would you remove the `&gt;’ from the fasta headers?\n\n sub(names_ase, 2,11) sub(“&gt;”,““,names_ase) substr(names_ase, 2,150)\n\n\n\n   [1] \"QKO37046.1 helicase DnaB (plasmid) [Bacillus x1]\"                                                                                                             \n   [2] \"QKO37045.1 recombinase RecA (plasmid) [Bacillus thuringiensis]\"                                                                                               \n   [3] \"QKO37043.1 IS3 family transposase (plasmid) [Bacillus thuringiensis]\"                                                                                         \n   [4] \"QKO37040.1 serine acetyltransferase (plasmid) [Bacillus thuringiensis]\"                                                                                       \n   [5] \"QKO37039.1 O-antigen ligase family protein (plasmid) [Bacillus thuringiensis]\"                                                                                \n   [6] \"QKO37026.1 HK97 family phage prohead protease (plasmid) [Bacillus thuringiensis]\"                                                                             \n   [7] \"QKO37024.1 terminase large subunit (plasmid) [Bacillus thuringiensis]\"                                                                                        \n   [8] \"QKO37023.1 P27 family phage terminase small subunit (plasmid) [Bacillus thuringiensis]\"                                                                       \n   [9] \"QKO37022.1 HNH endonuclease (plasmid) [Bacillus thuringiensis]\"                                                                                               \n  [10] \"QKO37016.1 nuclease (plasmid) [Bacillus thuringiensis]\"                                                                                                       \n  [11] \"QKO37013.1 DNA primase (plasmid) [Bacillus thuringiensis]\"                                                                                                    \n  [12] \"QKO37011.1 AAA family ATPase (plasmid) [Bacillus thuringiensis]\"                                                                                              \n  [13] \"QKO37005.1 sigma-70 family RNA polymerase sigma factor (plasmid) [Bacillus thuringiensis]\"                                                                    \n  [14] \"QKO36998.1 recombinase family protein (plasmid) [Bacillus thuringiensis]\"                                                                                     \n  [15] \"QKO36995.1 IS3 family transposase (plasmid) [Bacillus thuringiensis]\"                                                                                         \n  [16] \"QKO36992.1 low molecular weight phosphotyrosine protein phosphatase (plasmid) [Bacillus thuringiensis]\"                                                       \n  [17] \"QKO36990.1 cadmium-translocating P-type ATPase (plasmid) [Bacillus thuringiensis]\"                                                                            \n  [18] \"QKO36988.1 lysoplasmalogenase (plasmid) [Bacillus thuringiensis]\"                                                                                             \n  [19] \"QKO36987.1 signal peptidase I (plasmid) [Bacillus thuringiensis]\"                                                                                             \n  [20] \"QKO36983.1 IS4 family transposase (plasmid) [Bacillus thuringiensis]\"                                                                                         \n--- Cropped output ---\n\n\n\n\n\n\n\n# regexpr returns the indices of the string where the match begins and the length of the match\n(r &lt;- regexpr(\"(.*)DNA(.*)\",fastanames[1:200])) #find all the lines with \"DNA\" (only 200 lines to don't make it too long)\n\n  [1] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [26] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [51] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [76] -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[101] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[126] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[151] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[176] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\nattr(,\"match.length\")\n  [1] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [26] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 58 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [51] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [76] -1 -1 95 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[101] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[126] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[151] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 68 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[176] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\nattr(,\"index.type\")\n[1] \"chars\"\nattr(,\"useBytes\")\n[1] TRUE\n\n#which ones?\n(dna &lt;- which(r &gt; 0, arr.ind = TRUE))\n\n[1]  37  78 165\n\ndna.length &lt;- attr(r,\"match.length\")[dna]\n#extract the results with a loop\nnombres &lt;- list()\nfor (i in 1:length(dna)){\n  nombres[[i]] &lt;- substr(fastanames[dna[i]], 1, 1 + dna.length[i])\n}\nhead(nombres)\n\n[[1]]\n[1] \"&gt;QKO37013.1 DNA primase (plasmid) [Bacillus thuringiensis]\"\n\n[[2]]\n[1] \"&gt;QKO36972.1 DNA-3-methyladenine glycosylase 2 family protein (plasmid) [Bacillus thuringiensis]\"\n\n[[3]]\n[1] \"&gt;QKO36885.1 DNA topoisomerase III (plasmid) [Bacillus thuringiensis]\"\n\n\n\n\n\n\nThe use or regular expressions is very convenient for some quick overview of the (multi)fasta files, but not for more specific analyses. Working with sequences can be facilitated with diverse packages, being seqinr and Biostrings the more widely used in the literature.\nIn the following example, we are reading the same protein multifasta and we will obtain basic statistics, subset and save fasta sequences using SeqinR (=seqinr).\n\n#reading fasta and playing with it\n#install.packages(\"seqinr\")\nlibrary(seqinr)\nprots &lt;- read.fasta(\"data/HER1410.fasta\")\nstr(prots)\n\nList of 5807\n $ QKO37049.1: 'SeqFastadna' chr [1:67] \"m\" \"t\" \"l\" \"t\" ...\n  ..- attr(*, \"name\")= chr \"QKO37049.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37049.1 hypothetical protein HBA75_30905 (plasmid) [Bacillus thuringiensis]\"\n $ QKO37048.1: 'SeqFastadna' chr [1:142] \"m\" \"k\" \"v\" \"l\" ...\n  ..- attr(*, \"name\")= chr \"QKO37048.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37048.1 hypothetical protein HBA75_30875 (plasmid) [Bacillus thuringiensis]\"\n $ QKO37047.1: 'SeqFastadna' chr [1:326] \"m\" \"e\" \"k\" \"k\" ...\n  ..- attr(*, \"name\")= chr \"QKO37047.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37047.1 cytosolic protein (plasmid) [Bacillus thuringiensis]\"\n $ QKO37046.1: 'SeqFastadna' chr [1:146] \"m\" \"e\" \"k\" \"q\" ...\n  ..- attr(*, \"name\")= chr \"QKO37046.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37046.1 helicase DnaB (plasmid) [Bacillus x1]\"\n $ QKO37045.1: 'SeqFastadna' chr [1:359] \"m\" \"a\" \"a\" \"t\" ...\n  ..- attr(*, \"name\")= chr \"QKO37045.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37045.1 recombinase RecA (plasmid) [Bacillus thuringiensis]\"\n $ QKO37044.1: 'SeqFastadna' chr [1:110] \"m\" \"s\" \"y\" \"d\" ...\n  ..- attr(*, \"name\")= chr \"QKO37044.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37044.1 hypothetical protein HBA75_31045 (plasmid) [Bacillus thuringiensis]\"\n $ QKO37043.1: 'SeqFastadna' chr [1:293] \"m\" \"k\" \"a\" \"a\" ...\n  ..- attr(*, \"name\")= chr \"QKO37043.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37043.1 IS3 family transposase (plasmid) [Bacillus thuringiensis]\"\n $ QKO37042.1: 'SeqFastadna' chr [1:102] \"m\" \"g\" \"k\" \"i\" ...\n  ..- attr(*, \"name\")= chr \"QKO37042.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37042.1 helix-turn-helix domain-containing protein (plasmid) [Bacillus thuringiensis]\"\n--- Cropped output ---\n\ngetName(prots)\n\n   [1] \"QKO37049.1\" \"QKO37048.1\" \"QKO37047.1\" \"QKO37046.1\" \"QKO37045.1\"\n   [6] \"QKO37044.1\" \"QKO37043.1\" \"QKO37042.1\" \"QKO37041.1\" \"QKO37040.1\"\n  [11] \"QKO37039.1\" \"QKO37038.1\" \"QKO37037.1\" \"QKO37036.1\" \"QKO37035.1\"\n  [16] \"QKO37034.1\" \"QKO37033.1\" \"QKO37032.1\" \"QKO37031.1\" \"QKO37030.1\"\n  [21] \"QKO37029.1\" \"QKO37028.1\" \"QKO37027.1\" \"QKO37026.1\" \"QKO37025.1\"\n  [26] \"QKO37024.1\" \"QKO37023.1\" \"QKO37022.1\" \"QKO37021.1\" \"QKO37020.1\"\n  [31] \"QKO37019.1\" \"QKO37018.1\" \"QKO37017.1\" \"QKO37016.1\" \"QKO37015.1\"\n  [36] \"QKO37014.1\" \"QKO37013.1\" \"QKO37012.1\" \"QKO37011.1\" \"QKO37010.1\"\n  [41] \"QKO37009.1\" \"QKO37008.1\" \"QKO37007.1\" \"QKO37006.1\" \"QKO37005.1\"\n  [46] \"QKO37004.1\" \"QKO37003.1\" \"QKO37002.1\" \"QKO37001.1\" \"QKO37000.1\"\n  [51] \"QKO36999.1\" \"QKO36998.1\" \"QKO36997.1\" \"QKO36996.1\" \"QKO36995.1\"\n  [56] \"QKO36994.1\" \"QKO36993.1\" \"QKO36992.1\" \"QKO36991.1\" \"QKO36990.1\"\n  [61] \"QKO36989.1\" \"QKO36988.1\" \"QKO36987.1\" \"QKO36986.1\" \"QKO36985.1\"\n  [66] \"QKO36984.1\" \"QKO36983.1\" \"QKO36982.1\" \"QKO36981.1\" \"QKO36980.1\"\n  [71] \"QKO36979.1\" \"QKO36978.1\" \"QKO36977.1\" \"QKO36976.1\" \"QKO36975.1\"\n  [76] \"QKO36974.1\" \"QKO36973.1\" \"QKO36972.1\" \"QKO36971.1\" \"QKO36970.1\"\n  [81] \"QKO36969.1\" \"QKO36968.1\" \"QKO36967.1\" \"QKO36966.1\" \"QKO36965.1\"\n  [86] \"QKO36964.1\" \"QKO36963.1\" \"QKO36962.1\" \"QKO36961.1\" \"QKO36960.1\"\n  [91] \"QKO36959.1\" \"QKO36958.1\" \"QKO36957.1\" \"QKO36956.1\" \"QKO36955.1\"\n  [96] \"QKO36954.1\" \"QKO36953.1\" \"QKO36952.1\" \"QKO36951.1\" \"QKO36950.1\"\n [101] \"QKO36949.1\" \"QKO36948.1\" \"QKO36947.1\" \"QKO36946.1\" \"QKO36945.1\"\n [106] \"QKO36944.1\" \"QKO36943.1\" \"QKO36942.1\" \"QKO36941.1\" \"QKO36940.1\"\n [111] \"QKO36939.1\" \"QKO36938.1\" \"QKO36937.1\" \"QKO36936.1\" \"QKO36935.1\"\n [116] \"QKO36934.1\" \"QKO36933.1\" \"QKO36932.1\" \"QKO36931.1\" \"QKO36930.1\"\n [121] \"QKO36929.1\" \"QKO36928.1\" \"QKO36927.1\" \"QKO36926.1\" \"QKO36925.1\"\n--- Cropped output ---\n\n\n\nprots[[1]]\n\n [1] \"m\" \"t\" \"l\" \"t\" \"l\" \"h\" \"n\" \"g\" \"d\" \"l\" \"n\" \"k\" \"l\" \"a\" \"r\" \"d\" \"t\" \"s\" \"q\"\n[20] \"d\" \"s\" \"i\" \"i\" \"l\" \"r\" \"v\" \"g\" \"e\" \"q\" \"e\" \"m\" \"v\" \"s\" \"l\" \"k\" \"s\" \"n\" \"g\"\n[39] \"d\" \"i\" \"y\" \"v\" \"k\" \"g\" \"k\" \"l\" \"v\" \"e\" \"n\" \"d\" \"k\" \"e\" \"v\" \"v\" \"d\" \"g\" \"m\"\n[58] \"r\" \"e\" \"l\" \"l\" \"m\" \"l\" \"s\" \"r\" \"k\" \"r\"\nattr(,\"name\")\n[1] \"QKO37049.1\"\nattr(,\"Annot\")\n[1] \"&gt;QKO37049.1 hypothetical protein HBA75_30905 (plasmid) [Bacillus thuringiensis]\"\nattr(,\"class\")\n[1] \"SeqFastadna\"\n\nseq &lt;- getSequence(prots[[1]])\ngetName(prots[[1]])\n\n[1] \"QKO37049.1\"\n\npaste(seq, collapse= \"\")\n\n[1] \"mtltlhngdlnklardtsqdsiilrvgeqemvslksngdiyvkgklvendkevvdgmrellmlsrkr\"\n\npaste(prots[[1]], collapse= \"\")\n\n[1] \"mtltlhngdlnklardtsqdsiilrvgeqemvslksngdiyvkgklvendkevvdgmrellmlsrkr\"\n\naaa(toupper(seq))\n\n [1] \"Met\" \"Thr\" \"Leu\" \"Thr\" \"Leu\" \"His\" \"Asn\" \"Gly\" \"Asp\" \"Leu\" \"Asn\" \"Lys\"\n[13] \"Leu\" \"Ala\" \"Arg\" \"Asp\" \"Thr\" \"Ser\" \"Gln\" \"Asp\" \"Ser\" \"Ile\" \"Ile\" \"Leu\"\n[25] \"Arg\" \"Val\" \"Gly\" \"Glu\" \"Gln\" \"Glu\" \"Met\" \"Val\" \"Ser\" \"Leu\" \"Lys\" \"Ser\"\n[37] \"Asn\" \"Gly\" \"Asp\" \"Ile\" \"Tyr\" \"Val\" \"Lys\" \"Gly\" \"Lys\" \"Leu\" \"Val\" \"Glu\"\n[49] \"Asn\" \"Asp\" \"Lys\" \"Glu\" \"Val\" \"Val\" \"Asp\" \"Gly\" \"Met\" \"Arg\" \"Glu\" \"Leu\"\n[61] \"Leu\" \"Met\" \"Leu\" \"Ser\" \"Arg\" \"Lys\" \"Arg\"\n\naaa(toupper(unlist(seq)))\n\n [1] \"Met\" \"Thr\" \"Leu\" \"Thr\" \"Leu\" \"His\" \"Asn\" \"Gly\" \"Asp\" \"Leu\" \"Asn\" \"Lys\"\n[13] \"Leu\" \"Ala\" \"Arg\" \"Asp\" \"Thr\" \"Ser\" \"Gln\" \"Asp\" \"Ser\" \"Ile\" \"Ile\" \"Leu\"\n[25] \"Arg\" \"Val\" \"Gly\" \"Glu\" \"Gln\" \"Glu\" \"Met\" \"Val\" \"Ser\" \"Leu\" \"Lys\" \"Ser\"\n[37] \"Asn\" \"Gly\" \"Asp\" \"Ile\" \"Tyr\" \"Val\" \"Lys\" \"Gly\" \"Lys\" \"Leu\" \"Val\" \"Glu\"\n[49] \"Asn\" \"Asp\" \"Lys\" \"Glu\" \"Val\" \"Val\" \"Asp\" \"Gly\" \"Met\" \"Arg\" \"Glu\" \"Leu\"\n[61] \"Leu\" \"Met\" \"Leu\" \"Ser\" \"Arg\" \"Lys\" \"Arg\"\n\naaa(toupper(as.vector(seq)))\n\n [1] \"Met\" \"Thr\" \"Leu\" \"Thr\" \"Leu\" \"His\" \"Asn\" \"Gly\" \"Asp\" \"Leu\" \"Asn\" \"Lys\"\n[13] \"Leu\" \"Ala\" \"Arg\" \"Asp\" \"Thr\" \"Ser\" \"Gln\" \"Asp\" \"Ser\" \"Ile\" \"Ile\" \"Leu\"\n[25] \"Arg\" \"Val\" \"Gly\" \"Glu\" \"Gln\" \"Glu\" \"Met\" \"Val\" \"Ser\" \"Leu\" \"Lys\" \"Ser\"\n[37] \"Asn\" \"Gly\" \"Asp\" \"Ile\" \"Tyr\" \"Val\" \"Lys\" \"Gly\" \"Lys\" \"Leu\" \"Val\" \"Glu\"\n[49] \"Asn\" \"Asp\" \"Lys\" \"Glu\" \"Val\" \"Val\" \"Asp\" \"Gly\" \"Met\" \"Arg\" \"Glu\" \"Leu\"\n[61] \"Leu\" \"Met\" \"Leu\" \"Ser\" \"Arg\" \"Lys\" \"Arg\"\n\npmw(toupper(unlist(seq))) \n\n[1] 7602.706\n\n(stats1 &lt;- AAstat(toupper(seq), plot = T))\n\n\n\n\n\n\n\n\n$Compo\n\n *  A  C  D  E  F  G  H  I  K  L  M  N  P  Q  R  S  T  V  W  Y \n 0  1  0  6  5  0  5  1  3  6 10  4  4  0  2  5  5  3  6  0  1 \n\n$Prop\n$Prop$Tiny\n[1] 0.2089552\n\n$Prop$Small\n[1] 0.4477612\n\n$Prop$Aliphatic\n[1] 0.2835821\n\n$Prop$Aromatic\n[1] 0.02985075\n\n$Prop$Non.polar\n[1] 0.4477612\n\n$Prop$Polar\n[1] 0.5522388\n\n$Prop$Charged\n[1] 0.3432836\n\n$Prop$Basic\n[1] 0.1791045\n\n$Prop$Acidic\n[1] 0.1641791\n\n\n$Pi\n[1] 6.557213\n\nbarplot(stats1$Compo, bty=\"7\")\n\n\n\n\n\n\n\n#cool color palette\nlibrary(RColorBrewer)\ncoul = colorRampPalette(brewer.pal(9, \"Set1\"))(20) #palette is expanded from 9 to 20 colors\nbarplot(stats1$Compo, col=coul, bty=\"7\")\n\n\n\n\n\n\n\n#dotplot\ngrep(\"recombinase\",getAnnot(prots))\n\n [1]    5   52  349  354  990  993 1461 1499 1770 2177 2432 2483 2568 4543 4566\n\ndotPlot(prots[[5]],prots[[2483]], wsize=3, nmatch=2)\n\n\n\n\n\n\n\ndotPlot(prots[[2177]],prots[[2432]], wsize=3, nmatch=2)\n\n\n\n\n\n\n\ndotPlot(prots[[2177]],prots[[2432]], col=c(\"floralwhite\",\"dodgerblue\"), \n        wsize=6, nmatch=3, xlab=getName(prots[[2177]]),ylab=getName(prots[[2432]]))\n\n\n\n\n\n\n\n#extract the recombinases to a new file\nrecs &lt;- prots[grep(\"recombinase\",getAnnot(prots))]\n#save to a file\nwrite.fasta(recs, names=names(recs), file.out=\"data/recombinases.faa\")\n\nAs you noticed in the code above, the function read.fasta() can read any (multi)fasta file containing a protein or nucleic acid sequence and create a list of lists. Thus, if you want to extract a sequence as a single element, you need to extract if from the list with unlist() or convert it to a vector with as.vector().\nOnce you read the fasta, you can extract the headline name with getName() or the sequence with getSequence(). Additionally, you can obtain and plot basic stats or compare sequences using dotPlot(). Moreover, if you extract a subset of sequences, you can use write.fasta() to save those sequences in a new fasta file.\nFinally, as in the example below with HER1410 genome sequence (HER1410nt.fasta), you can also play with a nucleotide sequence and obtain some useful data, like the GC() content, the encoded proteins or the reverse complementary sequence with rev() and comp(), respectively.\n\n#now the nt sequence\nplasmid_nt &lt;- read.fasta(\"data/HER1410nt.fasta\")\n\ncount(unlist(plasmid_nt),3)\n\n\n aaa  aac  aag  aat  aca  acc  acg  act  aga  agc  agg  agt  ata  atc  atg  att \n2150  705 1089 1420  715  253  321  484  900  437  525  601  992  589  955 1354 \n caa  cac  cag  cat  cca  ccc  ccg  cct  cga  cgc  cgg  cgt  cta  ctc  ctg  ctt \n 848  248  455  548  325   85  126  235  297  126  190  308  448  200  360  569 \n gaa  gac  gag  gat  gca  gcc  gcg  gct  gga  ggc  ggg  ggt  gta  gtc  gtg  gtt \n1273  273  418  829  467  128  212  384  641  224  292  516  620  230  484  755 \n taa  tac  tag  tat  tca  tcc  tcg  tct  tga  tgc  tgg  tgt  tta  ttc  ttg  ttt \n1093  547  501 1093  592  305  262  475  955  404  666  663 1174  615  889 1310 \n\ncount(unlist(plasmid_nt),5)\n\n\naaaaa aaaac aaaag aaaat aaaca aaacc aaacg aaact aaaga aaagc aaagg aaagt aaata \n  307   110   200   221   138    31    58    45   189    77   105    86   133 \naaatc aaatg aaatt aacaa aacac aacag aacat aacca aaccc aaccg aacct aacga aacgc \n  109   170   171   144    25    64    73    34    14    15    24    42    13 \naacgg aacgt aacta aactc aactg aactt aagaa aagac aagag aagat aagca aagcc aagcg \n   28    45    48    24    46    66   199    38    70   104    71    20    38 \naagct aagga aaggc aaggg aaggt aagta aagtc aagtg aagtt aataa aatac aatag aatat \n   61    97    33    40    70    96    13    55    84   112    80    52   116 \naatca aatcc aatcg aatct aatga aatgc aatgg aatgt aatta aattc aattg aattt acaaa \n   81    41    35    54   130    51    95    83   162    77   128   123   109 \nacaac acaag acaat acaca acacc acacg acact acaga acagc acagg acagt acata acatc \n   54    63    67    27    18    20    24    52    34    39    44    37    27 \nacatg acatt accaa accac accag accat accca acccc acccg accct accga accgc accgg \n   36    64    38    13    28    20    14     2     3    14    13    10     9 \naccgt accta acctc acctg acctt acgaa acgac acgag acgat acgca acgcc acgcg acgct \n   16    19     5    20    29    45     8    14    35     9     6     2    23 \nacgga acggc acggg acggt acgta acgtc acgtg acgtt actaa actac actag actat actca \n   32    13     8    21    35    10    27    33    39    24    20    44    30 \nactcc actcg actct actga actgc actgg actgt actta acttc acttg acttt agaaa agaac \n    7    10    14    44    10    27    36    49    28    41    61   171    51 \nagaag agaat agaca agacc agacg agact agaga agagc agagg agagt agata agatc agatg \n  109    84    35    16    19    13    54    15    39    39    85    19    75 \nagatt agcaa agcac agcag agcat agcca agccc agccg agcct agcga agcgc agcgg agcgt \n   76    89    12    28    37    12     7    12    20    33    17    20    26 \nagcta agctc agctg agctt aggaa aggac aggag aggat aggca aggcc aggcg aggct aggga \n   35    11    41    37    72    26    46    48    24     1    19    21    38 \nagggc agggg agggt aggta aggtc aggtg aggtt agtaa agtac agtag agtat agtca agtcc \n   17    23    23    51    20    59    37    73    21    28    65    28    13 \nagtcg agtct agtga agtgc agtgg agtgt agtta agttc agttg agttt ataaa ataac ataag \n    9    16    42    18    35    26    60    35    63    69   133    52    53 \nataat ataca atacc atacg atact ataga atagc atagg atagt atata atatc atatg atatt \n   84    79    29    40    46    46    25    20    36    79    74    77   119 \natcaa atcac atcag atcat atcca atccc atccg atcct atcga atcgc atcgg atcgt atcta \n   94    32    37    63    50     8    16    39    40    11    17    32    59 \natctc atctg atctt atgaa atgac atgag atgat atgca atgcc atgcg atgct atgga atggc \n   18    25    48   184    36    36    94    65    17    20    48    80    35 \natggg atggt atgta atgtc atgtg atgtt attaa attac attag attat attca attcc attcg \n   47    69    73    29    34    88   114    92    85   100    83    36    45 \nattct attga attgc attgg attgt attta atttc atttg atttt caaaa caaac caaag caaat \n   50   111    43    91    76   153    60    89   126   133    45    57    99 \ncaaca caacc caacg caact caaga caagc caagg caagt caata caatc caatg caatt cacaa \n   44    11    18    42    59    32    32    47    63    25    38   103    39 \ncacac cacag cacat cacca caccc caccg cacct cacga cacgc cacgg cacgt cacta cactc \n   12    26    22    14     3    10    17    14     7    11    11    13     8 \ncactg cactt cagaa cagac cagag cagat cagca cagcc cagcg cagct cagga caggc caggg \n   12    29    52    15    28    46    39    10    26    27    29    13    19 \ncaggt cagta cagtc cagtg cagtt cataa catac catag catat catca catcc catcg catct \n   35    34    16    14    52    37    26     7    63    37    15    13    29 \ncatga catgc catgg catgt catta cattc cattg cattt ccaaa ccaac ccaag ccaat ccaca \n   38    15    21    18    68    35    46    80    46    14    28    35    27 \nccacc ccacg ccact ccaga ccagc ccagg ccagt ccata ccatc ccatg ccatt cccaa cccac \n    5     6     4    24    17    16    21    18    16     9    39    14     3 \ncccag cccat cccca ccccc ccccg cccct cccga cccgc cccgg cccgt cccta ccctc ccctg \n    7    11     6     4     1     5     3     1     0     2    13     2     5 \nccctt ccgaa ccgac ccgag ccgat ccgca ccgcc ccgcg ccgct ccgga ccggc ccggg ccggt \n    8    19     6     2     8     7     6     3     6     9     3     2     7 \nccgta ccgtc ccgtg ccgtt cctaa cctac cctag cctat cctca cctcc cctcg cctct cctga \n   11     7    10    20    23     6     6    28     7     5     3     6    21 \ncctgc cctgg cctgt cctta ccttc ccttg ccttt cgaaa cgaac cgaag cgaat cgaca cgacc \n    6    18    11    27    16    13    39    50    12    27    32    10     6 \ncgacg cgact cgaga cgagc cgagg cgagt cgata cgatc cgatg cgatt cgcaa cgcac cgcag \n    3    14    10     7     5     9    31     9    38    34    18     7    15 \ncgcat cgcca cgccc cgccg cgcct cgcga cgcgc cgcgg cgcgt cgcta cgctc cgctg cgctt \n   13     9     0     3     4     3     1     4     3    12     5    12    16 \ncggaa cggac cggag cggat cggca cggcc cggcg cggct cggga cgggc cgggg cgggt cggta \n   36     9    18    23     9     5     3    11     9     2     3     7    23 \ncggtc cggtg cggtt cgtaa cgtac cgtag cgtat cgtca cgtcc cgtcg cgtct cgtga cgtgc \n    2    13    17    32    16     5    35    14     5     6    13    24    12 \ncgtgg cgtgt cgtta cgttc cgttg cgttt ctaaa ctaac ctaag ctaat ctaca ctacc ctacg \n   17    20    31    21    19    38    74    23    19    42    24     4    13 \nctact ctaga ctagc ctagg ctagt ctata ctatc ctatg ctatt ctcaa ctcac ctcag ctcat \n   26    24     5    11    20    42    30    33    58    29     9    12    24 \nctcca ctccc ctccg ctcct ctcga ctcgc ctcgg ctcgt ctcta ctctc ctctg ctctt ctgaa \n   13     4     6    11     9     5     4    14    18    10     5    27    76 \nctgac ctgag ctgat ctgca ctgcc ctgcg ctgct ctgga ctggc ctggg ctggt ctgta ctgtc \n    9    13    41    20     3     2    17    24    12    13    31    27    11 \nctgtg ctgtt cttaa cttac cttag cttat cttca cttcc cttcg cttct cttga cttgc cttgg \n   22    39    51    22    29    54    30    16     5    35    45    21    32 \ncttgt cttta ctttc ctttg ctttt gaaaa gaaac gaaag gaaat gaaca gaacc gaacg gaact \n   30    70    27    33    69   205    71    92   140    68    23    28    38 \ngaaga gaagc gaagg gaagt gaata gaatc gaatg gaatt gacaa gacac gacag gacat gacca \n  124    60    60    67    72    43    76   106    34    13    22    29    16 \ngaccc gaccg gacct gacga gacgc gacgg gacgt gacta gactc gactg gactt gagaa gagac \n    5    12    14    22     6    11    16    24    11    14    24    74    15 \ngagag gagat gagca gagcc gagcg gagct gagga gaggc gaggg gaggt gagta gagtc gagtg \n   23    39    21    14    12    13    37     8    21    30    23    20    25 \ngagtt gataa gatac gatag gatat gatca gatcc gatcg gatct gatga gatgc gatgg gatgt \n   43    78    38    37    86    22    18    14    16   103    44    50    62 \ngatta gattc gattg gattt gcaaa gcaac gcaag gcaat gcaca gcacc gcacg gcact gcaga \n   62    43    57    99    82    19    41    62    14     6    10    14    32 \ngcagc gcagg gcagt gcata gcatc gcatg gcatt gccaa gccac gccag gccat gccca gcccc \n   31    23    15    27    16    21    54    18     3    14    15     5     3 \ngcccg gccct gccga gccgc gccgg gccgt gccta gcctc gcctg gcctt gcgaa gcgac gcgag \n    1     1     6     3     5    11    10     4    11    18    24    10     7 \ngcgat gcgca gcgcc gcgcg gcgct gcgga gcggc gcggg gcggt gcgta gcgtc gcgtg gcgtt \n   27    22     1     3     4    26     5     4    16    15     8    16    24 \ngctaa gctac gctag gctat gctca gctcc gctcg gctct gctga gctgc gctgg gctgt gctta \n   38    15    17    38    15    11    11    15    51    22    18    24    31 \ngcttc gcttg gcttt ggaaa ggaac ggaag ggaat ggaca ggacc ggacg ggact ggaga ggagc \n   15    26    36   105    44    47    69    25    10    18    19    53    19 \nggagg ggagt ggata ggatc ggatg ggatt ggcaa ggcac ggcag ggcat ggcca ggccc ggccg \n   28    28    49    13    46    68    32     6    20    26    14     2     3 \nggcct ggcga ggcgc ggcgg ggcgt ggcta ggctc ggctg ggctt gggaa gggac gggag gggat \n    6    12     8    12    18    17    11    17    20    50    12    16    35 \ngggca gggcc gggcg gggct gggga ggggc ggggg ggggt gggta gggtc gggtg gggtt ggtaa \n   19     5    10    14    17    15    13    13    20     4    21    28    66 \nggtac ggtag ggtat ggtca ggtcc ggtcg ggtct ggtga ggtgc ggtgg ggtgt ggtta ggttc \n   28    18    40    18     6    15    14    69    35    29    34    32    28 \nggttg ggttt gtaaa gtaac gtaag gtaat gtaca gtacc gtacg gtact gtaga gtagc gtagg \n   28    56    99    37    29    73    39    12    14    21    36    15    18 \ngtagt gtata gtatc gtatg gtatt gtcaa gtcac gtcag gtcat gtcca gtccc gtccg gtcct \n   19    38    50    50    70    29     9    15    27    23     2     6    11 \ngtcga gtcgc gtcgg gtcgt gtcta gtctc gtctg gtctt gtgaa gtgac gtgag gtgat gtgca \n   16     5     9    12    16    10    14    26    73    15    26    58    30 \ngtgcc gtgcg gtgct gtgga gtggc gtggg gtggt gtgta gtgtc gtgtg gtgtt gttaa gttac \n    5     8    28    72    13    16    31    30    16    15    48    64    29 \ngttag gttat gttca gttcc gttcg gttct gttga gttgc gttgg gttgt gttta gtttc gtttg \n   28    72    42    29    19    42    50    34    39    55    64    44    51 \ngtttt taaaa taaac taaag taaat taaca taacc taacg taact taaga taagc taagg taagt \n   93   193    46   108   123    56    22    24    59    39    21    43    48 \ntaata taatc taatg taatt tacaa tacac tacag tacat tacca taccc taccg tacct tacga \n   92    34    75   110    76    39    57    40    35    11    11    18    24 \ntacgc tacgg tacgt tacta tactc tactg tactt tagaa tagac tagag tagat tagca tagcc \n   14    24    33    42    18    45    60    90    15    26    66    35     7 \ntagcg tagct tagga taggc taggg taggt tagta tagtc tagtg tagtt tataa tatac tatag \n   20    23    29    11    21    32    34    17    27    48    95    50    31 \ntatat tatca tatcc tatcg tatct tatga tatgc tatgg tatgt tatta tattc tattg tattt \n   84    86    39    38    51    79    40    65    61    99    59    90   126 \ntcaaa tcaac tcaag tcaat tcaca tcacc tcacg tcact tcaga tcagc tcagg tcagt tcata \n   97    28    38    65    31    15     7    20    33    20    18    36    51 \ntcatc tcatg tcatt tccaa tccac tccag tccat tccca tcccc tcccg tccct tccga tccgc \n   35    26    72    53    23    29    36    10     7     1     8    13     8 \ntccgg tccgt tccta tcctc tcctg tcctt tcgaa tcgac tcgag tcgat tcgca tcgcc tcgcg \n    7    19    21    10    20    40    33     9     8    42    15     3     3 \ntcgct tcgga tcggc tcggg tcggt tcgta tcgtc tcgtg tcgtt tctaa tctac tctag tctat \n   13    19     7     7    11    27    13    20    32    58    22    17    53 \ntctca tctcc tctcg tctct tctga tctgc tctgg tctgt tctta tcttc tcttg tcttt tgaaa \n   22    11     8    25    23     4    17    28    49    27    48    63   182 \ntgaac tgaag tgaat tgaca tgacc tgacg tgact tgaga tgagc tgagg tgagt tgata tgatc \n   50   128   112    28    15    15    27    34    19    24    35    74    29 \ntgatg tgatt tgcaa tgcac tgcag tgcat tgcca tgccc tgccg tgcct tgcga tgcgc tgcgg \n  100    83    65    19    38    42    15     1     7    13    20     4    15 \ntgcgt tgcta tgctc tgctg tgctt tggaa tggac tggag tggat tggca tggcc tggcg tggct \n   16    44    25    45    35   107    25    48    70    32    14    18    19 \ntggga tgggc tgggg tgggt tggta tggtc tggtg tggtt tgtaa tgtac tgtag tgtat tgtca \n   49    14    19    30    58    27    74    62    67    21    37    68    20 \ntgtcc tgtcg tgtct tgtga tgtgc tgtgg tgtgt tgtta tgttc tgttg tgttt ttaaa ttaac \n   18    12    23    37     6    51    29    70    48    68    88   164    49 \nttaag ttaat ttaca ttacc ttacg ttact ttaga ttagc ttagg ttagt ttata ttatc ttatg \n   50   112    70    30    28    72    91    40    44    51   101    60    85 \nttatt ttcaa ttcac ttcag ttcat ttcca ttccc ttccg ttcct ttcga ttcgc ttcgg ttcgt \n  127    76    23    43    70    55    12    19    30    27    13    14    34 \nttcta ttctc ttctg ttctt ttgaa ttgac ttgag ttgat ttgca ttgcc ttgcg ttgct ttgga \n   57    28    28    86   139    25    37    93    49    11    25    56    74 \nttggc ttggg ttggt ttgta ttgtc ttgtg ttgtt tttaa tttac tttag tttat tttca tttcc \n   23    36    90    63    17    52    99   146    57    84   147    57    35 \ntttcg tttct tttga tttgc tttgg tttgt tttta ttttc ttttg ttttt \n   19    72    88    43    61    70   147    52    89   143 \n\nuco(plasmid_nt[[1]],frame=0)\n\n\naaa aac aag aat aca acc acg act aga agc agg agt ata atc atg att caa cac cag cat \n722 239 389 463 238  84 114 144 286 145 148 192 318 190 328 464 291  88 156 187 \ncca ccc ccg cct cga cgc cgg cgt cta ctc ctg ctt gaa gac gag gat gca gcc gcg gct \n125  22  49  94  94  40  62  90 148  73 158 197 374  82 145 267 125  30  75 130 \ngga ggc ggg ggt gta gtc gtg gtt taa tac tag tat tca tcc tcg tct tga tgc tgg tgt \n241  78  96 184 220  78 181 249 408 194 181 327 178  88  88 155 341 118 185 223 \ntta ttc ttg ttt \n404 206 313 414 \n\nuco(plasmid_nt[[1]],frame=2)\n\n\naaa aac aag aat aca acc acg act aga agc agg agt ata atc atg att caa cac cag cat \n720 234 340 462 233  89  93 175 283 131 182 225 376 182 328 460 300  82 152 177 \ncca ccc ccg cct cga cgc cgg cgt cta ctc ctg ctt gaa gac gag gat gca gcc gcg gct \n 96  37  39  85  97  34  61 117 139  54  96 189 461  97 135 270 183  53  74 140 \ngga ggc ggg ggt gta gtc gtg gtt taa tac tag tat tca tcc tcg tct tga tgc tgg tgt \n215  66 109 193 211  73 144 244 332 167 144 391 210 111  80 177 273 129 247 192 \ntta ttc ttg ttt \n384 200 299 444 \n\n\n\ntranslate(plasmid_nt[[1]])\n\n    [1] \"V\" \"W\" \"S\" \"I\" \"K\" \"H\" \"N\" \"L\" \"T\" \"T\" \"S\" \"N\" \"E\" \"Y\" \"S\" \"*\" \"A\" \"A\"\n   [19] \"I\" \"I\" \"L\" \"F\" \"*\" \"N\" \"L\" \"*\" \"P\" \"L\" \"L\" \"L\" \"V\" \"Q\" \"L\" \"D\" \"S\" \"Y\"\n   [37] \"L\" \"H\" \"E\" \"Q\" \"V\" \"L\" \"*\" \"L\" \"R\" \"L\" \"*\" \"W\" \"K\" \"I\" \"Q\" \"L\" \"H\" \"L\"\n   [55] \"L\" \"L\" \"L\" \"S\" \"*\" \"I\" \"R\" \"C\" \"L\" \"N\" \"C\" \"T\" \"I\" \"H\" \"L\" \"S\" \"T\" \"D\"\n   [73] \"L\" \"K\" \"V\" \"L\" \"L\" \"F\" \"Q\" \"V\" \"K\" \"R\" \"L\" \"Y\" \"Q\" \"L\" \"Y\" \"*\" \"P\" \"V\"\n   [91] \"V\" \"F\" \"E\" \"L\" \"C\" \"S\" \"L\" \"L\" \"G\" \"L\" \"G\" \"L\" \"T\" \"Y\" \"P\" \"F\" \"Y\" \"I\"\n  [109] \"R\" \"S\" \"*\" \"E\" \"Y\" \"L\" \"L\" \"L\" \"*\" \"T\" \"D\" \"I\" \"L\" \"N\" \"V\" \"L\" \"S\" \"Y\"\n  [127] \"L\" \"G\" \"F\" \"C\" \"Y\" \"I\" \"V\" \"L\" \"V\" \"N\" \"Y\" \"L\" \"T\" \"L\" \"L\" \"V\" \"S\" \"L\"\n  [145] \"Q\" \"Y\" \"H\" \"Q\" \"D\" \"Q\" \"R\" \"W\" \"R\" \"L\" \"P\" \"R\" \"G\" \"L\" \"E\" \"I\" \"L\" \"F\"\n  [163] \"Q\" \"L\" \"H\" \"P\" \"L\" \"E\" \"L\" \"E\" \"A\" \"Y\" \"R\" \"M\" \"F\" \"L\" \"Y\" \"D\" \"V\" \"L\"\n  [181] \"S\" \"Y\" \"T\" \"Y\" \"S\" \"S\" \"L\" \"Q\" \"F\" \"Y\" \"Y\" \"G\" \"F\" \"L\" \"L\" \"V\" \"Y\" \"F\"\n  [199] \"P\" \"K\" \"N\" \"A\" \"F\" \"R\" \"I\" \"W\" \"R\" \"T\" \"L\" \"K\" \"H\" \"*\" \"R\" \"I\" \"R\" \"K\"\n  [217] \"N\" \"Y\" \"A\" \"I\" \"*\" \"L\" \"C\" \"L\" \"S\" \"F\" \"Y\" \"Y\" \"L\" \"V\" \"L\" \"V\" \"V\" \"Q\"\n  [235] \"Y\" \"T\" \"K\" \"Y\" \"L\" \"Y\" \"Q\" \"*\" \"K\" \"F\" \"R\" \"N\" \"P\" \"F\" \"E\" \"Q\" \"C\" \"L\"\n  [253] \"L\" \"E\" \"C\" \"R\" \"L\" \"P\" \"S\" \"G\" \"F\" \"F\" \"Q\" \"C\" \"K\" \"S\" \"D\" \"Y\" \"L\" \"*\"\n  [271] \"Y\" \"S\" \"V\" \"Q\" \"H\" \"H\" \"N\" \"*\" \"I\" \"F\" \"S\" \"L\" \"S\" \"*\" \"S\" \"*\" \"R\" \"H\"\n  [289] \"D\" \"C\" \"L\" \"K\" \"I\" \"L\" \"R\" \"C\" \"L\" \"L\" \"Y\" \"L\" \"L\" \"F\" \"*\" \"T\" \"S\" \"R\"\n  [307] \"I\" \"C\" \"I\" \"L\" \"Q\" \"F\" \"Q\" \"P\" \"Q\" \"*\" \"D\" \"*\" \"Y\" \"I\" \"S\" \"F\" \"L\" \"C\"\n  [325] \"L\" \"G\" \"H\" \"I\" \"P\" \"W\" \"V\" \"I\" \"*\" \"L\" \"R\" \"F\" \"S\" \"D\" \"L\" \"I\" \"Q\" \"P\"\n  [343] \"F\" \"C\" \"A\" \"W\" \"N\" \"L\" \"S\" \"H\" \"V\" \"L\" \"L\" \"L\" \"S\" \"L\" \"V\" \"P\" \"I\" \"A\"\n  [361] \"Q\" \"V\" \"S\" \"Q\" \"L\" \"R\" \"*\" \"*\" \"T\" \"F\" \"F\" \"R\" \"*\" \"R\" \"L\" \"L\" \"Y\" \"Q\"\n  [379] \"I\" \"S\" \"L\" \"C\" \"Y\" \"F\" \"*\" \"I\" \"*\" \"H\" \"Y\" \"I\" \"H\" \"P\" \"L\" \"F\" \"L\" \"E\"\n  [397] \"W\" \"N\" \"V\" \"S\" \"L\" \"I\" \"L\" \"N\" \"E\" \"*\" \"I\" \"D\" \"L\" \"I\" \"Y\" \"K\" \"Q\" \"E\"\n  [415] \"*\" \"Y\" \"Q\" \"I\" \"V\" \"F\" \"S\" \"S\" \"Y\" \"L\" \"L\" \"S\" \"F\" \"F\" \"E\" \"K\" \"Q\" \"V\"\n  [433] \"V\" \"L\" \"Y\" \"F\" \"S\" \"H\" \"Y\" \"I\" \"L\" \"H\" \"H\" \"S\" \"N\" \"H\" \"L\" \"Q\" \"L\" \"P\"\n--- Cropped output ---\n\n\n\nGC(plasmid_nt[[1]])\n\n[1] 0.3437746\n\nplasmid_nt[[1]][1:100]\n\n  [1] \"g\" \"t\" \"t\" \"t\" \"g\" \"g\" \"t\" \"c\" \"a\" \"a\" \"t\" \"t\" \"a\" \"a\" \"a\" \"c\" \"a\" \"c\"\n [19] \"a\" \"a\" \"c\" \"c\" \"t\" \"a\" \"a\" \"c\" \"t\" \"a\" \"c\" \"a\" \"t\" \"c\" \"a\" \"a\" \"a\" \"t\"\n [37] \"g\" \"a\" \"a\" \"t\" \"a\" \"c\" \"a\" \"g\" \"t\" \"t\" \"a\" \"g\" \"g\" \"c\" \"t\" \"g\" \"c\" \"g\"\n [55] \"a\" \"t\" \"t\" \"a\" \"t\" \"t\" \"t\" \"t\" \"a\" \"t\" \"t\" \"t\" \"t\" \"g\" \"a\" \"a\" \"a\" \"t\"\n [73] \"c\" \"t\" \"g\" \"t\" \"a\" \"a\" \"c\" \"c\" \"t\" \"t\" \"t\" \"a\" \"t\" \"t\" \"a\" \"c\" \"t\" \"g\"\n [91] \"g\" \"t\" \"g\" \"c\" \"a\" \"a\" \"t\" \"t\" \"g\" \"g\"\n\ncomp(plasmid_nt[[1]][1:100])\n\n  [1] \"c\" \"a\" \"a\" \"a\" \"c\" \"c\" \"a\" \"g\" \"t\" \"t\" \"a\" \"a\" \"t\" \"t\" \"t\" \"g\" \"t\" \"g\"\n [19] \"t\" \"t\" \"g\" \"g\" \"a\" \"t\" \"t\" \"g\" \"a\" \"t\" \"g\" \"t\" \"a\" \"g\" \"t\" \"t\" \"t\" \"a\"\n [37] \"c\" \"t\" \"t\" \"a\" \"t\" \"g\" \"t\" \"c\" \"a\" \"a\" \"t\" \"c\" \"c\" \"g\" \"a\" \"c\" \"g\" \"c\"\n [55] \"t\" \"a\" \"a\" \"t\" \"a\" \"a\" \"a\" \"a\" \"t\" \"a\" \"a\" \"a\" \"a\" \"c\" \"t\" \"t\" \"t\" \"a\"\n [73] \"g\" \"a\" \"c\" \"a\" \"t\" \"t\" \"g\" \"g\" \"a\" \"a\" \"a\" \"t\" \"a\" \"a\" \"t\" \"g\" \"a\" \"c\"\n [91] \"c\" \"a\" \"c\" \"g\" \"t\" \"t\" \"a\" \"a\" \"c\" \"c\"\n\nrev(comp(plasmid_nt[[1]][1:100]))\n\n  [1] \"c\" \"c\" \"a\" \"a\" \"t\" \"t\" \"g\" \"c\" \"a\" \"c\" \"c\" \"a\" \"g\" \"t\" \"a\" \"a\" \"t\" \"a\"\n [19] \"a\" \"a\" \"g\" \"g\" \"t\" \"t\" \"a\" \"c\" \"a\" \"g\" \"a\" \"t\" \"t\" \"t\" \"c\" \"a\" \"a\" \"a\"\n [37] \"a\" \"t\" \"a\" \"a\" \"a\" \"a\" \"t\" \"a\" \"a\" \"t\" \"c\" \"g\" \"c\" \"a\" \"g\" \"c\" \"c\" \"t\"\n [55] \"a\" \"a\" \"c\" \"t\" \"g\" \"t\" \"a\" \"t\" \"t\" \"c\" \"a\" \"t\" \"t\" \"t\" \"g\" \"a\" \"t\" \"g\"\n [73] \"t\" \"a\" \"g\" \"t\" \"t\" \"a\" \"g\" \"g\" \"t\" \"t\" \"g\" \"t\" \"g\" \"t\" \"t\" \"t\" \"a\" \"a\"\n [91] \"t\" \"t\" \"g\" \"a\" \"c\" \"c\" \"a\" \"a\" \"a\" \"c\"\n\n\n\n\n\nYou can query to NCBI, Uniprot and other databases directly using seqinr. The seqinr package was written by the group that created the ACNUC database in Lyon, France (http://pbil.univ-lyon1.fr/databases/acnuc/acnuc.html). The ACNUC database is a database that contains most of the data from the NCBI Sequence Database, as well as data from other sequence databases such as UniProt and Ensembl. the ACNUC database is organised into various different ACNUC (sub)-databases, which contain different parts of the NCBI database, and when you want to search the NCBI database via R, you will need to specify which ACNUC sub-database the NCBI data that you want to query is stored in.\nTo obtain a full list of the ACNUC sub-databases that you can access using seqinr, you can use the choosebank() function from seqinr. Then, you just need to select the database and query your sequence. However, as you can see in the example below it does not work currently. I mentioned this here because I used this previously and found it very useful. In case you want to try it again in the future you can check the examples in the Reference 4 below.\n\nchoosebank()\n\n [1] \"genbank\"         \"embl\"            \"emblwgs\"         \"genbankseqinr\"  \n [5] \"swissprot\"       \"swissprotseqinr\" \"ensembl\"         \"hogenom7dna\"    \n [9] \"hogenom7\"        \"hogenom\"         \"hogenomdna\"      \"hovergendna\"    \n[13] \"hovergen\"        \"hogenom5\"        \"hogenom5dna\"     \"hogenom4\"       \n[17] \"hogenom4dna\"     \"homolens\"        \"homolensdna\"     \"hobacnucl\"      \n[21] \"hobacprot\"       \"phever2\"         \"phever2dna\"      \"refseq\"         \n[25] \"refseq16s\"       \"greviews\"        \"bacterial\"       \"archaeal\"       \n[29] \"protozoan\"       \"ensprotists\"     \"ensfungi\"        \"ensmetazoa\"     \n[33] \"ensplants\"       \"ensemblbacteria\" \"mito\"            \"polymorphix\"    \n[37] \"emglib\"          \"refseqViruses\"   \"ribodb\"          \"taxodb\"         \n\n#select genbank\nchoosebank(\"swissprot\")\nquery(\"pol\",\"AC=P0DPS1\",verbose=TRUE,invisible=FALSE)\n\nI'm checking the arguments...\n... and everything is OK up to now.\nI'm checking the status of the socket connection...\n... and everything is OK up to now.\nI'm sending query to server...\n... answer from server is: code=0&lrank=2&count=1&type=SQ&locus=T \nI'm trying to analyse answer from server...\n... and everything is OK up to now.\n... and the rank of the resulting list is: 2 .\n... and there are 1 elements in the list.\n... and the elements in the list are of type SQ .\n... and there are only parent sequences in the list.\nI'm trying to get the infos about the elements of the list...\n... and I have received 1 lines as expected.\n\npolseq &lt;- getSequence(pol$req[[1]])\n\nError: object 'pol' not found\n\nclosebank()\n\n\n\n\nLike seqinr, other R packages allow accessing to NCBI and other databases, including APE or genbankr. The latter takes advantage of the packages rentrez.\nrentrez is an R package that helps users query the NCBI’s databases to download diverse type of data and metadata, including sequences or research papers.\n\nif(!require(rentrez)){\n   install.packages(\"rentrez\", repos = \"https://cran.rstudio.com/\")\n}\n\nLoading required package: rentrez\n\nlibrary(rentrez)\n(pols &lt;- entrez_search(db = \"pubmed\", term = \"DNA polymerase\") )\n\nEntrez search result with 370959 hits (object contains 20 IDs and no web_history object)\n Search term (as translated):  \"dna directed dna polymerase\"[MeSH Terms] OR (\"dna ... \n\nstr(pols)\n\nList of 5\n $ ids             : chr [1:20] \"39621259\" \"39620979\" \"39620947\" \"39620398\" ...\n $ count           : int 370959\n $ retmax          : int 20\n $ QueryTranslation: chr \"\\\"dna directed dna polymerase\\\"[MeSH Terms] OR (\\\"dna directed\\\"[All Fields] AND \\\"dna\\\"[All Fields] AND \\\"poly\"| __truncated__\n $ file            :Classes 'XMLInternalDocument', 'XMLAbstractDocument' &lt;externalptr&gt; \n - attr(*, \"class\")= chr [1:2] \"esearch\" \"list\"\n\n(Gon &lt;- entrez_search(db = \"pubmed\", term = \"Gonzalez\", retmax=100))\n\nEntrez search result with 69977 hits (object contains 100 IDs and no web_history object)\n Search term (as translated):  \"Gonzalez\"[All Fields] \n\nGon$ids #now kept 100\n\n  [1] \"39621129\" \"39619484\" \"39618681\" \"39618641\" \"39617972\" \"39617918\"\n  [7] \"39617385\" \"39616970\" \"39616707\" \"39616660\" \"39616625\" \"39616040\"\n [13] \"39615628\" \"39615375\" \"39614614\" \"39613751\" \"39613322\" \"39613189\"\n [19] \"39612977\" \"39612354\" \"39611842\" \"39610682\" \"39610033\" \"39610022\"\n [25] \"39609566\" \"39609135\" \"39608730\" \"39608561\" \"39608078\" \"39608055\"\n [31] \"39607475\" \"39606794\" \"39606745\" \"39605874\" \"39605663\" \"39605657\"\n [37] \"39605494\" \"39605200\" \"39603856\" \"39603359\" \"39603311\" \"39603275\"\n [43] \"39603015\" \"39602990\" \"39601936\" \"39601306\" \"39601224\" \"39601182\"\n [49] \"39600733\" \"39600286\" \"39600184\" \"39599646\" \"39598551\" \"39598529\"\n [55] \"39598444\" \"39598243\" \"39597369\" \"39597045\" \"39596772\" \"39596764\"\n [61] \"39596530\" \"39595817\" \"39595697\" \"39595414\" \"39594805\" \"39593747\"\n [67] \"39593735\" \"39593573\" \"39592624\" \"39592295\" \"39592089\" \"39591634\"\n [73] \"39591353\" \"39591278\" \"39591008\" \"39590677\" \"39590660\" \"39590502\"\n [79] \"39590142\" \"39589919\" \"39589741\" \"39589489\" \"39588641\" \"39588218\"\n [85] \"39587064\" \"39586935\" \"39585599\" \"39585317\" \"39584832\" \"39584673\"\n [91] \"39584209\" \"39583488\" \"39583298\" \"39583229\" \"39582728\" \"39582125\"\n [97] \"39582032\" \"39581951\" \"39581918\" \"39581725\"\n\n#we can also fetch data\nher1410 &lt;- entrez_search(db = \"nuccore\", term = \"HER1410\") \nher1410$ids\n\n[1] \"1853362518\" \"1853362517\" \"1853362516\" \"1853362515\" \"1852678087\"\n[6] \"1852677931\" \"1852677628\" \"1852672161\" \"183211906\" \n\nher1410_1 &lt;- entrez_fetch(db=\"nuccore\", id=her1410$ids[1], rettype=\"fasta\")\nhead(her1410_1)\n\n[1] \"&gt;NZ_CP050186.1 Bacillus thuringiensis strain HER1410 plasmid pLUSID3, complete sequence\\nGTTTGGTCAATTAAACACAACCTAACTACATCAAATGAATACAGTTAGGCTGCGATTATTTTATTTTGAA\\nATCTGTAACCTTTATTACTGGTGCAATTGGATTCTTACCTACACGAGCAGGTTTTGTGACTTCGACTGTA\\nATGGAAGATACAATTGCATTTACTGCTGCTTTCTTAGATTCGTTGTTTAAATTGTACCATTCATCTTTCA\\nACTGATTTAAAAGTTCTTTTATTTCAAGTGAAGAGGCTGTATCAGTTATATTAGCCAGTTGTTTTTGAAT\\nTATGTTCTCTTCTTGGGTTAGGGTTAACATATCCTTTTTATATTCGTTCTTAGGAATATCTCCTTCTATG\\nAACAGATATTTTAAACGTGCTTTCTTATCTTGGATTCTGTTATATTGTTCTTGTAAATTACTTAACTCTA\\nTTGGTTTCTCTTCAGTATCATCAAGATCAACGATGGCGTCTTCCAAGAGGTTTAGAAATTCTTTTTCAAT\\nTACATCCTCTGGAACTTGAGGCATATCGCATGTTCCTTTATGATGTCTTGAGCTACACCTATAGCTCATT\\nACAATTCTATTATGGCTTCTTACTTGTTTATTTCCCAAAAAATGCTTTCCGCATCTGGCGCACTTTAAAA\\nCATTAGAGAATACGAAAAAATTATGCAATCTAACTTTGCCTCTCTTTCTACTATCTTGTACTTGTTGTAC\\nAGTATACCAAGTATCTTTATCAATAAAAGTTTCGAAATCCTTTTGAGCAATGTCTGTTAGAATGTCGTCT\\nCCCCAGCGGATTTTTCCAATGTAAATCGGATTATTTATAATATAGCGTACAGCATCATAATTGAATATTT\\nTCCCTCTCTTAGTCTTAACGCCACGACTGTTTAAAGATTTTACGATGCTTATTATACCTTTTGTTTTAAA\\nCATCTCGAATATGTATTTTACAATTTCAGCCTCAGTAGGATTGATATATAAGTTTCCTTTGTTTAGGTCA\\nTATCCCATGGGTGATTTAGCTCCGTTTCTCAGACCTAATTCAGCCTTTTTGTGCATGGAATCTCTCACAC\\nGTTCTGCTGTTGTCTCTCGTTCCCATTGCGCAAGTGTCGCAACTAAGGTAATAAACATTCTTCCGGTAGC\\nGGTTGTTGTATCAAATATCTCTGTGCTACTTTTAAATTTAACATTATATTCATCCATTATTTTTAGAATG\\nGAATGTAAGTCTGATACTGAACGAGTGAATCGATCTAATCTATAAACAAGAATAATATCAAATTGTTTTT\\nTCTTCATATCTTTTATCATTTTTTGAAAAGCAGGTCGTTCTGTATTTTTCGCACTATATCCTTCATCACA\\nGTAATCATTTACAACTACCCATCCTTGTGATTTAGCATATTGCTCCAGACGTAATTGCTGCATATCTAAT\\nGAAATACCTTCTTCAACTTGCATATCAGTAGATACGCGTCTATAAATTACACACTTCATTTGCACATACT\\nCCTTTCTTAACTAAATTTCTATATCATATGTTTTATCAAAGCAAATTAGACAAATGTATGGGTCAATCAT\\nTTGATTGACTATTTGGCCCAGTGAGAAATTCTCACTGTTCATCCAACTGAATGAAATCATATAAATCTTC\\nCATATTTACGTTAAGTTGAGAAGCGATATTCTTAGCGGTTTGATAAGACATGATTCTATCATTATTTGCA\\nTAAGAATGAACTTGTTGTTTTTTCATATCTAACTTTAATGCTAAATCTACTTGTGTTAATTTCTTCTCTT\\nTTAAAATTTCATTCAGTCGGCATTTGCCGACTACATACACTGTTTCACCGCCTAATTATTGAATGATCGG\\nACTCACACTGTATAAAAATTTTCCTATAATTCTTATATCCTCGCAGTTATTTTGTGAGTATTGTTGGTCC\\nTTAAAACTTTCGTCATGTGAACAAGGTTCTAAAATTATTAAATCTGTAAATTTATACACCTTTTTTAAAG\\nTTGCGTAATGTCCATTTACAATTACAGCTGCTATTTCTCCGTTTTGTACATCACACTGTTTTTTCAGTAT\\nGGCGTAATGTCCATTAGGAACAATTTTATTCATGGATTCACCGGTAACAACCAGTCCGAATAATTCATCA\\nATACTGTGAGTTTTATATGGAGGTGCAATTCTATCAACTACATCTTCTATAGCTTCCAATGGAACACCAG\\nCTGCTATTTTACCAATAATAGGAATTTCTTTTTTTAGTTCACACTCTATAGGTTTTTCTTGAACTAATTG\\nAAGTTCCCCATCCACAATTTCAACTTTTGTATTCTTATAAGTTGTATCAATATCAGATTTTGTTACTCCA\\nAATACAGCGGCCATTTTTTCTAAAACCCCTGAACTTGGTTTGGCTCTATAATTCATATAATCACTTAAGG\\nTACTTCTTGCAATTCCTATTTGACTAGCTAAATCAGATTGAGTCATATTATTTTTTTTTAAAAAATTCTT\\nTATGTTTCTTACTATGGTTTGTTTTTGTATATCAGTCATACCGTCACCTCCTATTCTGACTACGCTTTTT\\nAATATAACATATTACGAATTATTCGTAAAGCGTTATATCCGTATGGTTTTTTCGTATTTTTGTATTGAAA\\nTTACATAAATTTAGTAATACAATAAATCTCGAAGGAAGGGGGAAACGAAATGGATTATTTGAAAAGAACA\\nTTGAATGAACTTAGGGAAAGCGCAGGGTTCAATCAAGCAGAGCTTGCGGATATATTAGAAGTATCCCCAA\\nAAACGCTATGGTTATACGAACAAGATTCAACAAACATACCAGATGAATTAATTAAAAAGTATATGTATTT\\nGTTCGATGTTCCGTATGAGGATATATTTTTTGGTTCTAAGTACGAAAAATTCGTACAAGTGAAGAAACGT\\nGTACAAGAAAGAGCAAATAATTTAAAAAAAATTGTTTCGTAAAAATTTGCTTTAAATGGGTAGTCCTATT\\nGTCCCACGAACATATAAATGCATTGAGGTGATTGAGGATGAGTGGGGGACAAATCATTCGTGATGAAAAT\\nGGGTATGTGGTGAAAGTAATCCTTACAAAGGAACAGTGGAAGAAATTTCTAACACCGTTAATACCAGCTG\\nCACGGGAGTTAATAATTCAAAGAAAAGTGGAACAACGAAAAAAAGCAAAATGAATAATTTTTTTAATATA\\nTTTGCGAAATTTGACGATAAATATTGGTTCTACAAATTAAAGGAGAGTGAAAAGCATGAATGGAGTACTA\\nCTAGCAACACGAATTATGAAAGGGCATGAAGTTGTTAAAAAATGCGCAGAAGCAAGAAATAACCCTTTAC\\nTATTAGAAGCTATGGAATCAGAAGCAAAACGTAAGTTATACGAAATGAACTGTAAGGTTTCAAATCGAAG\\nACCAACTATGAAAAGTCAAGGGGACATTTTCAAAAAATATTGCTAGAGGAGGTGAGTTAATTGAAGGAAG\\nTAACGGTAATTTTTAAATCAGGTGCTAAAGCAAGTTTTACAGTAGAGGAATTTGCGACATTTAAAAATGG\\nATTTGGAGCTTTAACAAAAATCGAGTATACAGGTGCTAATAAGAAAGTACCCTTCCACATTGGATTAAGT\\nAATATCGATGCAATATTTGTGGAAGACATTGGTGGAAAGGAATCTACTAAAGAACCTGATCATCCAATTG\\nAAGATTTCTATGGTTGTGAAATTAAGCAAGATGATAAGTATTTTATGTTCGGACAAAATGCCGTGCTTGA\\nAGGGAATCTAACAAATTACTTAATTGCGGAACAAAATGTTGAATGCTTTCGAGCTGTATAAAAAGGAAAG\\nGGCGGTAAGGAGTGTTGGCAAATGATTTGTTTGAAGAGAAACAACATCTAGTGTTTGCTGCAATTAAACA\\nACAATTTGGAAGTATGACAAGGGCTGCGAAAATCGCAGAGTTAAACAATATGGAACTTGATGATTTAATT\\nCAATTCGGTCGTATGTATTTATGGGAGCGTTGTTTAAAGCATGATCCAGAGAGAATAGAAACGTTTAGTG\\nCATACGTAATGAGAGGTATGAAATGGGCCATGAGTGATGAACTTCACTTGAAAGGGAGCCTGTTTAAGAT\\nTAGCAGACGGATTAGTCATGAAGAAAGGAATAAAATCAACATTCATTCGATTGACTATCATCAAGAGGAG\\nGAAGAGGTACACGGATTTTATGCTGTGTCTCCTATCGATGTGGAAGAAGAGGTAACCAAACATATCGAAT\\nTTGAAGAAGTAACGAGCGTTCTTGAAGAAAAAGAAAAGTCCATCATTATGCACGTTGGTGAAGGGTATAC\\nCACAGAAGAGATTGCTGTGAAATTAGAAATGAAAAAATCAACAGTTCATACAACGAAAACACGTGCGTTT\\nAAAAAGATGAACCCAGATTATAAGCCAATAAAACAAAAATCCTTTTTCTTGGGAAAGAGGATAATAAAGA\\nGAAACCGCCAGTTGGGGCTGACGGTCTAATAAAAACACATGTTGAGGTCATTATAGCATGAATTGATTTT\\nGTGTAAAGGAGAGGCTATGTCTTGAAGAACGGTAAAAAGCCAAACAAACGTGAAAAAATTCATATTCAAT\\nCACACGATTTAAATCCACAGGATTGGTTGATTTATAAGAAAGTAAATAAGGAATTGCATTTGGTCCATCG\\nGACTACTGGTGTAACTCGTATAATTCCAAATTTATAGATTAGGAGAAAGATATAAATGGCTAATGAAATC\\nACGCCTAAATTAGTTGCTGATATAACAGATAAAAGTTTTGGCATACAGCTAATTGTTACTGGTCTTGCTC\\nACTTAGTAGAGGAAGAGGGATATACACCACATGAAGCATTAAGTATCGCTCGTTACACAGGAAATAATTG\\nTTTCCATGCGTTAGCAGAATTGAAGAAGGAGGCTAAAAAATGAACGACAAACCAATTGATGAATTAGTCG\\nCGGAAAAGGTTATGGGATGGATAAAACCACCTGAAACATCAATCCTTAAATCAATGTGGGTTTCTAAGCC\\nAATAGGTATGGTTCATCGTGAATTACCTAAATTTAGTATGAATATGAAAGATGCATGGTTAGTTGTTGAT\\nAAATTACAAGAGTCATTTAAATCAGTGGAAATATTTATTGAAGACAGAATGACAAATGTGATTATAACTG\\nAACATTTCCCAAGTGGACATCTAAAAGATAAATATCAGGGATATGAAAGATCGGCTCCTTTAGCTATTTG\\nCAAAGCTGCATTAAAAGCTGTAGGGGAGGAATGGCAGTAATGGATATTAAATCAGTTGCTAAAGCTGTAC\\nAAGTTATTCGAGAAGCACAAAATGAACATGGAATCATTAGGATTGATGGAAAGGAAGTACATCTAAAAAA\\nTGAAGTATTGGAATCATTGTTAGATGAATCTCAGACTAAGCCTTTAATACTAAGACGTGAATCCAAGTAT\\nTATCCTTATGAAGTTTCCTTTATTAATGATCATGTAACCTATTTCTCTCTTTACACTGAAGAAAGAATGA\\nAAGAGAAAATTGGAGGGATACCAAATGCTCGAAAATTCAATGGTAATCGGGAACCGTCAGGACTCCCCAT\\nTCAATAACGTGATGGATCATTGTCAAAGTTGTGGTAAAGAAATCTATTTTGATGAAGAGTACCGAGATAT\\nTGATGGTGATTACATACACGATGAAACAGATTGTATCAAACAATATGTAGAGTCTCATTCCATAAAGAAA\\nGTAGCTGGTGAGTAAAATGAACGCTGCTATTGAAGAATTAGAAAAGTCATTATATGTGGAGCAAGGGAGA\\nTTAAAAGACTATCACGGCAAGCTAGAGAGGGTAATAGAAAGAAAACCAATCCTTGAAAAGAATATCCAAG\\nATACTGAAAGCAAGATCCAGGACATTGAAGCTTCAATTTTTGTTCTGAAAAATATGGTGAAGGAGTGAAT\\nTAATTGGAAATCACAAATGGTGCTGAAATTATCAAAAGTGAAAAAGCAAAAATTATCATTTATTCAAAAC\\nCAGGTAACGGTAAAACAACGGTTGCTGGATTGTTACCAGGTAAAACATTGGTGTTTGATATCGATGGGAC\\nAAGTCAGGTGTTATCGGGTTATAAAAATGTAGATGTAGCTAAAATTGATGGTGAAAATCCACATGATAGC\\nATTTTACAATTCTTTGCACTTGCTAAAACAAACATTGGTAAGTATGACAACATCTTTATCGATAACTTAA\\nCGCATTACCAAAAGTTATGGCTGCTTAATAAAGGTGAAAAAACAAAAAGCGGTATGCCTGAATTAAAGGA\\nCTATGCTTTACTAGATAACCACCTTTTAAAGTTAGTAGAAACATTTAATTCATTAGATGCAAATGTTATT\\nTTCACAGCTTGGGAGACAACAAGAAATATCACTCATGATGATGGTCAGCAATATACACAATTCATTCCGG\\nATATTCGTGATAAAATCGTAAATCACATTATGGGAATCGTTCATGTTGTTGGTCAATTAGTGAAAAAGGC\\nAGATGGTACAAGAGGTTTTGTTTTAGAAGGTAATCAAAGTATTTTTGCTAAGAATCATTTAGATCAGCGT\\nAAAGGTTGCGTACAACAAGAATTATTAGTGTCATCCACAAACTAAAATACAGGGGGAAATAAACAATGAG\\nTTTTAAATTTAAATTTGATGAAGAAAATGTATCACAAGGGTTTGGATTGGTAGAGGAAGGTAAGTATGAA\\nGTTACAATTATTACTGCTGAAGCAAAAGAATGGCAAGGTCAATATTCTATTGGATTTGATGTGGAAATCC\\nGTTCAGATATTGAACAAAAACATCAAGGAGCAAAAATCCTATATAACACTCTATATCTAACTACTAACAT\\nTCAAGAATATGCAGAGGACACGGAAAGAAGACGTAACTCATTCTTAAAAGCTTGCGGATACACAGGTAAA\\nCAGGATTTGGAATTAAATGTTGTTGTACGTGAGATTGTAGGTAAAACGGTTTTAGCTTATGTAAAACATG\\nAAACAAATAAGGATGAAAAAACATTTGCTAAAGTTAAATTTGTGGCACCATCGAATGTAAAGCCGTCTGA\\nACCAAGTGGACCACCGATTACTGTTGGCGATGATGATTTACCATTCTAAATAACTAAATAGAGAGGTCGG\\nTTTTGTCGACTTCTCTTTTTTATACCCTAAAAAGTTAATTGGAGGGCGCAATGAAAGAAAATCCATACAA\\nTTTTAATGAAATTCCTGCTGAATTAAAGGGCCTTCCCCAGTGGATCTTATGGAAGCTTGAAACCAGAAAT\\nAATAAACAAACAAAAGTACCCTATCAAGTAGATGGAGAAATGGCCCAAGCAAATAATAGACGTACCTGGT\\nCAACATTTGCAACGGCAGTCAAATTTTATTTAGAAGGTGACTATGATGGAATCGGGTTCGTGTTTAGCAG\\nGCAGGACAATTACATCGGAATCGATATTGATAAGTGTGTTACGGACGGAAAAACAAATGCTTTTGCAACG\\nGAAATTATCGATACATTAGATAGTTATACGGAGTTTTCACCTTCAGGAAAAGGTATCCACATCATTATCA\\nAAGGGAACCTTCCACAATCTGTTTTAGGTACAGGACGAAAAAATACAAAGCACGGTTTAGAAATTTACTC\\nATACGGACGTTTCTTTACCTTTACTGGAAATCGTGAGAATTCCAATGATGTATACGAGCGAACGGATGAA\\nCTAGCTGAAGTATTTGAAAAATATTTTGATGATAGCGACATTCAAGGTCGTGTAAATTTAGCAGAGTTTG\\nAAAAAGATGAAATCAAAATTTCGAACGATGCTCTATGGGAAAGGATGTTTAGAAGTAAGAATGGTGATGA\\nAATTCGCTCGTTATACAATGGCAGCTTAATAAATGATGATCATTCAGCAAGTGACCTTTCTCTATGTAAT\\nCATTTAGCATTTTGGACAGGGAAATCAGCAATTCGAATGGACTCCATGTTCCGTGAGTCAAGCCTTATAC\\nGTGATAAATGGGACGTTATTCATTTTAGCGATACAAATGAAACATACGGTGAAAGAACGATAGCAACAGC\\nCATTTCATCTACTTCCACAACTATTTTAGATAACAAACAGCAATTCGAAGAATTTTCTTTTGATTTCATG\\nAATGAAGATGCGGTTGAAGTTGTGGAGGACAAACCGAAAAAGAAATTCCGTTTAACTGAATTAGGAAACG\\nCTGAACGTATCGCATATGAATATGGCCATGTAATCAAATATGTTAGCGATATTGGCTGGTACATATGGGA\\nCGGTAAACGCTGGAAGTTGGACACGAAAAAAGAGATTGAAAGAATTACAGCAAAAGTACTTAGAAGTCTT\\nTATAAATCAGAAGATGAATTAGAAACAAAATGGGCTCGAATGTGTGAACGGAGAAATATTCGTATGAATA\\nGCATTAAGGATCTTATGCCATTGGTTCCAGGTGAGCGTGAGGACTTTGATAAGTATAAATACTTGTTCAA\\nTGTTGAAAATGGCATTGTTGATTTAAAAACAGGAAAGTTGCAGCAACATGATCGGGAACTTGGTTTAACT\\nAAAATTACTAATATTTCATTTGATGAAAATGCAAAATGTCCAGAGTGGCTTAATTTCTTAGATCAAATTT\\nTCCAAGGTGATAAGGAACTAACTGAATACATGCAGCGGTTAATTGGTTACTCACTAACAGGGGAAATCAC\\nGGAGCAAATAATGGTCTTCTTAATTGGTGGAGGTTCCAACGGAAAATCGACCTTTATTAATACCATTAAG\\nGACCTTTTGGGTGAATACGGTAAACAAGCAAAATCAGATACTTTCATCAAAAAGAAAGAAACTGGTGCCA\\nATAATGATATTGCTAGATTAGTAGGGGCACGCTTTGTATCTGCAATCGAAAGTGAAGAGGGTGAACAACT\\nCTCAGAAGCTTTTGTAAAACAAATAACAGGCGGTGAGCCAGTATTAGCACGTTTCCTTAGACAAGAGTAT\\nTTTGAATTCATACCAGAGTTTAAAGTGTTCTTTACAACAAACCATAAACCAGTAATTAAAGGTGTAGATG\\nAAGGTATTTGGAGACGTATCCGTTTAGTTCCATTTAACCTGCAGCTACCAAAAGAGAAACGTGATAAGAA\\nATTACCAGAGAAAATTAGCTTAGAAATGCCAGGAATCCTGAATTGGGCAATTGAGGGTTGCTTGAAGTGG\\nCGGAAGTCGGGACTAAACGATCCAGCAATTGTTATGAAAGCAACAGGTGATTATAAAGAGGAAATGGATA\\nTTCTTGGTCCGTTCATGTTTGAATGTTGTTTTAAAAGAGAGGATGTCCAAATTGAAGCAAAAGAATTATA\\nTGAAGTTTATGCGAATTGGTGTTTTAGAAATGGTGAACATCAATTAAAAAATAGAGCCTTTTACCGAATT\\nTTAGAATCCCAAGGATTCAAAAGAGAACGTGGCAGCAAAAACAAGTATTACATCAAAGGTGTTACTCTAA\\nCCGACCGAAAAAATACTTTTAAGCAGCAAAAGTTACTGAATTTCGATGAAAATAGCAAAAGTGTTACTAA\\nAAGTAACCCATTTAAAATCACTTAAAACCCTTGATACATAAGGGCTCAAGATACTTTTTATATTCCTTTT\\nGTTACTTTTGTTACTAAAAAATACTATAAACAAAAAATAAATATATATATAAGTATTCTATTAGGAGCTT\\nCTTTGAACTTTTTAGGTAACCTTAGTAACCCGAAAGTAGCATGAGCCGTTGGGGCTGTAAGGCTCAAGGC\\nGTGTTACTAAATGAAAAATAAGAGTAATTTATGGTGTTTTTTAAGTAAAAAACGGTTATTTAAGTAACAC\\nACTTAGTAACGGAGGTTGTATTAAATTGGAAAAACATTATAAAGAACACGGGCTAGAAGATTTTTGGAAA\\nTTTAAAATTATACGATCCAAGAAAAATGAAATTGGTTGTTCAGAAACCTATGAAAAATATAAAAAATGGT\\nGCTATGAAAACAATACTATTCCGAATAAAAGAATTACATTTTTAAGATTCTTAGAAACAAAAGGGTTTGA\\nAATTGTGAAGAGCAAAAAAGAACCATTGTATTTTAAAGGAATGAAGATTAAATGGTGAAAGTTTTATTAA\\nTTTTAAGTGCGATTTGGAAATCAGGTGCAGATATCTATCTTGATAAAAAGGATAATCAAGTTGCGATAAA\\nAAAACAAAATTTAATTCCAGCGGAAGTAATGAAAGCCGCTGAACAAAACTATCAAGCTATTTATGATTGG\\nTTTCAATCTTGGAAAGATGAGAGTGCGGAGAAAATTACGTTAATGAAGATATTTCATCATTTTTGTGGGT\\nGGAAACATAATCAAAAATTACACAATTGGTTAGTTGAAGAAGAAGATTCATTGCAACTGTTTTATGAGTG\\nGACGATTGTCCTTGCTAATAATGGTTGGACAGATGTTTATGAGGATCATCGTCAGTTTGAAAATGATGAA\\nTCAAATGCAATGGCAAGAAAGATATATGAACGTGCGGTTTTATATGCAAGGAAAGGGGCATGAAAATGAG\\nAGAGATAAAATTCCGTGCTTGGGATGGAACGAGTTGGGTTTATAGCGAATGTATATCAAAAGATGGTATT\\nAATTGGTGGATATTAAATAATGAAGATGATAATTGGTTGACGTGTTTAGATCCACAGCAATATACAGGTT\\nTAAAAGACAAGAACGGTAAGGAGATTTATGAAGGAGATATTACAAAAGACAAGTTTGGTAATCTTGATGT\\nTATTTGTTGGATTAATAGTTCAGGTGCATATGCGACTGTGTCGATTAATTTGTATTTAGACGGAGAGTAT\\nGAACATACGGTTGTTGATGAATTTGGAACGGATTGTTTCTTTGAGAATAATGTTCCTGGTGATTTTTTAG\\nAAGTAATCGGAAATATCTACGAAAACCCAGGGTTACTGGAGGATTCAAAATGATTCGTTTCCATTACACA\\nGATAAAGAAATAGAAAAAATCCTTAAAACACTCACTATCGTTATCGATACTCGTGAAAATGTAAATGACC\\nACATTCGTGATTACTTATATCAAAAGGGCATCCCAATTAAAAATCAAAAATTAGATACCGGTGATTATGG\\nTTGCATGATTCCCAAAAATGAAGAGTTAGGAATACCACGTGATATTTATTTAGATCGTCGGATAGAAAGA\\nAAAATGAGTATCGATGAAATTACAAGTAACCTACAAAAAGATACGCAAACAAGATTTGAAAATGAATTGA\\nTTCGATCGAAGGATATTCCATTCACTTTAATTGTGGAAGATCAACGTGGTTACGAGAAAATACTTAAAGG\\nTGATTATAAATCAAGATATAACCCATTGGCATTACTCGGTAGGCTTAATACTTTTAAAGCAAAATATGAT\\nTTTGAAATAGTCTATCTAGATAAAAAGTTTGTTGGTAATTGGATATATTATGTCCTTTATTATCATGCAA\\nAACATTATCTTAAAACAGGTGCATTTTAAGTTCAGAAACGTACAGAAATAACAGAAAAACTTTAGTTCTA\\nATATCAATTTAATATAAAAGGAGTCGGAAGACATGACAAAGGTAAAATTGAACGTATTATTCAAGAAAAT\\nGCAAAAGGATGATAAAAAGGAAGTTTTGATGTTCCACGTATTAAGTGATGAATTACCACATGCTGATGAG\\nTTATTGAAGATGCCAGGTACTATTGTTTATCTAACTGTGGAAAAAAGCGATGTTGAAGCAATTGGTGCTG\\nAATTTGTTTCTATTCAACGTGATAGTAAGAAAACCGTTCTTAAATTCAATGTAAAAGGCGATACGAAAGA\\nTAAAATTAATAAACTTTATCCATTCGCTGGTGAAAATGTTTCTATTACTCTAGAGCCTTCGCAAATGTCG\\nATTGATGAGTTTTACGAAGAACAACATGAAGGAGTGGAGTATAACGTTAATCCTGATGGAACAACTGATG\\nTTGCTCCGGGGCAATTGAAGATTGTTGATGAAGAAACGATTGCTGAATAAAAATTTATCCTGGGCTTCGG\\nCTCAGGATATTAATACATTTTGAATTTTGTTAAGAAATGAGGGTAACTTTTGAAAATTATAAAAGATGAT\\nAAGAAGTGCCAAACATGTATTTTCTATGGTTTATGCACGAAAGCGCACTTACCACACTGCCTAGGAAATG\\nATTACTTCAAAGACAGTGTCCAAAAAGAAAAATAAAACTAAAGCTAAAGCGTTACTTTAATCGGAAATGG\\nCAGGTAATTGACCAAATCACCTGCCATTTGCCTAAACAGTCCGGAGGGGTAAAGCTCCGTTTTGAAAGAG\\nTGTAGCCGACTCGTAGATAGTATGTGTAATGTAAAAAAGATTATTCGTATATCACACGGGATATGAAAAG\\nGAGAATGAAAAATGTCTAACAAATTTGATAAGGACTTTGAAGCAATTACGAATAATGGTGAATTAACGAA\\nAGAAGGAACAGAATTTATAGAAGCTGTAAAGCAATTCGTCGGTACGCAATATGATTCAGAGGATTTAGCG\\nAAATTAATGGTATTAATTATGGCTGCTTTAGATGTGGATGACAATGCTTTTAATACAGCGATATCCGCTT\\nTATATCAAACTGCAATAGAAGTGCAAACAGGTATCAATCTGAATGAATTACTGGATTTAGTGACAAAAGG\\nTGAACCAGGCTTAACTCATTAGGAGAACCCAATGTATTCGACGAGTTTCGACATGAAAACGACCGTCAGA\\nAACATAGTGATTTGAAGTTTTATTTCTTTCTGAATACAAATAGGTGCACAAGTGTTAAAACGTCTTAGAA\\nAGGAAAATAAACGTGTTTTATGAGATGTATTGTTTTTTATAGAAAGTAGGTGAATCATCATTTGTTTGAC\\nTGGCTAAAAGACTATCAGAAATTAGAAGAAGACATTGAGTACTTAGATTACAACTTAGATAAAACAAAAG\\nCAGAATTAAAACGCTGGGTCAGTGGTGATTTGCGAGAGGTACGTTTAACTGCTGAATCGGAAGGTGCAAA\\nGGTAGAAGAACGTATAGAAGCAATTGAATATGAGTTAGCGCACAAGATGAATGCAATGCAGGATGTATTG\\nAAATTGATAAATAGGTTCAAAGGTTTAGAAAATAAAATGTTAAAAATGAAATATGTGGACGGAATGACAT\\nTAGAAGAAATAGCTGAGAATATGAATTATAGTTCTAGTTATATCTATAAGAAACATGCTGAAATAATAAG\\nGAGAATAAAGTTTGCTGAAGAACTTGCACTTTACTGACACCCAGTTTTATGAATGTTAACTCTTGAAGAT\\nATCGATTATAGTAATAACATAAGAAATTGACGAAAGGGCAACTGGTGCACAGTTGCTCTTTTTAATTAAA\\nCAAACCATATCCATATAATAATGATAACAGCAAAGATAATGATTAGTATTTGTGAGAATTTCATAACATG\\nCTCCTTTTAAACTATAGTGTTTGCAAAGGATTGAAGAGGCATTCCTTATGGAGTGTTTTTTATTATGTAA\\nAAATTATATAGGTGGTGTAGAGATGACTTTAACGTTGCATAATGGAGATTTGAATAAGTTAGCAAGAGAT\\nACTTCACAGGACAGTATCATCTTGAGAGTTGGTGAACAAGAAATGGTATCTCTGAAAAGCAATGGAGATA\\nTCTATGTTAAAGGTAAGCTTGTTGAAAACGATAAAGAAGTTGTAGATGGCATGAGAGAGTTATTGATGTT\\nATCTAGGAAAAGGTAAGCGCAAACGTGTTGCATTTTATAAGGATGGTGAAAAGAAGATGTTCTCATATAA\\nAAAACGTATTGAATCCTTAGATGAACTTCATAAAGTTATTGATGCATTAGAAACGTTAAAGAAGGAGTAT\\nCAGATTATCAAAAAGATAGAATGGTCGGAACCTAAATCACCTCTTCCTAAATTACCAAAGAATGTTTGGT\\nATGTTGAAGAAGTTGATACATCTAAAATCTTTTTTACTGATGCTGATGCAATAGTTAAATTAGTTTGTAA\\nAAATTGTGGAATATCGTGTAGAGGGAAAAGAAATCTATTAGAAGGAATGAGTTGTATTTATTGCTTTAAT\\nCACAATACAACAATAGTTTCTTTAGATAAGGAGTTTGAATGTAAATGAAAGTAATTATGGGTGAAGAACC\\nTTTATTACCTAATGGAAAAAGAAATGGAGAAGCTGTTAGAAGTATGCTTGATAAAATTAGGTCGCAAGAA\\nCAGAAAGATAAGGAGAGTGAATGCAAATGATTACTGAAATTAGAAAAACAATATCTGGTACAGAGTATTG\\nGGATAACAAAGAAAAACGAAGTCTATTTGTTCCTACAGATGAAGAACCAGGATTCGAAGTAACTGTTAAT\\nCCTGAGAGTATGATCTTAGGCATGGACATATCAAGTGAACCTGATAAGACAGTAGTTAATTTAAATGGTA\\nTGACAGTGAAACAATTACATGAATATGCTGCATCGATTAATGTTGAGATTCCAGCCGATGTTAAAAAGAA\\nAGAAGACATCATTGATTTACTATCATGAAGTACTGTGCTGAACAAGGCTGCAAGACATTAATCGATAAAG\\nGACGATACTGTCTCAATCATAAACGTAAACAGAAGAAGACAGTTGTGTATTCAAAGAACAGATCATTCTA\\nTCGTACAAAAGCCTGGCAAGATTTAAAGTCATTCTGTTATCAAAGAGACAAAGGATTGTGTCAACGATGT\\nGGAAGGTTTGTGTTTGGTAAGCAAGCACATCATCATCATATTGTTCCAATTAAAATCAATCCTTCATTAA\\nGATTAGATCCAGATAATATCGATACACTTTGTTCTAAGTGTCATCCGATTGTAGAAAGAGAAACAAATGA\\nAAAATACCAGGAAAAGAAAAAGTTCGACTGGAAACTATAAGCCCCCCCTATCAAAAAAAGAAAAGCTGGC\\nCTTATGGGGGGATAGGGAGTGGGGGTGCAAACGCGCACCTCAAAATGGTTTTTTGAAAAAAATTTGTTTT\\nTTTTAGGTGGTGATTTAAGGAATGGCCAGAAAATCGAAGGTCGTAATTGAAGCTGAAAAGAAAAAAGAAT\\nTAGAAGCGCAGCGTATTATGGATGTTTTGGTTGAAGCCGGAACTTATTCGCCAGCGCTCGATCCATTAAT\\nTGAAGTTTATCTTGATGCAGTTGAGATATACAGCGTCAAATATGGATTGTGGAAGAATTCTAATTTTCCA\\nACAGTCCAAAAAACAAAGAATGTAAATGGTGATGTGAAAGAATCAAAGCATCCATTAGCTCAACAAGTTG\\nAAGTTTGGTCTAAGCAAAAAGCGAAATATTTGGGGCAATTAGGACTGGACGGAAAGAACAAAGATTTACT\\nTAAAAAAAGTGGGGTTCTTCTCGAAAAAGGAAAAAATGAAAAAGAGCCCACGGAGTCTACTGATAACAAC\\nAAATTATTGCAATTTAGGCAGAGGTTAAATAGATGATTGATTTTGAAACAAATTACGCTGATATATTCGT\\nTTCGGAAGTAGATGCAGCCCCGCACTTATATCCTGATTCAATTAAATTAGCAATCAAACGATATAAGAAA\\nTGGAAGAAACGAAAAGATATTTGGTTTGATGTTGAAAAAGCAAATGCTATGATTTATTTCACAGAAACAT\\nTCTTAAAACATGCAAAAGGAAAATGGGCAGGACAGCCGTTAATTTTAGAATCCTGGCAAAAGTTCTACTT\\nTGCTAACATTTATGGATGGCAAAAATATAATGAAGATGGTAAAGCGGTGCGAGTGATTCGTACGGCTTAT\\nTTGCAGGTTCCAAAGAAAAACGGAAAAACAATCATGGGCGGTTCACCTGTTATTTATGCGATGTACGGTG\\nAAGGTGTAAAAGGCGCAGATTGTTATATTTCCGCTAATACTTTTGAACAATGTCAAAATGCAGCTGGACC\\nAATTGCATTAACTATTGAAAATAGTCCAGATTTACGGCCAGATACACGTATCTATAAAGGCAAAGAAGAC\\nACGATTAAATCAATTAAATACACATTTGTGGAGGATGATATAAAATATGCAAATGTAATTAAGGTTTTAA\\nCGAAAGATAACGCTGGTAATGAAGGTAAAAACCCGTATATTAATTATTTTGATGAAGTTCATGCTCAAAT\\nGGACCGTGAACAATATGATAACTTACGTTCAGCACAAATTGCCCAAGAAGAACCACTCAACATCATCACT\\nTCCACAGCAGGGAAGAATACCGGCTCGCTTGGAACTCAAATTTATACCTATGCAAAAGAAGTTTTGGATA\\nAGGATAAAGATGATTCTTGGTTCATGATGATCTATGAGCCGAATAAAAAGTTTGATTGGGAAGACCGTGA\\nTGTTTGGCGAATGGTTAACCCGAACATGGATGTATCAGTTAACATGGAGTTTCTTGAAAATGCATTTAAA\\nGAAGCTCAAAACAACAGCTTTAATAAGGCGGAGTTCTTATCAAAGCATTTAGATGTATTTGTTAACTATG\\nCTGAAACATATTTTGATAAAGACCAATTGGATAAAATGCTTGTTGATGATTTAGGAGATATTGAAGGTTT\\nAACTTGTGTTATCGGTGTGGATTTATCAAGACGTACCGATTTAACTTGCGTATCGTTAAATATTCCAACA\\nTACGATGAGGAAGGTCTTTCATTGTTAAAAGTAAAACAAATGTATTTTATTCCAGAGTTTGGAATTGAAG\\nATAAAGAACAGCAAAGAAATGTTCCATATCGGGAATTAGCTGAAAAAGAATTTGTGACGATTTGTCCTGG\\nTAAAACGGTTGACGAAGAAATGGTCAATCAGTACGTTGAATGGGTATTTGAGAACTTTGATTTACGTCAA\\nATTAATTATGATCCAGCGCTTGCTGAAAAGCTTGTTGAGAAGTGGGAAATGCTCGGTATTCAATGTGTGG\\nAAGTTCCACAGTATCCAACTCATATGAATGAACCATTTGATGATTTTGAAATCTTATTGCTTCAGGACCG\\nAATTAAAACTGATAATCAATTATTAATTTATTGTGCAAGCAATGCAAAAGTAATAACTAATATTAATAAT\\nTTAAAAACACCATCTAAACGAAAATCACCGGAGCATATCGATGGGTTTGTGGCCATGTTAATTGGTCATA\\nAAGAAACGTTGAATATGATGGAAGATGCTGTTCCAGATGAAAATTATGATGAATATTTAGATGATATTTA\\nTCGATAGAAAGGCGGTGAGGAATTGGGTTTAAAGGATAGATTTTCAAGTTTTTTACTTAAACAAGCTGAA\\nAAGCGTGGTTTATTCGAAGACATTTTCAATAATGTTGTTCGCTATGGTGGTAGATATGCAGGCGATGATA\\nATATCTTGGAATCTAGTGATGTTTATGAATTACTACAAGATATAAGTAATCAAATGATGTTGGCTGAGAT\\nTGTTGTGGAAGAAAAAGACGGTAAGGAAATTAAAAATGATTCAGCTCTTAAGGTTTTAAAGAATCCAAAC\\nAATTATCTTACACAGTCTGAATTCATTAAGTTAATGACTAATACCTATTTACTTCAAGGTGAAGTCTTTC\\nCAGTGTTGGATGGTGACCAATTACATTTAGCATCTAATGTTTATACAGAATTGGATGATAGATTGATAGA\\nACATTTCAAAGTGAATGGAGAAGAAATTTCATCATTTATGATTCGACATGTGAAGAATATTGGTGCCGAT\\nCATCTAAAAGGTACAGGCATTCTTGATTTAGGTAAGGATACACTTGAAGGTGTTATGTCAGCTGAGAAAA\\nCTTTAACTGATAAGTATAAAAAAGGTGGTTTATTAGCATTCTTACTTAAGCTAGATGCTCATATTAATCC\\nACAAAATGGAGCGCAGTCCAAATTAATTAAAAAGATTTTAGATCAATTGGAATCCATCGATGATGCAAGG\\nTCAGTTAAAATGATTCCACTCGGAAAAGGATATTCAATAGAGACGCTTAAAAGCCCGTTAGACGATGAAA\\nAGACCCTGGCCTATCTAAACGTATACAAAAAGGATTTAGGTAAGTTTTTAGGCGTAAATGTGGACACATA\\nTACGGCCTTGATTAAGGAAGACCTTGAGCAAGCAATGATGTATTTGCATAACAAGGCAGTTAGACCGATA\\nATGAAAAACTTTGAAGACCATTTGAGTCTTCTTTTTTTCGGAAAAAATTCGGATAAACGTATTAAATTCA\\nAGATAAATATCCTTGATTTTGTTACTTATAGCATGAAAACAAACATTGCTTACAACATTGTTCGAACTGG\\nTATTACTTCACCAGATAATGTTGCGGATATGCTTGGATTCCCTATGCAAAATACACCTGAGTCACAAGCG\\nATTTATATTTCAAACGACTTATCAAAAATTGGTGAGAAACAAGCTACAGATGATTCACTGAAGGGAGGTG\\nATGGAAATGGCAAAGACAAAGGAAACACGGACATTTGACATCACCAAATTAAGTACCAGGGATGCTACGG\\nAAGAACAACCTTCCAAGATAACGGGTTATGCAGCCGTATTTAATTCAAAGACAACTATTGGTGGCTGGTT\\nTGATGAAGTTATTGAACCTGGTGCATTTGCTCGTTCTCTTTCTGAGAATGGTGATATTAGAGCGTTATTC\\nAATCACAATTGGGATAATGTCCTAGGGAGAACAAAAAGCGGTACATTGAGACTAGAAGAGGATGAAAAAG\\nGACTTAAATTCGAAATTGAATTACCAAATACATCTGTTGGTCGAGATTTAGCTGAAAGTATGTCCAGGGG\\nAGATATTAACCAATGCTCATTTGGATTTTGGATAACAGAAGAGAATTGGGATTACAGTGTTGAACCAGCA\\nTTAAGGACCATTAAAGAAGTAGAACTTTATGAAATATCGGTTGTTTCAATACCAGCTTATGACGATACGG\\nAAGTATCTTTAGTTCGCAGTAAAGAGATTGGTAAAGAAATAGAACAACGAATGAAAATGATTAAACAAAT\\nAAATCAAATCTTGGGGGAAAAGTAAAATGAACAAACAATTATTATTAGCATTACAAAAACGAAGCAATGA\\nAAGATTAGTGGAATTACGTACACAGGTTGAGAATCCTGAATTACGTGCTGAAGACTTACCAGCAATTCAA\\nGAAGAAATCGATGAAATTAACAAGCAATTGCAAGAAGTTGCGGATGCTTTAGCAAATCTTGAAGATGATG\\nGTGGAGGTGAAGAAGGAAACGAAGATAATGAAGAAGGTGATGAGGGATCTGGTACTGAAGGTTCTGGAGA\\nAGGCGGAGAAGGGCGTGCTAGCAATACTGAAGGTGGAGAAAATAGAAATGGATTAACGCCTGAACAAAGA\\nAGTGCAGCAATGGCAGCTATTGCAACAGGTCTTTCTACTCGAGGCCATAAATCTACTAAAAAGAAAGAGA\\nAAGAAATTCGTTCGGCATTTGCTAACTTTGTAGTTGGGAAAATTACAGAAGCTGAAGCGCGTTCTCTTGG\\nTATTGAAGCTGGTAATGGTTCAGTAACTGTGCCAGAAGTTATTGCGAGCGAAATCATTACTTATGCTCAA\\nGAAGAGAACTTACTACGTAAATATGGTTCAGTTCATAAAACAGCAGGTGATATGAAATATCCTGTTCTTG\\nTTAAGAAAGCAGATGCAAATGTACGTAAGAAGGAACGTAAAGATAGTGATGAAATCGTAGCAACAGATAT\\nTGAATTTGATGAAGTGTTACTTGATCCAGCTGAGTTTGATGCACTTGCTACTGTTACTAAAAAGTTATTA\\nAAAATGACAGGTGCTCCAATTGAGCAAATCGTTGTGGACGAGCTGAAAAAGGCTTATGTTCGTAAAGAAA\\nTTAACTACATGTTCAATGGCGATGATGTAGGTAATGAAAACCCAGGTGCGTTAGCAAAAAAAGCGGTAGC\\nGTTTAAGCCTTCTAATCCAGTTGATTTAAAAGCAAAAGATGCAGGGCAATTAATGTATGATGCATTAGTT\\nGAAATGAAAAATACACCTGTTACAGAAGTAATGAAAAAAGGACGTTGGATTATTAACCGTGCAGCATTAA\\nCAGCAATTGAAAAAATGAAAACAACTGATGGATTCCCATTACTACGTCCAATGACACAAGTAGAAGGTGG\\nTATTGGAAATACGCTTATTGGCTATCCTGTGGACTTTACTGATGCGGCAGACGTAAAAGGAAAACCAGAC\\nGTTCCAGTTTTATATTTTGGTGATATTTCAGCGTTCCATATTCAAGATGTAATTGGCGCTATGGAATTAC\\nAAAAATTGATTGAAAAATTTGCTGGTACAAACAAAGTTGGATTCCAAATTTACAACTTATTAGATGGTCA\\nATTAGTTTATTCTCCATTTGAGCCAGCTGTGTATCGTTTTGAAGTGCAAGCTACAACTGAAGGTAAATAG\\nGTTATGAATGATTTAATTGAGAAATTAAAATCTCATATTCATTGGGAAGAGGGTATGGATGAAACCATGC\\nTCTCTTTTTATATCACTCAAGCAAGGACTTATGTAAAGAATGCGACAGGCAAACAGACCGAATATCTAAT\\nTATTATGGTCGCCGGCATTTTCTATGATTACAGGGTCGCTGAAAAAGAATTAGAACAAGCTCTTGATGCC\\nTTAACACCAATGTTTGTCCAGGAGGTTTATGCTGATGAAGAGAAAGACGAATAAACTCAAATGGATGGGT\\nGAGCTACTTAAATTAGGAGAAACAATTGATCCGGAAAATGACCGAGTTGTTATGGGATATCCATTAGAAC\\nGGAAAATTCGTTATAACAACATTGGAGTTACGGCTACTGATAAATTTACAACGAAAGATACGAATGAAAT\\nTGTAAAGAAAATTGAAGTTCGTATTGATCGAGATATTGAAAACGATCAAAAGGATTATCGTGTAAAAGTT\\nGGTGGCCGTATTTATAACATTGAGCGCATTTATGTGAAAGAAGAAGATCGATTGATGGAGGTGTCACTAT\\nCGTATGCAAATTAGTTTTGAACAGTTGCGAAGCCTTATGAAGAAATCTGGTATTCCAGTTTCTCGTGATA\\nGTGCTCCTACAGGGATTGATTACCCTTATATTGTGTATGAATTTGTGAATGAGCAACAGAAAAGAGCTTC\\nTAATAAGGTTCTAAAAGATATGCCACTTTATCAAATTGCTGTTATTACAAATGGAACTGAAAAAGATTAT\\nGAGCCGTTAAAGGCTGTTTTTAACGAAGCAGGCGTGTCTTATTCTCAATTTGATGGAATGGGTTATGACG\\nAGAATGATGACACTATCACGCAGTTTATAACGTATGTGAGGTGTATCCAGTAATGGCTTCAAATAACAAT\\nGGTTTTGCTGAAGCTTTAGAAGATATTAATACGCTATTACGATTGAATAAAAAGGTCGAACTGGATGTAT\\nTGGACGAAGCAGCGAAGTATTTTGCGAGTAAATTAAAACCAAAAATTAAAGCATCCAGTAAAAACAAGCG\\nGACACATTTAAGGGATAGCCTAAAGATTGTTGTGAAAGATGATCGTGTATCTGTGGAATTTAAAGATGAA\\nGCTTGGTATTGGTACTTAGTTGAACATGGCCATAAAAAAGCAAATGGTAAGGGACGTGTGAAAGGAAAAC\\nACTTTGTTCAAAATACCTTTGATGCAGAAGGTGACAAAATCGCTGATATTATGGCACAAAAAATAATTGA\\nTAGAATGTGAGGATGATATACATGACAGTTGAAAATAAAGAAATTCAATATTCTGTAGGGATCGAAGATT\\nTATATCTGTGCTTGATGAAGGGAAATGAAACTTCTAGTGCACTACCAACTTATGAGGATATCGTTTATAG\\nACAAACGAATATTTCTGATTTAACGATTTCCACTACTTCTACTAATTTTACAAAGTGGGCATCTAACAAA\\nAAAATTATTAACATTGTCAAAAATACAGCGTTTGGATTAGCTTTTAATCTTGCTGGTCTAAATCGTGAAG\\nTAAAAGATAAAATCTTTGCTAAAACACGTAAAAAAGGTGTGTCTTTTGAAACAGCGAAGGCGAAGGCGTA\\nTCCAAAGTTCGCAGTAGGGGTTGTATTCCCTTTAAATGATGGAACAAAAATATTACGTTGGTACCCAAAA\\nTGTACAGTTGCTCCAGTAGAGGAATCTTGGAAAACACAAGGTGATGAAATGACTGTGGATGACATTGCTT\\nACACAATTACAGCAGATCCATTGTTATTTAATGATGTAACACAAGCTGAATTGGATACTGGTGATCCAGA\\nGGCAAAAGGAATTAAAGCTGAAGATTTCCTAAAACAAGTCATTTGTGATGAATCTCAACTAGCGCAGCTA\\nGGTGGAACGACTCAAACAGGTAAATAAGGAGGGTGACTATGGCACGTTTAAGTGATTTAGTTAACGTTAA\\nTATAACTAGGAATAGCATTAAGATACAGGGTGTCTCAATCCCTGTTATTTTCACTTTTGAATCTTTTCCT\\nTATGTGGAAGAAGCATTTGGAACACCTTATCATGAATTTGAAAAAGAAATGAATGATATGTTAAGGAAAG\\nGTCAATTTAGCCTGGGAGAAAATGAAGCGAAATTGATGCGTGCATTAATTTATGCGATGGTACGTAGTGG\\nTGGTACGGAATGTACATTAGATGAATTGAAAGGTGCTATTCCTATGAATGAATTACCTGATATTTTCATC\\nGTTGTATACGAAATTTTCAGTGGCCAAACTTTCCAGAATTCTGATATGGAGAAGTTGAAGCAAGAAAAAA\\nAGTAAAAAACATACTGACTAAAAACGAGGAATCTCAGTCCGAATTGGACTGGGATTTTTATTTTTATGTT\\nGGTAATACGTTGCTTGGTTTAAGTATGAATGACTTCTGGAAAATCACACCTGCACATTTTTTAAAGCAAT\\nTCATCATGCATCTCAGATACAACAATCCGGATGCGTTACATGAGCAGAAAACGAAACAAATTTACACGCT\\nAGATCAAACACCATTCCTATAAGAAATGAGGTGAGAAAATGCCTGGGAATAGTAAAGAAAGAAACGTTGT\\nTCTTAATTTTAAAATGGATGGCCAAGTTCAGTATGCAAATACATTGAAACAAATCAATATGGTTATGAAT\\nAATGCAGCGAAAGAATATAAAAATCATATTGCAGCAATGGGCCAAGATGCGACGATGACTGATAAACTTC\\nTTGCTGAAAAGAAGAAGCTTGAAATTCAAATGGAAGCAGCTAAAAAGCGTACAGCTATGTTGCGTTCTGA\\nATATCAAGCGATGTCCAAGGACACAAGTACAACCGCTGAACAACTCAATAAAATGTATGGAAAGTTACTT\\nGATGCAGAACGTGCTGAAACTACTCTTAATAATGCAATGAAAAGAGTGAATGAAGGTCTTTCAGAGCAAG\\nCCATTGAAGCACGAGAAGCACGTGGAGACATGGAGAAACTTGAAGCTAATACTAAACAACTAGAAGCTGA\\nACAAAAGCGACTAACAAGCTCGTTTAAGCTTCAAAATGCCGAACTAGGAGCGAATGCTAGTGAAGCTGAT\\nAAGTTGGAATTAGCGCAAAAACAATTACGTCAGCAAATGGAAATGACAGATAGAGTCGTCCACAATTTAG\\nAACAACAGTTAAGTGCAGCAAAGCGTGTATATGGTGAGAATTCCACAGAAGTACAGCAACTTGAGACGAA\\nGCTAAACCAAGCTAAAACCACGTTGAAGCAGTTTGAGAATTCATTACAGAGTGTTGGTCGAAGTGGAGAT\\nCAAGCAGCAGATGGTATGGAGAAATTAGGAAAGAAGTTAGACTTGCACAATATGATGGAAGCTGTCCAAA\\nTGCTACAAGGAGTATCACAACAGTTAATTGAACTTGGTAAAGCTACAGTGGGTATAGCGATAGATTTTGA\\nTAGGTCACAAAGGAAAATACAATCCTCATTAGGGCTAACTCAAAAGGGTGCAGAGAATCTTGGCAAGATT\\nTCAAAAGATGTGTGGAAAAAGGGATTTGGTGAAAGCCTTGAAGAGGTCGATAATTCACTGATTAAAGTCT\\nATCAAAATATGCGTGATGTTCCACATGAAGAATTACAAGGGGCATCAGAGAATGTTTTAACATTAGCTAA\\nAGTTTATGATGTGGACTTAAATGAAGCAACTCGTGGCGCAGGACAATTAATGTCTCAATTTGGTTTATCT\\nACACAACAAACATTTGATTTATTGGCAGCAGGTGCTCAAGCTGGGTTGAACTATTCTGATGAACTCTTTG\\nACAATCTTTCAGAGTATGCACCGTTATTCAAACAAGCGGGTTTTAGTGCGGATGAAATGTTTACCATTCT\\nTGCGAATGGAACCGCAAATGGATCGTATAACTTGGATTACATTAATGACCTTGTAAAAGAGTTTGGTATC\\nCGTGTACAAGATGGTTCTAAAGGTGTATCAGAAGGATTCGGTGATTTATCAGAAGAGACACAAAAAGTAT\\nGGGAATCATTCAATGAAGGTAAGGGAACCGCGGCTGCTGTATTTAATGCTGTATTAGGTGACTTACGTAA\\nAATGGATGACAAAGTAAAGGCAAACCAGATTGGTGTTGCTCTATTCGGTACCAAATGGGAAGACATGGGG\\nGCAGACGCCGTACTAAGTTTAAATGATGTGAATGGTGGTCTGGGTGATGTAAATGGCCGTATGGACGAAA\\nTGAAAAAACTGCAAGAAGAATCACTGGGCCAAAAATTCCAGAGCGCATTAAGGGAAACTCAAACAGCACT\\nTGAGCCTTTAGGAAAACAACTTGCGGATCTTGCAGCAGATGTTCTCCCTAAAGCTGCAAAAGGACTATCA\\nGACCTTGCTGAATGGTTTTCCAAGTTACCAGAACCTGTCCGAAACTTTGTTGCTATTTCTGCCGGATTAA\\nCGATTGCTATTACTGCAATTGGCGTTGCTATTGGTGTTTTAACTTTTGCAGTTGGTGCTTTGAATATTGC\\nATTAGGACCTGTAATATTAGCGATTTTGGGAATTTCCGCCGCAATAACTATTGCTATAGCGATAGTGAAA\\nAATTGGGGTGCTATAACCGATTGGCTTTCCGAAAAGTGGACCCAATTTAAAGATTGGTTTGGTGAATTGT\\nGGTCTGGAATAGTTCAGGCTTGTAGTGATGGGTGGTCTTCCACAGTTGAGTACTTTTCCGAAGCCTGGTC\\nGTCATTTATTGAAATGATGCATGAATTTTTTGACCCTATAGGTCAGTTTTTTAGTGAATTGTGGTCTGGA\\nATTGTCGAAACAGCGTCATCTTGGTGGTCGAATCTTGTCACAACTGCATCAGAATTGTGGAGTCAACTGA\\nCTCAAGCCTGGCAAGAAACTTGGAATACGATACTTACCGTCTTAGATCCAATTATTTCGGCGATATCTGT\\nCGTTTTAGAAGCAGGTTGGTTATTAATACAGGCAGGTACACAAATTGCCTGGGCCTTAATAAGTAAATAT\\nATTATTGATCCGATTACTGAAGCGTACAACTGGTGTAAAAATCAGTTCGGTGAGTTAGTTTCTTGGTTAA\\nATTCACAGTGGGAAACGGTAAAATCTTATACACTTGCAGCGTGGAATTTGGTAAAACAGTATGTTATTCA\\nACCGGTTCAAGAATTGTGGAATACAACAAAGCAAAAACTTGGAGATTTAGCTAATTGGATACTATCAAAT\\nTGGGAATCTATAAAATCCTATACGCTTACGGCGTGGAATTTGGTGAAGAAATATGTGATTGATCCAGTAA\\nCTGAAGCCTATAATTCAGCTAAGCAAAAATTTACTGATTTATATAATTCAGCGAAAGAAAAATTCGATTC\\nTGTGAAGAATGCTGCACAAGAAAAATTTGATGCTGCTAAACGTAACATCATTGATCCAATAAAAGAAGCA\\nGTTGGGAAGGTAGAAGAGTTTGTGGGTAAAATCAAAGGTTTCTTTGATAATTTGAAGCTGAAAATCCCTA\\nAACCTGAAATGCCAAAGCTTCCACATTTCAGTCTGCAGACTAGTTCTAAAACAATTGCAGGTAAAGAAAT\\nCTCTTATCCATCTGGCATAAATGTGGATTGGCGTGCTAAAGGCGGTATTTTCACACGGCCAACTATTTTC\\nGGAATGAATGCTGGAAACTTACAAGGCGCAGGAGAAGCTGGACCGGAGGGGGTTCTACCCTTAAATGAAA\\nAGACACTAGGTGCCATTGGAAAAGGAATTGCATCTACGATGACACAACAAAGTAATGACCGTCCAATTAT\\nCCTACAAGTGGATGGAAGAACGTTTGCTCAAATCACCGGTGATTATACAGATCATGAAGGTGGAGTGAGA\\nATTAGAAAAATCGAAAGGGGGCTGGCATAGATGCTATATGGAATTAATTTTAATGGAAAACATTCATATG\\nACGATATGGGATACACTATGCCAGCTGATGGCAGAGATATTGGCTTTCCAAGTAAAGAGAAAATTGTTGT\\nAAAAGTTCCTTTTAGTAATGTTGAATACGATTTTAGTGAAATATACGGATCTCAAACATATACTTCAAGA\\nACATTGAAATACCAATTTAACGTTTTAAGGCAAGGGAATTTTACACCGCATGCAATGCAAATCGAAAAAA\\nCAAAGTTAATTAATTGGCTTATGAATACTGGCGGAAGAAAAAAGCTTTATGATGATACTATTCCTGGTTA\\nTTACTTTTTAGCTGAGGTAGAAAGTGCGGCTGATTTCCAAGATGATTGGGAAACGGGAACAATGACGGTA\\nACTTTCAGAGCATATCCTTTTATGATTGCTGAATTGTATGAAGGTAATGATATATGGGATAGTTTTAACT\\nTTGATTTGGATGTTGCGCAAACTACTAATTTCACTGTGAATGGTATGTTACAAATGGTTTTACTAAATGT\\nAGGGGCTTCTGGTGTAGTTCCAGAGATAACAACATCTAAGCAAATGAAGATTATTAAAGATGGAGTCACC\\nTATACTGTGTCAACAGGTATTACAAGAGATAAGAATTTTGTACTTAAATCAGGAGAAAATCCCATAAAAG\\nTTACTGGTAATGGTACCATCTCATTCCGTTTCTATAAGGAGTTGATTTAAGTGTATAAAGTAACGATTAT\\nTAATGATGGTATTGAAACAATAATTCATAGCCCCTATGTAAATGACCTTAAATTACCGTTTGGTGTAATA\\nAAAAAAAGTATAAATCTAATAGATGCATTTAATTTTAGTTTTTATATGAATAATCCTGGTTTCCATAAGA\\nTAAAGCCGTTAAAAACACTTGTAAATGTGTTAAATACAAAGACAGGTAAGTATGAATTTGAAGGGCGTGT\\nGTTAGGTCCAAGTAAGAATATGGACAATTCAGGACTTCATAGTACTTCATATGAGTGTGAAGGTGAACTT\\nGGGTATCTACATGATTCAGTTCAACGGCATTTAGAATTCCGTGGAACGCCAAAGGAACTTTTTGCAAAAA\\nTTATTGAGTATCATAACAACCAAGTAGAGGAATATAAAAGATTTAAAATTGGAAATGTAACAATTACCAA\\nTACTACAAATAACCTTTATCTTTATTTATCAGCGGAAAAAGATACTTTTGAAACAATTAAAGAAAAACTA\\nATAGATAAATTAGGTGGCGAACTCCAAATACGTAAAGTAAACGGAGTTCGTTTTTTAGATTATTTAGAAC\\nGTGTTGGTGAAGAGAAAAAAACAGAAATTCGAATCGCTAAAAATTTACTCAGTATGTCTTGCGACATAGA\\nTCCGACTGAAATTATTACTCGCTTGACTCCTTTAGGTACACGAATAGAGTCAAAAAATGAAGGAGCGACA\\nGATGCATCAGAAGCGCGATTAACTATTGAATCAGTTAACAATGGAGTACCTTATATTGATCATCCAAGTG\\nGAATAAAAGAGTTTGGTATACAAGGTAAATCTATAACTTGGGACGATGTAACAATAGCAAGTAACTTACT\\nTGCAAAAGGAAAAGAGTGGTTTGCAAATCAAAAATCAATTGTAACTCAATATAAACTAAGTGCAGTTGAT\\nTTGTATTTAATTGGTCTAGACATCGATTACTTTGAAGTAGGGAATTCTCATCTAGTCATAAATCCTGTTA\\nTGGGGATAGATGAGCTTCTAAGGATTGTTGGGAAATCCTTAGATATTAATAATCCACAAGGAGCCAGTTT\\nAACAATTGGAGGTGCATTAAAAACATTAAATCAATATCAAAGTGATTTGAAAAAATCAGCACAGCAAGTT\\nGTGGATTTACAATATACAGTGCTGAGACAAAACGGGAAAATCAATTCGTTGTCAGCCAGTCTTGTTGAAG\\nCAGAAAAATTATTACAGTCCTTAAATGAAGCTGTTGAAAATGCGGATTTACAAATGATTGTTCAGTCAGT\\nTTCTGATTTAAAAAGTGCTTTAAAAAAAATTGAAGAGGAAATACAAACTTTACCCACATCCGAAGTGATT\\nTTGCAGATGCAAAAAGATATACAAAATAATACAACTGAAATTGTAGATATCGATGAAAGAATGATTGAAT\\nCTGAAGTAGTAATTGAAAATAATAGTAAAAGCATTGAAGTATTACAAATCGATTTAAAAGATGTAGTAGA\\nTCGTCTAACTGCTTTAGAAAATGGAGGTTCATAATGTGGCAAATATAAGTGGTTTTTTAAATAGAATTCG\\nAACCGCTATTTATGGTAAAGATGTTCGTGAGTCTATACATGATGGGATAGAAGCTATCAATAAAGAGACA\\nGAGATAGCGACGAAACTTTCCAATAATATAAAGATTAAACAAGTTGCTTTAGAAAAGAAATATGATGACC\\nAAATTTCTAACATGACAAATGAAAATCCATCTATTAGTGAATTGGTTGATTTTAGAACTAGTGGATTTAC\\nAGGAATGTCATATGTTACAGCGGGAAAAAGAACTGATGCTATTGATGAAAGGATTACAGATATGTCTGTC\\nAGCATAAAAGACTTCGGAGCAGACCTCACAGGAGAGACAGACAGTACGGTAGCTATTCAACAAACAATAG\\nACTACGTATATGATCGTGGAGGTGGTGTAGTTTATATTCCGCCAGGGATTTTAAGATACACTTCTATAAT\\nTGTTAAAATTGGTGTTCATATTCGTGGTTCATTAGTTTCAATTACAGATTGGAATGGGAGGTTAGGCTCT\\nAATACGTCCGTAACTACTTTGATACCAACTGATCTTAATAGACCTTCTATCATCATGCATGGGAACTCAA\\nCGATTAATGGCGTCTGTTGGTTTTACGAAGGGCAAAAGAAAGAACTGACGTCTGAAAGTGACACATTTAT\\nTCAATACCCTCCAACTATTCAGTTGGGTGATGCGTCAAACAAGGCTATTGGAAATTATATTGGAAACTTT\\nATAGTAATTGGAGCATATGACTTCATATCGCAATACTCATTTTCAAATAGCGTAGAAAAGTTATTTGTAG\\nAAAAAGGATATGGTATGTTCTTAAATACATTTTGTACGCTTAAAAAATGTACTGATATTCCTAGATTCTC\\nTAAGATTCATATGAATCTAAATTCAGCATTAGGATGGCTAACTGGAAATACAGTTCCTTATTACTCTAAA\\nATCGCTCGTAATGGTGTAATGTTTAAGGTTGCGCGTGTCGATGACTGTGTGATAGAAGATTGTTTTGCAT\\nATGGCGTTAAGCACTTTGCTCATCTCTATAAAGAGGTGGGTGAGGATGGGAACGGCGGTGGTATAACAGT\\nAATTGGATCAAGCTGTGATGTTTGCCATCAAGCGTTTAGAAACGATCGTGGAAATCTATCGTTTGGCGTG\\nAAAGTAATCGGGGGATTTTTCACACCAGTTGTTAACGTGGATGGCAGCGAAAAATGTTTAATTTACCTTA\\nGTCAAAACGCTACATATACTAGAATGCAATTTTCGTCATTCAAATGTTATGGAGATGTTGTATCACAGGT\\nAAGTAATACTTCAAAAACAGACCATATTGTTATTTTCGAAAACGGAAATGCGGGTAATAACGTCGTAAAT\\nTTATTTGGCGATGTACAGTTTAATATTGGTATTTCGAAAAACGAGAACGTGTTGATCAATAATGTTGTAA\\nATTTTATTGGTACAGATAGGGATTCCTCTTTATCAAAACTAGATAGAGTGACTATCCGTCATCTTGTAAT\\nGACCGGTTCTCGAATTGATCTAACTCATGGTGTCGATGATATTGCATGGTTTAAAGTGAATAATGAATAC\\nGCTTTTGGTGCAGTTAAGGATGCCTATGATCCGACATTTTTTACAAAAGCGTATTTCCGACCAGGTACAC\\nTGACTTCATTACCAACCGCAAATGCAAATCATCGTGGAAAGATGATTCGTCTGGAAGGTGCAAATGGTGT\\nTGAGGATAGGTTATTTATATGTAAAAAGAAAAGCGATGGAACATATCACTGGAAACAGCTAGACGCAGAA\\nCAATAATGATGAAGGGGTGTTTTAAATGGGATTGCAAGTTAATATAACTTTATTTAATCAATTAGAAGTA\\nAATTCATATGCAAGAGTCGGCAATATTGGAGGAACAAAAGAGGAACAGTTTTTTTCTATTGATTACTACG\\nCTTCGCGAAATGCCTTTTTGAGGAAACTTGACCCTATCAAACAAGAAAACTATAAATTCACTCCATCTGT\\nTATGGATGACTCATTGAATTTTGTGAAACAAGCTTATATTTATGTTAAAAGAAGAACGGAATTTGCGGGT\\nGCTGTCGATGTATTAGAAGAAGGGCAAAAATCTTGAGTTTAATAAAATTCCTCAGTTTATCTAATATATA\\nAGATTTTATATGTTATTATATGTAATGGCGTCTTAATATAAGACGCTAATACATATAATTTGGAGGAAAA\\nAGATGAACATATCCAGTCACCAAGAGGGAATGTCAAAACTGAATATAATAATACTACTTTTTCTCTCGTA\\nTATAATGAGTACTTATAAATACGGGGAATTTGTACATTATTTTGTGTTTATAGTCATGGCCGCTCTTATA\\nCTTAGAATGCTTACTGTAGGCATCAAGGTAAGTAATGAAATATCAATAAATAAAGGCATATTGACGTTTT\\nGCGTAATTTTATTAGGGTTATTGTTATTGAAATCGATTTTTAACTTAAATGAATTAAAGGCATTTATTAA\\nGAATTATTCAGTTATCTATTTCGTTCTAATTTACGGCCTTCTAGAATATTATAAGAATGGTGCTAGGTAT\\nGGAGAGCAAGTTTTTATACAGCTTACTAAAATACTAAATGTACTTTCTGTCTTAAACCTAATTCAGGTTG\\nTTTTACACAGACCGTTATTATCTGGATTCTTCACAGAACAGATGGACAAGTATCAATATTGGGCGTATGG\\nTACTGGTGACTTTAGACCAGTTTCCGTGTTTGGTCACCCTATTGTAAGTGCATTGTTTTTTTCTATATTA\\nGTGATCTGTAATCTTTATATACTTAAAGGCAATTTAAAATATCCATTGCAGATTGTGGCACTTGTGAATG\\nTCTATGCCTCGCAATCTAGGAGTGCTTGGATTGCATTAGCAATTATTGTATGCTTGTATTTTATTAAAAA\\nTTACCGTATTAAAAAAATAAAAAGAAATGTTCGATTTACTTATAGTCAATTATTAAAAATTTATGTTTCA\\nTTAGTAATAGTGATCTGTGGATTTGGCTTAGTTGCTTTAAGCTCGGATAGTATCATAAGTTCCATAATTG\\nAAAGATTCGGAGATTCTTTAAGTGGGAATAGTAAAGATATTTCAAACTTACAACGGACGGGCACATTAAG\\nTTTAATTAATACTTATATGTTTCAACAAGATATGTTTAGATTACTGTTTGGTTATGGATTAGGGACTGTA\\nGGAGATTTTATGTCTGTTAATACCGTTGTTATTCGTAATTTCTTGACGACAGATAATATGTATTTGACTT\\nTTTTCTTTGAATTAGGGCTCTTGTCATTGATTAGTTATGGATTATTCTTTATTATTGGAGTCATTCGTTT\\nTTTCTTATCTAAAAATTACTGGTTAAGCGAATTAGGCGCTTTATGTTTTATCTTTTTATCAATCATAATA\\nTTTTTCTTTGAAGGTATAGGGTGGGGTACTGTAGTAACTGTTTGGATGTTTTCTTTACTGACCATTCTAA\\nTGAAATTTAAAAATCCAAACAGTTTAACAAAAAATAAAATAAAATAGTTACAGTAGTATTTATACTAGTT\\nTTTGGGAGAGAAACATGAACAAAAAACAATTAAAAGAAACAATTAATTCAGACTTATACAGAGTATACGG\\nAAGTCAAGGAACAAAAAAGAAAATTATTAATTTCTTAAGAAACCCTGGCTTTAAATATTTATATATACTA\\nCGTAAATGTAGTTATTATAAAGAGAAAAACAAGTTAATGTATAGATTGTATTTTATATTATTGTTGCGTT\\nATCAGTATAAGTATGGACTAGAAATAATGCCTGATACGAAGATTGGAAAAGGCTTTTACATTGGACATAT\\nAGGAGCTATTACAATTAATCCTAAATCTATAATTGGTGAAAATGTAAATATATTAAAAGGGGCATTACTT\\nGGCTATAATCCGCGAGGGAAATATAAAGGCTGTCCAACTATAGGAGATGGTGTTTGGATAGGTCCTAATG\\nCTGTAATAGTTGGTAATATTACAGTTGGAAATAATGTAGTGGTAGCGCCAAATACGTTAGTCAATAGGGA\\nTGTTCCAAGTAATTCAGTTGTGGTAGGTAATCCGTGTCAAATTATTTCACAGGATAATGCAACTGAAGCT\\nTATGTCAATTATACAGTTTAACAAAATACAATTTTAGTTGAAAAGGAGACGAGTTATCGTCTTCTTTTTT\\nTATTGTCAAAAGGAGATGAGAACAGTGGAAGATGCAATTTTCAATTCAGTCATTCAACAGGGCGCATTCG\\nCAGCGTTATTTGTGTGGATGCTATTTACTACACAAAAAAAGAACGAGCAGCGTGAGGAAAAGTATCAACA\\nAGTAATTGATAGAAACCAACAAGTAATTGAAGAACAGGCAAAAGCCTTTGGATCTATTTCTAAGGATGTA\\nACAGAAATTAAACAAAAATTATTTGAAGGAGATGTTCAATAATGGGATATATCGTTGATATTTCAAAATG\\nGAATGGCAATATTAATTGGGATGTAGCTGCAGCGCAATTAGATTTAGTAATTGCTAGGGTACAAGATGGT\\nTCAAATGTTGTGGATCATATGTATCAAAGTTATGTGAGTGAAATGAAAAGGCGTGGTGTTCCTTTTGGTA\\nATTATGCGTTTTGTCGTTTCGTTTCTGAAAATGATGCAAGAGTTGAAGCGAGGGACTTCTGGAACCGCGG\\nTGATAAAGATGCATTATTCTGGGTTGCTGATGTGGAAGTAAAAACAATGGGGAATATGTTAGCCGGAACA\\nTTAGCTTTTATCGATGAGTTACGTCGATTAGGTGCTAAAAAGGTTGGTTTATATGTTGGCCATCATACAT\\nATAAAGAGTTCCAAGCTGATAAAGTAAACGCTGATTTTGTATGGATTCCTCGATATGGTGGGAATAGACC\\nAGCTTATCCATGTGATATCTGGCAATACACAGAGACAGGAAATGTACCTGGTATCGGTAAATGCGATTTA\\nAATGAGTTAATTGGTGATAAATCGTTATCTTGGTTTACCAATAATCACATGGGCTTAGTTGTTCCTGAGG\\nTAGGAAAGCGAGTTGTTTCTAAAGTAGAGACTCTTAGATTTTATTCAAAACCTTCCTGGGCGGATGTGGA\\nTGTTGCTGGAACAGTTTCTAATGGTTTGGGGTTCGCTATCATTGGAAGAGTCGATGTGAATGGTTCGCCA\\nCAATATAAAGTACAAAATTCTCGTGGTAGTGTCTTTTATATTACGGCTAGTCCAAAATATGTAGAAGTAA\\nAATAAAAATTGCCGGCTCTTAATTGATATGCTCCCCCTATAGTAGACAGAAAAAAGAAAGCTTTATATCC\\nTGTCTACTATAAGGGGGATTTTTTTATGGGGAAAATTAGAAGAACATATGATGAAACATTTAAGAAAAAG\\nGCTATAGATTTATATTTTAAAGAAGGCATGGGTTATACCCAAATAGGAAAAACACTAAGCATTGATGAAA\\nAAAACGTACGTAGATGGGTAAAACGTTTCAAAGAAGAGGGTATCAAAGGCTTAGAAGAGAAACGTGGAAA\\nGGCTACTGGAGGAACAAAGGGGCGACCTAAAAATTGTCCAAAGGAGCCTACAGAAAGAATCAAATATTTA\\nGAAACAGAGAATGAAATGCTAAAAAAGCTATTGGGAATGTTAAAGGAGGGATGAAAGCTGCACCAGCATA\\nCAAAAAATATGAAATCATACAAGAAATGTCCAAAGGTATGCGTTCAATACAGCTACTGTGTAAAATCGCG\\nGAAGTATCTAGAAGCGGATATTACAAGTGGTTAAAAAGGCAAAGCAATCCTTCTCCGAAGGAGATAGAAG\\nATGAAAAAATAAAGAATAAAATTTTGGAATGTTATAACCAAGTGAAGGGTATCTACGGATACCGAAGAAT\\nAACTGTGTGGTTAAAGATGAAACATGGGATCGTCGTAAACCACAAGAGAGTTCAACGACTAATGAATAGG\\nATGAAACTTAAAGCAATTATCAGAAAAAAACGACCTTATTTTGTATCAAAAGAAGCATATGTAGTCTCAA\\nAGAATTACTTGAATCGAGATTTTAAAGCGGAACAACCAAATGAAAAATGGGTAACAGATATTACTTACCT\\nTATTTTTAATGGGAAAAAGCTATATCTATCCGCCATAAAGGACCTTTATAACAATGAAATTGTAGCTTAT\\nCATATTAGCCATCGTCATGATATACAACTAGTTATCGATACGCTAAACAAGGCGAAAAAACAACGAAACG\\nTGCAAGGGATTCTTTTGCATAGTGATCAAGGTTTCCAATACACTTCACGCCAATATAATGATTTCCTAAA\\nAAAACATAAGATGAAAGCTAGTATGTCTAGAAAGGCGAATTGTTGGGACAATGCTTGTATGGAGAATTTC\\nTTTAGTCATTTCAAAGCGGAGTGTTTTAATCTGAGTTCATTTCGTTCAGTAGAAGAAGTTAAATTTGCCG\\nTACATAAGTATATTCATTTTTATAACCACCATCGTTTTCAGAAAAAATTAAAGAACCTGAGTCCATACGA\\nATATCGAACTCAGGCTTCTTAACTATGCGTTTTAATTACTGTCTACTTGACAGGGGTCAGTACATAATTG\\nAGTCGGCTTTTTTATTGCAAATCAGATATCCTTCTAACTTGTTTTTCTTTCTTCTTGAAGTTCTTCTTGT\\nACTGTTTAAATTCTTCTTTATCTACGTGGAACTTTTCTCCGGTGGCAACGTTTTTAACTAAGTATGTTTT\\nGGTTGTAAGAGATTTAATTATGTAATAAATAGCAAATAGCATAAGAGAAATACAAAAGGTAGGAATAGAA\\nAATACAATAGCAAGTGCAGCTAGTATATTATCTCTCTTATGATCTCTTTGTAACACTAAACGTTTCCCTG\\nCTGCAGCTTGAGCTTGTTCTAATTGTTGCATACGTTGTAGCGATGCTACAGTATCATAACTCATGAAAAA\\nACCTCCTTGAAATAATACCTAAATCATACCAATTTCATGTAACAACTGTAAATGTTAGTTTCTCATTTAT\\nTGACAAAACAGAACAATTGTTCTACAATTCATTTACAAACAAATGTTCTTGAAAGGGGAAATTCATATGG\\nCAGCAACTGAAAATACAACTAAAGGAAAAGAGAAAGCATTAGAAGAGGCTCTGAAGAAAATCGTAAAAGA\\nATTTGGTACAGGGGCTATTATGAAACTGGGTGAGCGTCCTAATCAAAAAGTATCTGTCGTATCAAGTGGT\\nTCTGTTGGATTAGATAATGCTTTAGGGGTTGGTGGATATCCAAAAGGACGCATTACTGAAATCTTTGGTC\\nCTGAATCTTCAGGTAAGACAACTATAGCATTACATGCAATTGCAGAAGCGCAAAAAGAAGGTGGAACAGC\\nGGCATTTATTGATGCAGAGCATGCACTTGACCCTATTTATGCACAGAAGTTAGGTGTTAATATTGATGAA\\nCTGCTCATGTCACAACCAGATACAGGAGAGCAAGCACTAGAGATTGCAGAAGCTCTAGTTAGAAGTGGGG\\nCTGTAGATATCATTGTGATAGATTCTGTAGCTGCTCTAGTCCCGAAAGCGGAAATTGATGGGGACATGGG\\nAGATTCACATGTGGGATTGCAGGCTAGATTGATGGGGCAGGCAATGAGAAAAATATCAGGAGCAATATCC\\nAAAAATGGAGTTGTAGCAATCTTTTTAAATCAAATCAGAGAAAAAGTTGGTGTTTCTTTTGGGAGTCCTG\\nAGACAACACCGGGTGGTAGGGCGTTAAAATTCTATTCAACAATTCGACTAGATGTACGTCGAGGAGAACA\\nGTTGAAAGGAAAAGAAAGTGACGTTTTAGGGAATAAAACAAAAGTGAAAGTAGTAAAAAATAAAGTTGCT\\nCCACCATTTAAAAACATTGACTTTGACATCTTATACGGAGAAGGGATTTCCCTAGAGGGAGAGCTTATTG\\nATATTGGGGTAGAGTTAGATATTGTTCAGAAAAGTGGTGCATGGTACTCGTATCAAGAAGAACGTCTTGG\\nGCAGGGTAGAGATAATGCCAAGCAATTTCTGAAAGAGAATGAAAACATACGTAATTCTGTTCGAAATAAA\\nATTTATGAATACTATTCTCCAAAAGAAGACTCTGTTGTTGTAAAAGCGGAGCTTATAAAAGAAAATGAGC\\nCCATCACTTTAAAAGAATCTGAATAAGGTTATATAAAGAGAATCTTAAAATAAAATTCATGCTATGTATA\\nTTTTAAAAACTGGAACACCTAGTTATTAGAACTGGGTGTTTTTATATACTCATAAACTCACGATCAAAAT\\nAAAGCTTATCCATTAAGTTTTTTGTATATTATTTTGCAAGTAAGTTCCGTACATATTTACCCAACTGTTC\\nATCTGTTAAACCTGACTTAATTGCACCTTTAATAGCATCAATTGTATTAATTGTATGAGGTTCATTCTCT\\nTCTTTCTTTTTACTATGTATCCATTTCTTATATAGTTCATCCTCTTTCTTTGCCAAACTCAAAGCGTTCT\\nCAACAGTAGTAACTTTCTTCCTCACCCAATGACCAGCTATTTTTTTGACATACTCAGGATTCAATATCAT\\nGTCTGATCTCAGCATCACATAATAAATCAAAACATTTATAACAGGGTTAGGCAACCTATAATTATCACGC\\nATATCAGTAACTATATGCAAATCCCCTTTTGGAACAGTAGCACCGCCTGATAACTCGCTTAAAAGTTGTT\\nCAGGTGTAACAGAATTTAATTGCTGTATCAATTTTTGTTGTTTTTCCATGAATTTATCCTCCTAATACTT\\nTGTATAATATAAATTTTATCTAGTAATCTTCCGCATTTAATATAACCCCATTTCATCAGATTCTTCTTTA\\nGATAGTTTGTAATATATACTTGGTGCAAGAGGGTTATCTATTGTATTTGTGGAGGGGGTTTTTGAGTCAT\\nTATCTTCTAACCAATTATAATATACACTACTAGTATCTGTGTTAGTTTTACGTTTAGAAATATTGTGGAT\\nGTCTCTAAATCTATCGATGTAGTCATATACCATACTTTTAAATGTATTAGTAAAGTATCCAATTGGATTT\\nTTCATAAGCTCTCCATTGTGTTCAACTTCATGAGTTTTAGAGAATAAAGTAACAGATGCATTCGCAAGGA\\nTATTGTTAAATACATCCTTGTCAGATAGTAAACTAAACTTCTTAGCAGCCTTTTTAGCGATATTTACAGC\\nATTGTGGAAGGATTCGTTAATAACTTTTGAACCAAATGCAGTTGCTAATTTCATACGCATAGATTGTGGA\\nACACGATAGTCGATAAAATCATTATCATTGACTGTAGATTGAAACTCATTTCTATTACGTATATTTATAT\\nTTTTTATATTTTGTTTTAAGGTTTTAGTAGTTGTTTTATTGGTGTGACATTTTTCTTCATTTTTAATAGG\\nTGCTTGTGTGACAACCTGTTCCTCCACAATAATTGGTTGAATAACAATCGCATTGCATGTTTGCCTCATA\\nTCGCTTTTACGCTTCATTTCTAGTTGTTTAATAATACCTAAAGACTCTAAGTGTAGGCATACTCTAATAA\\nCCGTTCTACGGCTAATATTGAGGTCTTCAGCGATGTGTTTTTTTGTTCTGAATGATACACCAAAGAACTT\\nAGAAGAATAGTTGTGTAATTTATTTAATACAGCCAATTGAGTTTTATTTAACTGATCTACGAATTTTTCT\\nTTGTATGCACGAACAGTCTTGTTTAATTCATCGACTGTTTTAAATGTTGCTAGGTTTTCATATGTTTCAT\\nTACCTGCAATAATTGTAATTCCTTGTTTCTTTTCCATAACGGTTTGTCTCCTTTTTGGAAACAAAAAAGC\\nAACAGAATGCCAAGTGTAAGCAAACTGTTGCTAAGGAGCCCTTACGTACTGTAAAATAGTTCGTAAGAGT\\nACAGCAAGTGTTTGCCTAGTGTGATTAGGCGGACGGTATATAGAGTGTTGACGCACTTTATATACACGCT\\n\\n\"\n\nclass(her1410_1)\n\n[1] \"character\"\n\ndim(her1410_1)\n\nNULL\n\nlength(her1410_1)\n\n[1] 1\n\nwrite(her1410_1,file=\"her1410_1.fasta\")\nseq1 &lt;- read.fasta(\"her1410_1.fasta\")\n\nAs you can see, you can very easily download the data from any NCBI database. Regarding sequences, the main drawback of the function entrez_fecth() is that the downloaded sequences are character objects and transform it into sequences that you can handle with seqinr or other packages is not straightforward and it requires some polishing (see ref. 7). Alternatively, you can save the data as a new fasta file in your computer before importing with seqinr, as in the following example.\n\n#compare two files\nher1410_2 &lt;- entrez_fetch(db=\"nuccore\", id=her1410$ids[2], rettype=\"fasta\")\nwrite(her1410_2,file=\"her1410_2.fasta\")\nseq2 &lt;- read.fasta(\"her1410_2.fasta\")\n\n#codon frequencies\nfreq1 &lt;- count(unlist(seq1),3, freq=TRUE)\nfreq2 &lt;- count(unlist(seq2),3, freq=TRUE)\n\nstop1 &lt;- freq1[which(names(freq1)==\"tga\"| names(freq1)== \"tag\" | names(freq1)== \"taa\")]\nstop2 &lt;- freq2[which(names(freq2)==\"tga\"| names(freq2)== \"tag\" | names(freq2)== \"taa\")]\nstops &lt;- rbind(stop1,stop2)\nstops &lt;-  as.data.frame(stops)\nstops$sequences &lt;- c(her1410$ids[1],her1410$ids[2])\nstops &lt;- cbind(stops$sequences,stack(stops[,1:3]))\nnames(stops) &lt;- c(\"sequences\",\"freqs\",\"stop_codon\")\n#plot\nlibrary(ggplot2)\np &lt;- ggplot(data=stops) + geom_bar(aes(x=toupper(stop_codon),y=freqs,col=sequences,fill=sequences),stat=\"identity\",position=\"dodge\",alpha=0.8) \np + scale_fill_brewer(palette = \"Dark2\") + scale_color_brewer(palette = \"Dark2\") + theme_linedraw() + ylab(\"Codon frequency\") + xlab(\"Stop codon\") +  guides(color=\"none\", fill=guide_legend(title=\"HER1410 sequences\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nR is very useful for many applications in Biochemistry and Molecular Biology, and ggplot is a very good example of that.\n\n#script by Luis del Peso\nCounts&lt;-matrix(c(2,38,0,0,0,0,10,8,4,7,21,9,9,11,9,23,4,15,10,0,46,0,0,0,32,17,\n                 10,15,11,18,9,16,23,11,20,8,10,8,0,46,0,46,2,17,21,13,14,15,\n                 27,8,13,8,16,22,24,0,0,0,46,0,2,4,11,11,0,4,1,11,1,4,6,1),\n               nrow=4,byrow = T,\n               dimnames=list(Nucleotide=c(\"A\",\"C\",\"G\",\"T\"),Pos=1:18))\ncounts &lt;- data.frame(Counts)\nnames(counts) &lt;- 1:18\ncounts &lt;- cbind(stack(counts),c(\"A\",\"C\",\"G\",\"T\"))\ncolnames(counts) &lt;- c(\"values\",\"pos\",\"nucleotide\")\nggplot(counts, aes(x=pos, y=values, fill=nucleotide)) + \n    geom_bar(position=\"stack\", stat=\"identity\")\n\n\n\n\n\n\n\n\nThis is not a very interesting plot. Now, in order to plot the PSSM as a sequence logo, we are going to use the package ggseqlogo. Also, to arrange plot, we will use the package gridExtra, which is very handy and commonly used to generate complex figures.\n\nif(!require(ggseqlogo)) install.packages(\"ggseqlogo\", repos = \"https://cran.rstudio.com/\", dependencies = TRUE)\n\nLoading required package: ggseqlogo\n\nlibrary(ggseqlogo)\n\nggseqlogo(Counts) \n\nWarning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the ggseqlogo package.\n  Please report the issue at &lt;https://github.com/omarwagih/ggseqlogo/issues&gt;.\n\n\n\n\n\n\n\n\n#install.packages(\"gridExtra\")\np1 &lt;- ggseqlogo(Counts, method=\"prob\")\np2 &lt;- ggseqlogo(Counts, method=\"bits\")\ngridExtra::grid.arrange(p1, p2)\n\n\n\n\n\n\n\n\nLet’s plot some protein logo from the example sequences in the package. Remember that we are working with an add-ons to ggplot. That means that all ggplot elements can be used.\n\ndata(ggseqlogo_sample)\nstr(seqs_aa)\n\nList of 4\n $ AKT1   : chr [1:172] \"VVGARRSSWRVVSSI\" \"GPRSRSRSRDRRRKE\" \"LLCLRRSSLKAYGNG\" \"TERPRPNTFIIRCLQ\" ...\n $ CDK2   : chr [1:444] \"LGPYEAVTPLTKAAD\" \"SGSESGYTTPKKRKA\" \"GSESGYTTPKKRKAR\" \"VTTQTPLTPEQLRAV\" ...\n $ AURKB  : chr [1:106] \"ITVTRRVTAYTVDVT\" \"PWPYGRQTAPSGLST\" \"APSLRRKTMCGTLDY\" \"PSKKRTQSIQGKGKG\" ...\n $ CSNK2A2: chr [1:80] \"KHEEEEWTDDDLVES\" \"VWDHIEVSDDEDETH\" \"TSADVKMSSSEEVSW\" \"SADVKMSSSEEVSWI\" ...\n\n\n\nhead(seqs_aa)\n\n$AKT1\n  [1] \"VVGARRSSWRVVSSI\" \"GPRSRSRSRDRRRKE\" \"LLCLRRSSLKAYGNG\" \"TERPRPNTFIIRCLQ\"\n  [5] \"LSRERVFSEDRARFY\" \"PSTSRRFSPPSSSLQ\" \"GRSGRGKSFTLTITV\" \"SGRGKSFTLTITVFT\"\n  [9] \"SGRAREASGAPTSSK\" \"CVRMRHLSQEFGWLQ\" \"GTRGRLESAQATFQA\" \"ARRARSKSLVMGEQS\"\n [13] \"QFRRRAHTFSHPPSS\" \"ATRGRGSSVGGGSRR\" \"ATRKRRWSAPESRKL\" \"PFRGRSRSAPPNLWA\"\n [17] \"FIFMRRSSLLSRSSS\" \"GQRDRSSSAPNVHIN\" \"PQRERKSSSSSEDRN\" \"LKRKRRPTSGLHPED\"\n [21] \"QTSKRHDSDTFPELK\" \"RFRDRSFSEGGERLL\" \"TRRTRTFSATVRASQ\" \"KLRRRFSSLHFMVEV\"\n [25] \"GSRVRVDSTAKVAEI\" \"SRRPRRRTFPGVASR\" \"LKKIRLDTETEGVPS\" \"GQVPRTWSEKDLREL\"\n [29] \"SIRPRPGSLRSKPEP\" \"THLSRVRSLDLDDWP\" \"LLRDTFTSLGYEVQK\" \"AKRPRVTSGGVSESP\"\n [33] \"HKRRRSRSWSSSSDR\" \"RRRRRSRTFSRSSSQ\" \"DHWIRMRSQEGRPVQ\" \"EDQPRCQSLDSALLE\"\n [37] \"QDTQRRTSMGGTQQQ\" \"LGGGRVKTWKRRWFI\" \"RTPRRSKSDGEAKPE\" \"SFRRRHNSWSSSSRH\"\n [41] \"RTRSRRLTFRKNISK\" \"SYKIRFNSISCSDPL\" \"TSRIRTQSFSLQERQ\" \"RVSIRLPSTSGSEGV\"\n [45] \"GGRERLASTNDKGSM\" \"IKRSKKNSLALSLTA\" \"CWRKRVKSEYMRLRQ\" \"ASPARRASAILPGVL\"\n [49] \"CLRSRDPSLMVDFIL\" \"GLETRRLSLPSSKAK\" \"LGRERLGSFGSITRQ\" \"KTYRRSYTHAKPPYS\"\n [53] \"KLRRRSTTSRAKLAF\" \"LPRPRSCTWPLPRPE\" \"SPRRRAASMDNNSKF\" \"TFRPRTSSNASTISG\"\n [57] \"QSRPRSCTWPLQRPE\" \"APRRRAVSMDNSNKY\" \"QSRPRSCTWPLPRPE\" \"APRRRAASMDSSSKL\"\n [61] \"TFRPRSSSNASSVST\" \"LLRERKSSAPSHSSQ\" \"QTRNRKASGKGKKKR\" \"QTRNRKMSNKSKKSK\"\n [65] \"INRERQKSLTLTPTR\" \"ANLNRSTSVPENPKS\" \"SGRARTSSFAEPGGG\" \"SGRPRTTSFAESCKP\"\n [69] \"RKRSRKESYSIYVYK\" \"LYRSRMNSLEMTPAV\" \"SQRGRSGSGNFGGGR\" \"RALSRQLSSGVSEIR\"\n [73] \"RVRVRLLSGDTYEAV\" \"GGRSRSGSIVELIAG\" \"EMRERLGTGGFGNVC\" \"VPSGRKGSGDYMPMS\"\n--- Cropped output ---\n\nggseqlogo(seqs_aa, ncol=4)\n\n\n\n\n\n\n\nggseqlogo(seqs_aa, ncol=2) +   theme_light()\n\n\n\n\n\n\n\n\n\n\n\nThere are two other ggplot-based packages that I find very interesting for sequence-based plots:\n\n\nCheck out vignette and examples here: http://yulab-smu.top/ggmsa/\n\n\n\nSee the vignette and some example here: https://rforbiochemists.blogspot.com/"
  },
  {
    "objectID": "r9.html#example-1-advanced-plotting-with-ggplot-in-one-line",
    "href": "r9.html#example-1-advanced-plotting-with-ggplot-in-one-line",
    "title": "R8: Plot your data in R - Episode II",
    "section": "",
    "text": "Let’s start strong. We are going to generate a complex plot in one code line.\n\n#load the data\nlibrary(data.table)\nvaccines&lt;-fread('data/vaccines_EU_22oct2022.csv')\n#install & load ggplot2\nif(!require(ggplot2)) install.packages(\"ggplot2\", dependencies = TRUE)\n\nLoading required package: ggplot2\n\nlibrary(ggplot2)\n \n#step 1: create the plot object\nggplot(data = vaccines)\n\n\n\n\nThere are some alternative ways to create the plot than are useful for more complex plots. You can also create an object in the RStudio environment.\n\np &lt;- ggplot(data = vaccines)\nclass(p) \n\n[1] \"gg\"     \"ggplot\"\n\n\nAlso, you will see on many websites the use of the pipe (|&gt; or %&gt;% with dplyr()) as the first argument. This is very convenient to combine ggplot with other tidyverse packages, although we are not using that syntax in the following examples.\n\np &lt;- vaccines |&gt; ggplot()\n\nNow, we can add some data to generate a dot plot:\n\np &lt;- ggplot(vaccines, aes(x = YearWeekISO, y = log10(FirstDose), col=TargetGroup), stat=mean) \n\nWhat happened? Where are my points? We added the data and it allows to plot the axis, but we also need to add the type of plot, that is, the geometry layer. We usually build the final plot adding (just with +) more layers to the previous plot object.\n\n(p &lt;- p + geom_point())\n\n\n\n\nFinally, we would like to group our data:\n\nggplot(vaccines, aes(x = YearWeekISO, y = log10(FirstDose), col=TargetGroup), stat=mean) +\n    geom_point() + facet_wrap(~ ReportingCountry)\n\n\n\n\nThat is, quite a complex plot in just one code line."
  },
  {
    "objectID": "r9.html#example-2-from-r-base-plot-to-ggplot",
    "href": "r9.html#example-2-from-r-base-plot-to-ggplot",
    "title": "R8: Plot your data in R - Episode II",
    "section": "2.1 Example 2: From R base plot to ggplot",
    "text": "2.1 Example 2: From R base plot to ggplot\nThe use of ggplot is usually associate to great, gorgeous charts and plots. However, once you learn how to use it and how adapt and re-adapt code to your data, you will probably use ggplot for every graph.\nIn the following code, we are going to use ggplot to solve the exercise 1 from Lesson R5.\n\n#create the same dataset\nset.seed(2023) #set a seed to obtain reproducible random data\n(GeneA &lt;- rnorm(50)) \n\n [1] -0.08378436 -0.98294375 -1.87506732 -0.18614466 -0.63348570  1.09079746\n [7] -0.91372727  1.00163971 -0.39926660 -0.46812305  0.32696208 -0.41274690\n[13]  0.56203647  0.66335826 -0.60289728  0.69837769  0.59584645  0.45209183\n[19]  0.89674396  0.57221651 -0.41165301 -0.29432715  1.21857396  0.24411143\n[25] -0.44515196 -1.84780364 -0.62882531 -0.86108069  1.51492030  2.73523893\n[31] -0.27487706  1.27665407 -0.81098034 -0.04492278 -0.63941238 -0.43835600\n[37]  0.50720220  1.12921920  0.97563765 -0.12460379  0.42833658  0.41872636\n[43]  0.43546649 -0.20426209  0.30235349  0.69435780  2.37306566  1.07597029\n[49]  0.33538478  0.75342823\n\n(GeneB &lt;- c(rep(-1, 30), rep(2, 20)) + rnorm(50))\n\n [1] -0.33561372 -2.09088266 -1.42277085  0.18340204  0.58482679  1.28085537\n [7] -3.06545705 -1.40811197 -0.69898543 -0.30338692 -0.01181613 -1.28406323\n[13] -2.92226747 -2.17371980  0.04428274 -1.13292810 -0.15512296 -1.37159255\n[19]  0.04758385 -0.07458432 -2.47860533 -1.92263494 -1.08490244 -1.86651004\n[25] -0.32495764 -1.08070491 -1.12559261 -1.38833109 -0.98317261 -2.12630659\n[31]  2.21835181  3.74303686  1.88042146  2.48617995  2.14136852  2.30796765\n[37]  2.99408134  1.48218823  1.19286361  0.07682104  0.61086149  2.42867002\n[43]  1.70621858  4.27999879  0.83548924  3.24086762  0.50491614  1.76836367\n[49]  1.17513326  0.67582686\n\n(tumor &lt;- factor(c(rep(\"Colon\", 30), rep(\"Lung\", 20))))\n\n [1] Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon\n[13] Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon Colon\n[25] Colon Colon Colon Colon Colon Colon Lung  Lung  Lung  Lung  Lung  Lung \n[37] Lung  Lung  Lung  Lung  Lung  Lung  Lung  Lung  Lung  Lung  Lung  Lung \n[49] Lung  Lung \nLevels: Colon Lung\n\n#for ggplot it is more convenient to work with dataframes\ngenes &lt;- data.frame(tumor,GeneA,GeneB)\n\n#basic plots\n\n#geneA\nggplot(genes, aes(x=tumor, y=GeneA,color=tumor)) +\n  geom_boxplot()\n\n\n\n#geneB with custom colors\nggplot(genes, aes(x=tumor, y=GeneB,fill=tumor)) +\n  scale_fill_manual(values=c(\"#999999\", \"#E69F00\")) +\n  geom_boxplot()\n\n\n\n#together\n#we need to adapt dataset with stack()\ngenes2 &lt;- cbind(stack(genes[,2:3]),tumor)\nnames(genes2) &lt;- c(\"Expression\",\"Gene\",\"Tumor\")\n#generate the plot\np &lt;- ggplot(genes2, aes(x=Gene, y=Expression,fill=Gene)) +\n  scale_fill_manual(values=c(\"#999999\", \"#E69F00\")) +\n  geom_boxplot()\np #see the plot\n\n\n\np + facet_grid(.~ Tumor) #new version\n\n\n\n\nFor these simple plots, the degree of difficulty and the time consumption of making them with base R plot functions like boxplot() or stripchart() or with ggplot() is very similar, but this is only the very tip of the ggplot iceberg.\nCustomization of your plot is very easy thanks to the themes, and other options, as in the examples below. Check for built-in ggplot themes: https://ggplot2.tidyverse.org/reference/ggtheme.html. Also, you can find some packages with custom themes and you can create your own theme (check this article by Emanuela Furfaro).\n\n(q &lt;- p + facet_grid(.~ Tumor) + theme_light())\n\n\n\n(q2 &lt;- p+facet_grid(.~ Tumor) + theme_dark())\n\n\n\n(q3 &lt;- p+facet_grid(.~ Tumor) + theme_linedraw())\n\n\n\nq+ stat_boxplot(geom ='errorbar', width=0.5, alpha=0.5) \n\n\n\nq + theme(legend.position=\"top\")\n\n\n\nq + theme(legend.position=\"bottom\")\n\n\n\nq + theme(legend.position=\"none\") \n\n\n\n\nNow, let’s try some more cool example plots with these same data.\n\nr &lt;- ggplot(genes2, aes(x=Gene, y=Expression,fill=Tumor)) +\n  scale_fill_manual(values=c(\"#999999\", \"#E69F00\")) +\n  geom_boxplot()\n\nr + geom_dotplot(binaxis='y', stackdir='center',\n                 position=position_dodge(0.75))\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\nr + geom_point(pch = 21, position = position_jitterdodge())\n\n\n\n#more examples\na &lt;- ggplot(genes2, aes(x = Expression))\na + geom_density(aes(fill = Gene),alpha=0.4) +\n  scale_fill_manual(values = c(\"#868686FF\", \"#EFC000FF\")) +\n  theme_classic() + facet_grid(.~ Tumor)\n\n\n\nlibrary(RColorBrewer)\na &lt;- ggplot(genes2, aes(x = Gene, y=Expression, fill=Tumor)) + \n  scale_fill_brewer(palette = \"Pastel1\") + \n  geom_violin(alpha=0.4, position=\"dodge\")\na"
  },
  {
    "objectID": "r9.html#color-palettes",
    "href": "r9.html#color-palettes",
    "title": "R8: Plot your data in R - Episode II",
    "section": "2.2 Color palettes",
    "text": "2.2 Color palettes\nWhen you have large datasets or several factors in your data, selecting the colors is not trivial. In R, there are defined color combinations or palettes that you can select in your plot. Moreover, there are also several packages that contain custom color palettes suitable for base plots and/or ggplots, like viridis or RColorBrewer. You may also find interesting the package ggsci, which contains palettes with colors used in scientific journals, data visualization libraries, science fiction movies…\nTo obtain the desired plot, you sometimes need to rotate the axis x labels, which must be done within a theme() argument. You can customize the label rotation, justification, font…\n\ncoli_genomes &lt;- read.csv(file = 'data/coli_genomes_renamed.csv', strip.white = TRUE, stringsAsFactors = TRUE)\np &lt;- ggplot(coli_genomes,aes(x=Strain, y=contigs1kb, fill=Source)) + geom_bar(stat=\"identity\", position = \"dodge\", alpha=0.6) \np\n\n\n\np2 &lt;- p + scale_fill_brewer(palette = \"Dark2\") + theme_linedraw() \np2\n\n\n\np2b &lt;- p + scale_fill_brewer(palette = \"Pastel2\") + theme_linedraw() \np2b\n\n\n\np3 &lt;- p2 + theme(axis.text.x = element_text(angle = 45,\n    hjust = 1, face = \"bold\"))\np3\n\n\n\n\nIn the example above, we generated a plot with some custom palettes. The palettes are available in ggplot, but in order to explore and edit them, you need to install the package.\n\nif(!require(RColorBrewer)) install.packages(\"RColorBrewer\")\nlibrary(RColorBrewer)\ndisplay.brewer.all()\n\n\n\ndisplay.brewer.all(colorblindFriendly = TRUE) #only colorblind-friendly!\n\n\n\n#display only the a number of colors from specific palette\ndisplay.brewer.pal(n = 3, name = 'Dark2')"
  },
  {
    "objectID": "r9.html#saving-your-plot",
    "href": "r9.html#saving-your-plot",
    "title": "R8: Plot your data in R - Episode II",
    "section": "2.3 Saving your plot",
    "text": "2.3 Saving your plot\nFinally, saving plots is also very easy with ggplot2, check the function ggsave().\n\n#save \nggsave(filename = \"plot_p3.svg\", plot = p3,width = 10,height = 6)\n\nOf course, you can also do it the same way than with Base plots:\n\nsvg(\"plot_p3b.svg\")\nprint(p3)\ndev.off()\n\nquartz_off_screen \n                2"
  },
  {
    "objectID": "r9.html#example-3-plotting-multiple-variables",
    "href": "r9.html#example-3-plotting-multiple-variables",
    "title": "R8: Plot your data in R - Episode II",
    "section": "2.4 Example 3: Plotting multiple variables",
    "text": "2.4 Example 3: Plotting multiple variables\nOne of the nice ways to summarize data is plotting more than one variable in the same plot. However, you should consider that different data may need different scale to be render in the same plot. Thus, you should scale up/down the data of one variable to the values of the second variable. Then, for the secondary axis, you just need to apply the same scaling factor in the opposite direction.\nIn the following example, we plot the number of Contigs and the Assembly length from our coli_genomes.csv.\n\n#barplot\nplots2 &lt;- ggplot(data=coli_genomes) + \n  geom_bar(aes(x = Strain, y = Contigs, color = Source, fill = Source), stat=\"identity\") \n#add the points and adjust the scale in the right axis\nplots2b &lt;- plots2 +\n  geom_point(aes(x = Strain, y = Assembly_length/15000,  fill = Source, alpha=0.8),col=\"black\",shape=21, size=3)\nplots2b\n\n\n\nplots2c &lt;- plots2b  +   scale_y_continuous(name = \"Number of Contigs\",limits = c(0, 400), expand=c(0,0), sec.axis = sec_axis(~15000 * ., name  = \"Assembly length\")) \nplots2c\n\n\n\n#add colors and more customization\nplots2custom &lt;- plots2b +   \n    scale_fill_brewer(palette = \"Set1\") + scale_color_brewer(palette = \"Set1\") +\n    theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, face = \"bold\")) +\n    guides(alpha = \"none\", color = \"none\") \nplots2custom\n\n\n\n\nWe did the plot in different stages, to check each of the variables and the scale of the secondary axis before apply the customization.\nAs you noticed, axis customization may entail adjust the limits with limits(), the axis expansion below and above those limits with expand(), and other aspects as the axis ticks with breaks(). We also can add/remove a legend with the argument guides()."
  },
  {
    "objectID": "r9.html#interactive-plots",
    "href": "r9.html#interactive-plots",
    "title": "R8: Plot your data in R - Episode II",
    "section": "3.1 Interactive plots",
    "text": "3.1 Interactive plots\nAnother interesting application of ggplot is its use for the generation of interactive plots to be published on websites. One that you might find of interest is the package heatmaply, that generates interactive heatmaps. Further, I find awesome the use of the package plotly() for very quick upgrade of any plot as interactive.\nSee the examples:\n\n#install.packages(\"ggplotly\")\n#install.packages(\"heatmaply\")\n\nlibrary(heatmaply)\n\nLoading required package: plotly\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\nLoading required package: viridis\n\n\nLoading required package: viridisLite\n\n\n\n======================\nWelcome to heatmaply version 1.4.2\n\nType citation('heatmaply') for how to cite the package.\nType ?heatmaply for the main documentation.\n\nThe github page is: https://github.com/talgalili/heatmaply/\nPlease submit your suggestions and bug-reports at: https://github.com/talgalili/heatmaply/issues\nYou may ask questions at stackoverflow, use the r and heatmaply tags: \n     https://stackoverflow.com/questions/tagged/heatmaply\n======================\n\n#aggregate the data with xtabs\nmatrix &lt;- xtabs( ~ coli_genomes[,4]+coli_genomes[,5])\n#xtabs objects must be converted into dataframes, but heatmaply requires a matrix...\nheatmaply(as.data.frame.matrix(matrix))\n\n\n\n\nlibrary(plotly)\nggplotly(plots2custom)"
  },
  {
    "objectID": "r9.html#plotting-a-sequence-logo-with-gglogo",
    "href": "r9.html#plotting-a-sequence-logo-with-gglogo",
    "title": "R8: Plot your data in R - Episode II",
    "section": "3.2 Plotting a sequence logo with gglogo",
    "text": "3.2 Plotting a sequence logo with gglogo\nR is very useful for many applications in Biochemistry and Molecular Biology, and ggplot is a very good example of that.\n\n#script by Luis del Peso\nCounts&lt;-matrix(c(2,38,0,0,0,0,10,8,4,7,21,9,9,11,9,23,4,15,10,0,46,0,0,0,32,17,\n                 10,15,11,18,9,16,23,11,20,8,10,8,0,46,0,46,2,17,21,13,14,15,\n                 27,8,13,8,16,22,24,0,0,0,46,0,2,4,11,11,0,4,1,11,1,4,6,1),\n               nrow=4,byrow = T,\n               dimnames=list(Nucleotide=c(\"A\",\"C\",\"G\",\"T\"),Pos=1:18))\ncounts &lt;- data.frame(Counts)\nnames(counts) &lt;- 1:18\ncounts &lt;- cbind(stack(counts),c(\"A\",\"C\",\"G\",\"T\"))\ncolnames(counts) &lt;- c(\"values\",\"pos\",\"nucleotide\")\nggplot(counts, aes(x=pos, y=values, fill=nucleotide)) + \n    geom_bar(position=\"stack\", stat=\"identity\")\n\n\n\n\nThis is not a very interesting plot. Now, in order to plot the PSSM as a sequence logo, we are going to use the package ggseqlogo. Also, to arrange plot, we will use the packages “gridExtra”, which is very handy and commonly used.\n\nif(!require(ggseqlogo)) install.packages(\"ggseqlogo\", repos = \"https://cran.rstudio.com/\", dependencies = TRUE)\n\nLoading required package: ggseqlogo\n\nlibrary(ggseqlogo)\n\nggseqlogo(Counts) \n\nWarning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the ggseqlogo package.\n  Please report the issue at &lt;https://github.com/omarwagih/ggseqlogo/issues&gt;.\n\n\n\n\n#install.packages(\"gridExtra\")\np1 &lt;- ggseqlogo(Counts, method=\"prob\")\np2 &lt;- ggseqlogo(Counts, method=\"bits\")\ngridExtra::grid.arrange(p1, p2)\n\n\n\n\nLet’s plot some protein logo from the example sequences in the package. Remember that we are working with an add-ons to ggplot. That means that all ggplot elements can be used.\n\ndata(ggseqlogo_sample)\nstr(seqs_aa)\n\nList of 4\n $ AKT1   : chr [1:172] \"VVGARRSSWRVVSSI\" \"GPRSRSRSRDRRRKE\" \"LLCLRRSSLKAYGNG\" \"TERPRPNTFIIRCLQ\" ...\n $ CDK2   : chr [1:444] \"LGPYEAVTPLTKAAD\" \"SGSESGYTTPKKRKA\" \"GSESGYTTPKKRKAR\" \"VTTQTPLTPEQLRAV\" ...\n $ AURKB  : chr [1:106] \"ITVTRRVTAYTVDVT\" \"PWPYGRQTAPSGLST\" \"APSLRRKTMCGTLDY\" \"PSKKRTQSIQGKGKG\" ...\n $ CSNK2A2: chr [1:80] \"KHEEEEWTDDDLVES\" \"VWDHIEVSDDEDETH\" \"TSADVKMSSSEEVSW\" \"SADVKMSSSEEVSWI\" ...\n\n\n\nhead(seqs_aa)\n\n$AKT1\n  [1] \"VVGARRSSWRVVSSI\" \"GPRSRSRSRDRRRKE\" \"LLCLRRSSLKAYGNG\" \"TERPRPNTFIIRCLQ\"\n  [5] \"LSRERVFSEDRARFY\" \"PSTSRRFSPPSSSLQ\" \"GRSGRGKSFTLTITV\" \"SGRGKSFTLTITVFT\"\n  [9] \"SGRAREASGAPTSSK\" \"CVRMRHLSQEFGWLQ\" \"GTRGRLESAQATFQA\" \"ARRARSKSLVMGEQS\"\n [13] \"QFRRRAHTFSHPPSS\" \"ATRGRGSSVGGGSRR\" \"ATRKRRWSAPESRKL\" \"PFRGRSRSAPPNLWA\"\n [17] \"FIFMRRSSLLSRSSS\" \"GQRDRSSSAPNVHIN\" \"PQRERKSSSSSEDRN\" \"LKRKRRPTSGLHPED\"\n [21] \"QTSKRHDSDTFPELK\" \"RFRDRSFSEGGERLL\" \"TRRTRTFSATVRASQ\" \"KLRRRFSSLHFMVEV\"\n [25] \"GSRVRVDSTAKVAEI\" \"SRRPRRRTFPGVASR\" \"LKKIRLDTETEGVPS\" \"GQVPRTWSEKDLREL\"\n [29] \"SIRPRPGSLRSKPEP\" \"THLSRVRSLDLDDWP\" \"LLRDTFTSLGYEVQK\" \"AKRPRVTSGGVSESP\"\n [33] \"HKRRRSRSWSSSSDR\" \"RRRRRSRTFSRSSSQ\" \"DHWIRMRSQEGRPVQ\" \"EDQPRCQSLDSALLE\"\n [37] \"QDTQRRTSMGGTQQQ\" \"LGGGRVKTWKRRWFI\" \"RTPRRSKSDGEAKPE\" \"SFRRRHNSWSSSSRH\"\n [41] \"RTRSRRLTFRKNISK\" \"SYKIRFNSISCSDPL\" \"TSRIRTQSFSLQERQ\" \"RVSIRLPSTSGSEGV\"\n [45] \"GGRERLASTNDKGSM\" \"IKRSKKNSLALSLTA\" \"CWRKRVKSEYMRLRQ\" \"ASPARRASAILPGVL\"\n [49] \"CLRSRDPSLMVDFIL\" \"GLETRRLSLPSSKAK\" \"LGRERLGSFGSITRQ\" \"KTYRRSYTHAKPPYS\"\n [53] \"KLRRRSTTSRAKLAF\" \"LPRPRSCTWPLPRPE\" \"SPRRRAASMDNNSKF\" \"TFRPRTSSNASTISG\"\n [57] \"QSRPRSCTWPLQRPE\" \"APRRRAVSMDNSNKY\" \"QSRPRSCTWPLPRPE\" \"APRRRAASMDSSSKL\"\n [61] \"TFRPRSSSNASSVST\" \"LLRERKSSAPSHSSQ\" \"QTRNRKASGKGKKKR\" \"QTRNRKMSNKSKKSK\"\n [65] \"INRERQKSLTLTPTR\" \"ANLNRSTSVPENPKS\" \"SGRARTSSFAEPGGG\" \"SGRPRTTSFAESCKP\"\n [69] \"RKRSRKESYSIYVYK\" \"LYRSRMNSLEMTPAV\" \"SQRGRSGSGNFGGGR\" \"RALSRQLSSGVSEIR\"\n [73] \"RVRVRLLSGDTYEAV\" \"GGRSRSGSIVELIAG\" \"EMRERLGTGGFGNVC\" \"VPSGRKGSGDYMPMS\"\n--- Cropped output ---\n\nggseqlogo(seqs_aa, ncol=4)\n\n\n\nggseqlogo(seqs_aa, ncol=2) +   theme_light()"
  },
  {
    "objectID": "r9.html#regular-expressions-as-a-shortcut-to-explore-sequence",
    "href": "r9.html#regular-expressions-as-a-shortcut-to-explore-sequence",
    "title": "R9: R for Molecular Biology",
    "section": "",
    "text": "Biological data, like protein or nucleic acid sequences can be stored and explored in different formats, each following its own structure. As you can imagine, that facilitates the use of regular expressions in any programming language to access that data. The use of regular expressions in R is similar to other languages, particularly, to the use you learnt in Python. Anyway, I suggest that you have a look to the References below.\nMoreover, for advanced manipulation of string object, I’d advice the package Strings.\nIn the code below, we are going to use some simple regular expressions to explore and analyze the data in a multifasta file containing the whole proteome of the bacteria Bacillus thuringiensis HER1410 (HER1410.fasta) in our data folder, using grep(), substr(), sub(), and regexpr().\n\n#read the text file with readLines()\nproteome &lt;- readLines(\"data/HER1410.fasta\")\n#number of sequences in the multifasta using grep\nlength(grep(proteome, pattern=\"&gt;\"))\n\n[1] 5807\n\n#extract recombinases\ngrep(\"recombinase\", proteome,value=TRUE)\n\n [1] \"&gt;QKO37045.1 recombinase RecA (plasmid) [Bacillus thuringiensis]\"                          \n [2] \"&gt;QKO36998.1 recombinase family protein (plasmid) [Bacillus thuringiensis]\"                \n [3] \"&gt;QKO36701.1 DDE-type integrase/transposase/recombinase (plasmid) [Bacillus thuringiensis]\"\n [4] \"&gt;QKO36696.1 tyrosine recombinase XerS (plasmid) [Bacillus thuringiensis]\"                 \n [5] \"&gt;QKO36060.1 tyrosine-type recombinase/integrase [Bacillus thuringiensis]\"                 \n [6] \"&gt;QKO36057.1 tyrosine-type recombinase/integrase [Bacillus thuringiensis]\"                 \n [7] \"&gt;QKO35589.1 recombinase family protein [Bacillus thuringiensis]\"                          \n [8] \"&gt;QKO35551.1 tyrosine-type recombinase/integrase [Bacillus thuringiensis]\"                 \n [9] \"&gt;QKO35280.1 recombinase family protein [Bacillus thuringiensis]\"                          \n[10] \"&gt;QKO34873.1 site-specific tyrosine recombinase XerD [Bacillus thuringiensis]\"             \n[11] \"&gt;QKO34618.1 tyrosine recombinase XerC [Bacillus thuringiensis]\"                           \n[12] \"&gt;QKO34567.1 recombinase RecA [Bacillus thuringiensis]\"                                    \n[13] \"&gt;QKO34482.1 recombinase family protein [Bacillus thuringiensis]\"                          \n[14] \"&gt;QKO32507.1 recombinase RecQ [Bacillus thuringiensis]\"                                    \n[15] \"&gt;QKO32484.1 tyrosine-type recombinase/integrase [Bacillus thuringiensis]\"                 \n\n#enzymes (aka \"-ases\")\nhead(grep(\"ase\", proteome,value=TRUE))\n\n[1] \"&gt;QKO37046.1 helicase DnaB (plasmid) [Bacillus x1]\"                                \n[2] \"&gt;QKO37045.1 recombinase RecA (plasmid) [Bacillus thuringiensis]\"                  \n[3] \"&gt;QKO37043.1 IS3 family transposase (plasmid) [Bacillus thuringiensis]\"            \n[4] \"&gt;QKO37040.1 serine acetyltransferase (plasmid) [Bacillus thuringiensis]\"          \n[5] \"&gt;QKO37039.1 O-antigen ligase family protein (plasmid) [Bacillus thuringiensis]\"   \n[6] \"&gt;QKO37026.1 HK97 family phage prohead protease (plasmid) [Bacillus thuringiensis]\"\n\nhead(grep(\"ase\", proteome,value=TRUE,ignore.case=TRUE)) #lower- & uppercase\n\n[1] \"&gt;QKO37046.1 helicase DnaB (plasmid) [Bacillus x1]\"                             \n[2] \"&gt;QKO37045.1 recombinase RecA (plasmid) [Bacillus thuringiensis]\"               \n[3] \"&gt;QKO37043.1 IS3 family transposase (plasmid) [Bacillus thuringiensis]\"         \n[4] \"&gt;QKO37040.1 serine acetyltransferase (plasmid) [Bacillus thuringiensis]\"       \n[5] \"&gt;QKO37039.1 O-antigen ligase family protein (plasmid) [Bacillus thuringiensis]\"\n[6] \"SMSCDIDPTEIITRLTPLGTRIESKNEGATDASEARLTIESVNNGVPYIDHPSGIKEFGIQGKSITWDDV\"        \n\n#extract names\nfastanames &lt;- proteome[grep(proteome, pattern=\"&gt;\")] #extract the headers of all the sequences\nnames_ase &lt;- fastanames[grep(fastanames, pattern=\"ase\")]\n\n\n\nHow would you extract the NCBI protein ID of the enzymes?\n\n sub(names_ase, 1,11) sub(names_ase, 2,11)) substr(names_ase, 1,11) substr(names_ase, 2,11)\n\n\n\n   [1] \"QKO37046.1\" \"QKO37045.1\" \"QKO37043.1\" \"QKO37040.1\" \"QKO37039.1\"\n   [6] \"QKO37026.1\" \"QKO37024.1\" \"QKO37023.1\" \"QKO37022.1\" \"QKO37016.1\"\n  [11] \"QKO37013.1\" \"QKO37011.1\" \"QKO37005.1\" \"QKO36998.1\" \"QKO36995.1\"\n  [16] \"QKO36992.1\" \"QKO36990.1\" \"QKO36988.1\" \"QKO36987.1\" \"QKO36983.1\"\n  [21] \"QKO36981.1\" \"QKO36979.1\" \"QKO36974.1\" \"QKO36973.1\" \"QKO36972.1\"\n  [26] \"QKO36971.1\" \"QKO36970.1\" \"QKO36966.1\" \"QKO36958.1\" \"QKO36956.1\"\n  [31] \"QKO36954.1\" \"QKO36952.1\" \"QKO36940.1\" \"QKO36939.1\" \"QKO36938.1\"\n  [36] \"QKO36936.1\" \"QKO36935.1\" \"QKO36933.1\" \"QKO36932.1\" \"QKO36931.1\"\n  [41] \"QKO36928.1\" \"QKO36927.1\" \"QKO36926.1\" \"QKO36924.1\" \"QKO36923.1\"\n  [46] \"QKO36922.1\" \"QKO36921.1\" \"QKO36920.1\" \"QKO36918.1\" \"QKO36912.1\"\n  [51] \"QKO36909.1\" \"QKO36907.1\" \"QKO36905.1\" \"QKO36904.1\" \"QKO36903.1\"\n  [56] \"QKO36899.1\" \"QKO36897.1\" \"QKO36896.1\" \"QKO36894.1\" \"QKO36892.1\"\n  [61] \"QKO36891.1\" \"QKO36890.1\" \"QKO36889.1\" \"QKO36887.1\" \"QKO36885.1\"\n  [66] \"QKO36884.1\" \"QKO36883.1\" \"QKO36878.1\" \"QKO36875.1\" \"QKO36871.1\"\n  [71] \"QKO36866.1\" \"QKO36864.1\" \"QKO36855.1\" \"QKO36853.1\" \"QKO36850.1\"\n  [76] \"QKO36849.1\" \"QKO36848.1\" \"QKO36845.1\" \"QKO36844.1\" \"QKO36843.1\"\n  [81] \"QKO36842.1\" \"QKO36841.1\" \"QKO36833.1\" \"QKO36832.1\" \"QKO36829.1\"\n  [86] \"QKO36828.1\" \"QKO36822.1\" \"QKO36820.1\" \"QKO36814.1\" \"QKO36813.1\"\n  [91] \"QKO36812.1\" \"QKO36808.1\" \"QKO36807.1\" \"QKO36806.1\" \"QKO36805.1\"\n  [96] \"QKO36802.1\" \"QKO36796.1\" \"QKO36793.1\" \"QKO36791.1\" \"QKO36782.1\"\n--- Cropped output ---\n\n\nHow would you remove the `&gt;’ from the fasta headers?\n\n sub(names_ase, 2,11) sub(“&gt;”,““,names_ase) substr(names_ase, 2,150)\n\n\n\n   [1] \"QKO37046.1 helicase DnaB (plasmid) [Bacillus x1]\"                                                                                                             \n   [2] \"QKO37045.1 recombinase RecA (plasmid) [Bacillus thuringiensis]\"                                                                                               \n   [3] \"QKO37043.1 IS3 family transposase (plasmid) [Bacillus thuringiensis]\"                                                                                         \n   [4] \"QKO37040.1 serine acetyltransferase (plasmid) [Bacillus thuringiensis]\"                                                                                       \n   [5] \"QKO37039.1 O-antigen ligase family protein (plasmid) [Bacillus thuringiensis]\"                                                                                \n   [6] \"QKO37026.1 HK97 family phage prohead protease (plasmid) [Bacillus thuringiensis]\"                                                                             \n   [7] \"QKO37024.1 terminase large subunit (plasmid) [Bacillus thuringiensis]\"                                                                                        \n   [8] \"QKO37023.1 P27 family phage terminase small subunit (plasmid) [Bacillus thuringiensis]\"                                                                       \n   [9] \"QKO37022.1 HNH endonuclease (plasmid) [Bacillus thuringiensis]\"                                                                                               \n  [10] \"QKO37016.1 nuclease (plasmid) [Bacillus thuringiensis]\"                                                                                                       \n  [11] \"QKO37013.1 DNA primase (plasmid) [Bacillus thuringiensis]\"                                                                                                    \n  [12] \"QKO37011.1 AAA family ATPase (plasmid) [Bacillus thuringiensis]\"                                                                                              \n  [13] \"QKO37005.1 sigma-70 family RNA polymerase sigma factor (plasmid) [Bacillus thuringiensis]\"                                                                    \n  [14] \"QKO36998.1 recombinase family protein (plasmid) [Bacillus thuringiensis]\"                                                                                     \n  [15] \"QKO36995.1 IS3 family transposase (plasmid) [Bacillus thuringiensis]\"                                                                                         \n  [16] \"QKO36992.1 low molecular weight phosphotyrosine protein phosphatase (plasmid) [Bacillus thuringiensis]\"                                                       \n  [17] \"QKO36990.1 cadmium-translocating P-type ATPase (plasmid) [Bacillus thuringiensis]\"                                                                            \n  [18] \"QKO36988.1 lysoplasmalogenase (plasmid) [Bacillus thuringiensis]\"                                                                                             \n  [19] \"QKO36987.1 signal peptidase I (plasmid) [Bacillus thuringiensis]\"                                                                                             \n  [20] \"QKO36983.1 IS4 family transposase (plasmid) [Bacillus thuringiensis]\"                                                                                         \n--- Cropped output ---\n\n\n\n\n\n\n\n# regexpr returns the indices of the string where the match begins and the length of the match\n(r &lt;- regexpr(\"(.*)DNA(.*)\",fastanames[1:200])) #find all the lines with \"DNA\" (only 200 lines to don't make it too long)\n\n  [1] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [26] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [51] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [76] -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[101] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[126] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[151] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[176] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\nattr(,\"match.length\")\n  [1] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [26] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 58 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [51] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n [76] -1 -1 95 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[101] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[126] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[151] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 68 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n[176] -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\nattr(,\"index.type\")\n[1] \"chars\"\nattr(,\"useBytes\")\n[1] TRUE\n\n#which ones?\n(dna &lt;- which(r &gt; 0, arr.ind = TRUE))\n\n[1]  37  78 165\n\ndna.length &lt;- attr(r,\"match.length\")[dna]\n#extract the results with a loop\nnombres &lt;- list()\nfor (i in 1:length(dna)){\n  nombres[[i]] &lt;- substr(fastanames[dna[i]], 1, 1 + dna.length[i])\n}\nhead(nombres)\n\n[[1]]\n[1] \"&gt;QKO37013.1 DNA primase (plasmid) [Bacillus thuringiensis]\"\n\n[[2]]\n[1] \"&gt;QKO36972.1 DNA-3-methyladenine glycosylase 2 family protein (plasmid) [Bacillus thuringiensis]\"\n\n[[3]]\n[1] \"&gt;QKO36885.1 DNA topoisomerase III (plasmid) [Bacillus thuringiensis]\""
  },
  {
    "objectID": "r9.html#working-with-sequences-as-objects",
    "href": "r9.html#working-with-sequences-as-objects",
    "title": "R9: R for Molecular Biology",
    "section": "",
    "text": "The use or regular expressions is very convenient for some quick overview of the (multi)fasta files, but not for more specific analyses. Working with sequences can be facilitated with diverse packages, being seqinr and Biostrings the more widely used in the literature.\nIn the following example, we are reading the same protein multifasta and we will obtain basic statistics, subset and save fasta sequences using SeqinR (=seqinr).\n\n#reading fasta and playing with it\n#install.packages(\"seqinr\")\nlibrary(seqinr)\nprots &lt;- read.fasta(\"data/HER1410.fasta\")\nstr(prots)\n\nList of 5807\n $ QKO37049.1: 'SeqFastadna' chr [1:67] \"m\" \"t\" \"l\" \"t\" ...\n  ..- attr(*, \"name\")= chr \"QKO37049.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37049.1 hypothetical protein HBA75_30905 (plasmid) [Bacillus thuringiensis]\"\n $ QKO37048.1: 'SeqFastadna' chr [1:142] \"m\" \"k\" \"v\" \"l\" ...\n  ..- attr(*, \"name\")= chr \"QKO37048.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37048.1 hypothetical protein HBA75_30875 (plasmid) [Bacillus thuringiensis]\"\n $ QKO37047.1: 'SeqFastadna' chr [1:326] \"m\" \"e\" \"k\" \"k\" ...\n  ..- attr(*, \"name\")= chr \"QKO37047.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37047.1 cytosolic protein (plasmid) [Bacillus thuringiensis]\"\n $ QKO37046.1: 'SeqFastadna' chr [1:146] \"m\" \"e\" \"k\" \"q\" ...\n  ..- attr(*, \"name\")= chr \"QKO37046.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37046.1 helicase DnaB (plasmid) [Bacillus x1]\"\n $ QKO37045.1: 'SeqFastadna' chr [1:359] \"m\" \"a\" \"a\" \"t\" ...\n  ..- attr(*, \"name\")= chr \"QKO37045.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37045.1 recombinase RecA (plasmid) [Bacillus thuringiensis]\"\n $ QKO37044.1: 'SeqFastadna' chr [1:110] \"m\" \"s\" \"y\" \"d\" ...\n  ..- attr(*, \"name\")= chr \"QKO37044.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37044.1 hypothetical protein HBA75_31045 (plasmid) [Bacillus thuringiensis]\"\n $ QKO37043.1: 'SeqFastadna' chr [1:293] \"m\" \"k\" \"a\" \"a\" ...\n  ..- attr(*, \"name\")= chr \"QKO37043.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37043.1 IS3 family transposase (plasmid) [Bacillus thuringiensis]\"\n $ QKO37042.1: 'SeqFastadna' chr [1:102] \"m\" \"g\" \"k\" \"i\" ...\n  ..- attr(*, \"name\")= chr \"QKO37042.1\"\n  ..- attr(*, \"Annot\")= chr \"&gt;QKO37042.1 helix-turn-helix domain-containing protein (plasmid) [Bacillus thuringiensis]\"\n--- Cropped output ---\n\ngetName(prots)\n\n   [1] \"QKO37049.1\" \"QKO37048.1\" \"QKO37047.1\" \"QKO37046.1\" \"QKO37045.1\"\n   [6] \"QKO37044.1\" \"QKO37043.1\" \"QKO37042.1\" \"QKO37041.1\" \"QKO37040.1\"\n  [11] \"QKO37039.1\" \"QKO37038.1\" \"QKO37037.1\" \"QKO37036.1\" \"QKO37035.1\"\n  [16] \"QKO37034.1\" \"QKO37033.1\" \"QKO37032.1\" \"QKO37031.1\" \"QKO37030.1\"\n  [21] \"QKO37029.1\" \"QKO37028.1\" \"QKO37027.1\" \"QKO37026.1\" \"QKO37025.1\"\n  [26] \"QKO37024.1\" \"QKO37023.1\" \"QKO37022.1\" \"QKO37021.1\" \"QKO37020.1\"\n  [31] \"QKO37019.1\" \"QKO37018.1\" \"QKO37017.1\" \"QKO37016.1\" \"QKO37015.1\"\n  [36] \"QKO37014.1\" \"QKO37013.1\" \"QKO37012.1\" \"QKO37011.1\" \"QKO37010.1\"\n  [41] \"QKO37009.1\" \"QKO37008.1\" \"QKO37007.1\" \"QKO37006.1\" \"QKO37005.1\"\n  [46] \"QKO37004.1\" \"QKO37003.1\" \"QKO37002.1\" \"QKO37001.1\" \"QKO37000.1\"\n  [51] \"QKO36999.1\" \"QKO36998.1\" \"QKO36997.1\" \"QKO36996.1\" \"QKO36995.1\"\n  [56] \"QKO36994.1\" \"QKO36993.1\" \"QKO36992.1\" \"QKO36991.1\" \"QKO36990.1\"\n  [61] \"QKO36989.1\" \"QKO36988.1\" \"QKO36987.1\" \"QKO36986.1\" \"QKO36985.1\"\n  [66] \"QKO36984.1\" \"QKO36983.1\" \"QKO36982.1\" \"QKO36981.1\" \"QKO36980.1\"\n  [71] \"QKO36979.1\" \"QKO36978.1\" \"QKO36977.1\" \"QKO36976.1\" \"QKO36975.1\"\n  [76] \"QKO36974.1\" \"QKO36973.1\" \"QKO36972.1\" \"QKO36971.1\" \"QKO36970.1\"\n  [81] \"QKO36969.1\" \"QKO36968.1\" \"QKO36967.1\" \"QKO36966.1\" \"QKO36965.1\"\n  [86] \"QKO36964.1\" \"QKO36963.1\" \"QKO36962.1\" \"QKO36961.1\" \"QKO36960.1\"\n  [91] \"QKO36959.1\" \"QKO36958.1\" \"QKO36957.1\" \"QKO36956.1\" \"QKO36955.1\"\n  [96] \"QKO36954.1\" \"QKO36953.1\" \"QKO36952.1\" \"QKO36951.1\" \"QKO36950.1\"\n [101] \"QKO36949.1\" \"QKO36948.1\" \"QKO36947.1\" \"QKO36946.1\" \"QKO36945.1\"\n [106] \"QKO36944.1\" \"QKO36943.1\" \"QKO36942.1\" \"QKO36941.1\" \"QKO36940.1\"\n [111] \"QKO36939.1\" \"QKO36938.1\" \"QKO36937.1\" \"QKO36936.1\" \"QKO36935.1\"\n [116] \"QKO36934.1\" \"QKO36933.1\" \"QKO36932.1\" \"QKO36931.1\" \"QKO36930.1\"\n [121] \"QKO36929.1\" \"QKO36928.1\" \"QKO36927.1\" \"QKO36926.1\" \"QKO36925.1\"\n--- Cropped output ---\n\n\n\nprots[[1]]\n\n [1] \"m\" \"t\" \"l\" \"t\" \"l\" \"h\" \"n\" \"g\" \"d\" \"l\" \"n\" \"k\" \"l\" \"a\" \"r\" \"d\" \"t\" \"s\" \"q\"\n[20] \"d\" \"s\" \"i\" \"i\" \"l\" \"r\" \"v\" \"g\" \"e\" \"q\" \"e\" \"m\" \"v\" \"s\" \"l\" \"k\" \"s\" \"n\" \"g\"\n[39] \"d\" \"i\" \"y\" \"v\" \"k\" \"g\" \"k\" \"l\" \"v\" \"e\" \"n\" \"d\" \"k\" \"e\" \"v\" \"v\" \"d\" \"g\" \"m\"\n[58] \"r\" \"e\" \"l\" \"l\" \"m\" \"l\" \"s\" \"r\" \"k\" \"r\"\nattr(,\"name\")\n[1] \"QKO37049.1\"\nattr(,\"Annot\")\n[1] \"&gt;QKO37049.1 hypothetical protein HBA75_30905 (plasmid) [Bacillus thuringiensis]\"\nattr(,\"class\")\n[1] \"SeqFastadna\"\n\nseq &lt;- getSequence(prots[[1]])\ngetName(prots[[1]])\n\n[1] \"QKO37049.1\"\n\npaste(seq, collapse= \"\")\n\n[1] \"mtltlhngdlnklardtsqdsiilrvgeqemvslksngdiyvkgklvendkevvdgmrellmlsrkr\"\n\npaste(prots[[1]], collapse= \"\")\n\n[1] \"mtltlhngdlnklardtsqdsiilrvgeqemvslksngdiyvkgklvendkevvdgmrellmlsrkr\"\n\naaa(toupper(seq))\n\n [1] \"Met\" \"Thr\" \"Leu\" \"Thr\" \"Leu\" \"His\" \"Asn\" \"Gly\" \"Asp\" \"Leu\" \"Asn\" \"Lys\"\n[13] \"Leu\" \"Ala\" \"Arg\" \"Asp\" \"Thr\" \"Ser\" \"Gln\" \"Asp\" \"Ser\" \"Ile\" \"Ile\" \"Leu\"\n[25] \"Arg\" \"Val\" \"Gly\" \"Glu\" \"Gln\" \"Glu\" \"Met\" \"Val\" \"Ser\" \"Leu\" \"Lys\" \"Ser\"\n[37] \"Asn\" \"Gly\" \"Asp\" \"Ile\" \"Tyr\" \"Val\" \"Lys\" \"Gly\" \"Lys\" \"Leu\" \"Val\" \"Glu\"\n[49] \"Asn\" \"Asp\" \"Lys\" \"Glu\" \"Val\" \"Val\" \"Asp\" \"Gly\" \"Met\" \"Arg\" \"Glu\" \"Leu\"\n[61] \"Leu\" \"Met\" \"Leu\" \"Ser\" \"Arg\" \"Lys\" \"Arg\"\n\naaa(toupper(unlist(seq)))\n\n [1] \"Met\" \"Thr\" \"Leu\" \"Thr\" \"Leu\" \"His\" \"Asn\" \"Gly\" \"Asp\" \"Leu\" \"Asn\" \"Lys\"\n[13] \"Leu\" \"Ala\" \"Arg\" \"Asp\" \"Thr\" \"Ser\" \"Gln\" \"Asp\" \"Ser\" \"Ile\" \"Ile\" \"Leu\"\n[25] \"Arg\" \"Val\" \"Gly\" \"Glu\" \"Gln\" \"Glu\" \"Met\" \"Val\" \"Ser\" \"Leu\" \"Lys\" \"Ser\"\n[37] \"Asn\" \"Gly\" \"Asp\" \"Ile\" \"Tyr\" \"Val\" \"Lys\" \"Gly\" \"Lys\" \"Leu\" \"Val\" \"Glu\"\n[49] \"Asn\" \"Asp\" \"Lys\" \"Glu\" \"Val\" \"Val\" \"Asp\" \"Gly\" \"Met\" \"Arg\" \"Glu\" \"Leu\"\n[61] \"Leu\" \"Met\" \"Leu\" \"Ser\" \"Arg\" \"Lys\" \"Arg\"\n\naaa(toupper(as.vector(seq)))\n\n [1] \"Met\" \"Thr\" \"Leu\" \"Thr\" \"Leu\" \"His\" \"Asn\" \"Gly\" \"Asp\" \"Leu\" \"Asn\" \"Lys\"\n[13] \"Leu\" \"Ala\" \"Arg\" \"Asp\" \"Thr\" \"Ser\" \"Gln\" \"Asp\" \"Ser\" \"Ile\" \"Ile\" \"Leu\"\n[25] \"Arg\" \"Val\" \"Gly\" \"Glu\" \"Gln\" \"Glu\" \"Met\" \"Val\" \"Ser\" \"Leu\" \"Lys\" \"Ser\"\n[37] \"Asn\" \"Gly\" \"Asp\" \"Ile\" \"Tyr\" \"Val\" \"Lys\" \"Gly\" \"Lys\" \"Leu\" \"Val\" \"Glu\"\n[49] \"Asn\" \"Asp\" \"Lys\" \"Glu\" \"Val\" \"Val\" \"Asp\" \"Gly\" \"Met\" \"Arg\" \"Glu\" \"Leu\"\n[61] \"Leu\" \"Met\" \"Leu\" \"Ser\" \"Arg\" \"Lys\" \"Arg\"\n\npmw(toupper(unlist(seq))) \n\n[1] 7602.706\n\n(stats1 &lt;- AAstat(toupper(seq), plot = T))\n\n\n\n\n\n\n\n\n$Compo\n\n *  A  C  D  E  F  G  H  I  K  L  M  N  P  Q  R  S  T  V  W  Y \n 0  1  0  6  5  0  5  1  3  6 10  4  4  0  2  5  5  3  6  0  1 \n\n$Prop\n$Prop$Tiny\n[1] 0.2089552\n\n$Prop$Small\n[1] 0.4477612\n\n$Prop$Aliphatic\n[1] 0.2835821\n\n$Prop$Aromatic\n[1] 0.02985075\n\n$Prop$Non.polar\n[1] 0.4477612\n\n$Prop$Polar\n[1] 0.5522388\n\n$Prop$Charged\n[1] 0.3432836\n\n$Prop$Basic\n[1] 0.1791045\n\n$Prop$Acidic\n[1] 0.1641791\n\n\n$Pi\n[1] 6.557213\n\nbarplot(stats1$Compo, bty=\"7\")\n\n\n\n\n\n\n\n#cool color palette\nlibrary(RColorBrewer)\ncoul = colorRampPalette(brewer.pal(9, \"Set1\"))(20) #palette is expanded from 9 to 20 colors\nbarplot(stats1$Compo, col=coul, bty=\"7\")\n\n\n\n\n\n\n\n#dotplot\ngrep(\"recombinase\",getAnnot(prots))\n\n [1]    5   52  349  354  990  993 1461 1499 1770 2177 2432 2483 2568 4543 4566\n\ndotPlot(prots[[5]],prots[[2483]], wsize=3, nmatch=2)\n\n\n\n\n\n\n\ndotPlot(prots[[2177]],prots[[2432]], wsize=3, nmatch=2)\n\n\n\n\n\n\n\ndotPlot(prots[[2177]],prots[[2432]], col=c(\"floralwhite\",\"dodgerblue\"), \n        wsize=6, nmatch=3, xlab=getName(prots[[2177]]),ylab=getName(prots[[2432]]))\n\n\n\n\n\n\n\n#extract the recombinases to a new file\nrecs &lt;- prots[grep(\"recombinase\",getAnnot(prots))]\n#save to a file\nwrite.fasta(recs, names=names(recs), file.out=\"data/recombinases.faa\")\n\nAs you noticed in the code above, the function read.fasta() can read any (multi)fasta file containing a protein or nucleic acid sequence and create a list of lists. Thus, if you want to extract a sequence as a single element, you need to extract if from the list with unlist() or convert it to a vector with as.vector().\nOnce you read the fasta, you can extract the headline name with getName() or the sequence with getSequence(). Additionally, you can obtain and plot basic stats or compare sequences using dotPlot(). Moreover, if you extract a subset of sequences, you can use write.fasta() to save those sequences in a new fasta file.\nFinally, as in the example below with HER1410 genome sequence (HER1410nt.fasta), you can also play with a nucleotide sequence and obtain some useful data, like the GC() content, the encoded proteins or the reverse complementary sequence with rev() and comp(), respectively.\n\n#now the nt sequence\nplasmid_nt &lt;- read.fasta(\"data/HER1410nt.fasta\")\n\ncount(unlist(plasmid_nt),3)\n\n\n aaa  aac  aag  aat  aca  acc  acg  act  aga  agc  agg  agt  ata  atc  atg  att \n2150  705 1089 1420  715  253  321  484  900  437  525  601  992  589  955 1354 \n caa  cac  cag  cat  cca  ccc  ccg  cct  cga  cgc  cgg  cgt  cta  ctc  ctg  ctt \n 848  248  455  548  325   85  126  235  297  126  190  308  448  200  360  569 \n gaa  gac  gag  gat  gca  gcc  gcg  gct  gga  ggc  ggg  ggt  gta  gtc  gtg  gtt \n1273  273  418  829  467  128  212  384  641  224  292  516  620  230  484  755 \n taa  tac  tag  tat  tca  tcc  tcg  tct  tga  tgc  tgg  tgt  tta  ttc  ttg  ttt \n1093  547  501 1093  592  305  262  475  955  404  666  663 1174  615  889 1310 \n\ncount(unlist(plasmid_nt),5)\n\n\naaaaa aaaac aaaag aaaat aaaca aaacc aaacg aaact aaaga aaagc aaagg aaagt aaata \n  307   110   200   221   138    31    58    45   189    77   105    86   133 \naaatc aaatg aaatt aacaa aacac aacag aacat aacca aaccc aaccg aacct aacga aacgc \n  109   170   171   144    25    64    73    34    14    15    24    42    13 \naacgg aacgt aacta aactc aactg aactt aagaa aagac aagag aagat aagca aagcc aagcg \n   28    45    48    24    46    66   199    38    70   104    71    20    38 \naagct aagga aaggc aaggg aaggt aagta aagtc aagtg aagtt aataa aatac aatag aatat \n   61    97    33    40    70    96    13    55    84   112    80    52   116 \naatca aatcc aatcg aatct aatga aatgc aatgg aatgt aatta aattc aattg aattt acaaa \n   81    41    35    54   130    51    95    83   162    77   128   123   109 \nacaac acaag acaat acaca acacc acacg acact acaga acagc acagg acagt acata acatc \n   54    63    67    27    18    20    24    52    34    39    44    37    27 \nacatg acatt accaa accac accag accat accca acccc acccg accct accga accgc accgg \n   36    64    38    13    28    20    14     2     3    14    13    10     9 \naccgt accta acctc acctg acctt acgaa acgac acgag acgat acgca acgcc acgcg acgct \n   16    19     5    20    29    45     8    14    35     9     6     2    23 \nacgga acggc acggg acggt acgta acgtc acgtg acgtt actaa actac actag actat actca \n   32    13     8    21    35    10    27    33    39    24    20    44    30 \nactcc actcg actct actga actgc actgg actgt actta acttc acttg acttt agaaa agaac \n    7    10    14    44    10    27    36    49    28    41    61   171    51 \nagaag agaat agaca agacc agacg agact agaga agagc agagg agagt agata agatc agatg \n  109    84    35    16    19    13    54    15    39    39    85    19    75 \nagatt agcaa agcac agcag agcat agcca agccc agccg agcct agcga agcgc agcgg agcgt \n   76    89    12    28    37    12     7    12    20    33    17    20    26 \nagcta agctc agctg agctt aggaa aggac aggag aggat aggca aggcc aggcg aggct aggga \n   35    11    41    37    72    26    46    48    24     1    19    21    38 \nagggc agggg agggt aggta aggtc aggtg aggtt agtaa agtac agtag agtat agtca agtcc \n   17    23    23    51    20    59    37    73    21    28    65    28    13 \nagtcg agtct agtga agtgc agtgg agtgt agtta agttc agttg agttt ataaa ataac ataag \n    9    16    42    18    35    26    60    35    63    69   133    52    53 \nataat ataca atacc atacg atact ataga atagc atagg atagt atata atatc atatg atatt \n   84    79    29    40    46    46    25    20    36    79    74    77   119 \natcaa atcac atcag atcat atcca atccc atccg atcct atcga atcgc atcgg atcgt atcta \n   94    32    37    63    50     8    16    39    40    11    17    32    59 \natctc atctg atctt atgaa atgac atgag atgat atgca atgcc atgcg atgct atgga atggc \n   18    25    48   184    36    36    94    65    17    20    48    80    35 \natggg atggt atgta atgtc atgtg atgtt attaa attac attag attat attca attcc attcg \n   47    69    73    29    34    88   114    92    85   100    83    36    45 \nattct attga attgc attgg attgt attta atttc atttg atttt caaaa caaac caaag caaat \n   50   111    43    91    76   153    60    89   126   133    45    57    99 \ncaaca caacc caacg caact caaga caagc caagg caagt caata caatc caatg caatt cacaa \n   44    11    18    42    59    32    32    47    63    25    38   103    39 \ncacac cacag cacat cacca caccc caccg cacct cacga cacgc cacgg cacgt cacta cactc \n   12    26    22    14     3    10    17    14     7    11    11    13     8 \ncactg cactt cagaa cagac cagag cagat cagca cagcc cagcg cagct cagga caggc caggg \n   12    29    52    15    28    46    39    10    26    27    29    13    19 \ncaggt cagta cagtc cagtg cagtt cataa catac catag catat catca catcc catcg catct \n   35    34    16    14    52    37    26     7    63    37    15    13    29 \ncatga catgc catgg catgt catta cattc cattg cattt ccaaa ccaac ccaag ccaat ccaca \n   38    15    21    18    68    35    46    80    46    14    28    35    27 \nccacc ccacg ccact ccaga ccagc ccagg ccagt ccata ccatc ccatg ccatt cccaa cccac \n    5     6     4    24    17    16    21    18    16     9    39    14     3 \ncccag cccat cccca ccccc ccccg cccct cccga cccgc cccgg cccgt cccta ccctc ccctg \n    7    11     6     4     1     5     3     1     0     2    13     2     5 \nccctt ccgaa ccgac ccgag ccgat ccgca ccgcc ccgcg ccgct ccgga ccggc ccggg ccggt \n    8    19     6     2     8     7     6     3     6     9     3     2     7 \nccgta ccgtc ccgtg ccgtt cctaa cctac cctag cctat cctca cctcc cctcg cctct cctga \n   11     7    10    20    23     6     6    28     7     5     3     6    21 \ncctgc cctgg cctgt cctta ccttc ccttg ccttt cgaaa cgaac cgaag cgaat cgaca cgacc \n    6    18    11    27    16    13    39    50    12    27    32    10     6 \ncgacg cgact cgaga cgagc cgagg cgagt cgata cgatc cgatg cgatt cgcaa cgcac cgcag \n    3    14    10     7     5     9    31     9    38    34    18     7    15 \ncgcat cgcca cgccc cgccg cgcct cgcga cgcgc cgcgg cgcgt cgcta cgctc cgctg cgctt \n   13     9     0     3     4     3     1     4     3    12     5    12    16 \ncggaa cggac cggag cggat cggca cggcc cggcg cggct cggga cgggc cgggg cgggt cggta \n   36     9    18    23     9     5     3    11     9     2     3     7    23 \ncggtc cggtg cggtt cgtaa cgtac cgtag cgtat cgtca cgtcc cgtcg cgtct cgtga cgtgc \n    2    13    17    32    16     5    35    14     5     6    13    24    12 \ncgtgg cgtgt cgtta cgttc cgttg cgttt ctaaa ctaac ctaag ctaat ctaca ctacc ctacg \n   17    20    31    21    19    38    74    23    19    42    24     4    13 \nctact ctaga ctagc ctagg ctagt ctata ctatc ctatg ctatt ctcaa ctcac ctcag ctcat \n   26    24     5    11    20    42    30    33    58    29     9    12    24 \nctcca ctccc ctccg ctcct ctcga ctcgc ctcgg ctcgt ctcta ctctc ctctg ctctt ctgaa \n   13     4     6    11     9     5     4    14    18    10     5    27    76 \nctgac ctgag ctgat ctgca ctgcc ctgcg ctgct ctgga ctggc ctggg ctggt ctgta ctgtc \n    9    13    41    20     3     2    17    24    12    13    31    27    11 \nctgtg ctgtt cttaa cttac cttag cttat cttca cttcc cttcg cttct cttga cttgc cttgg \n   22    39    51    22    29    54    30    16     5    35    45    21    32 \ncttgt cttta ctttc ctttg ctttt gaaaa gaaac gaaag gaaat gaaca gaacc gaacg gaact \n   30    70    27    33    69   205    71    92   140    68    23    28    38 \ngaaga gaagc gaagg gaagt gaata gaatc gaatg gaatt gacaa gacac gacag gacat gacca \n  124    60    60    67    72    43    76   106    34    13    22    29    16 \ngaccc gaccg gacct gacga gacgc gacgg gacgt gacta gactc gactg gactt gagaa gagac \n    5    12    14    22     6    11    16    24    11    14    24    74    15 \ngagag gagat gagca gagcc gagcg gagct gagga gaggc gaggg gaggt gagta gagtc gagtg \n   23    39    21    14    12    13    37     8    21    30    23    20    25 \ngagtt gataa gatac gatag gatat gatca gatcc gatcg gatct gatga gatgc gatgg gatgt \n   43    78    38    37    86    22    18    14    16   103    44    50    62 \ngatta gattc gattg gattt gcaaa gcaac gcaag gcaat gcaca gcacc gcacg gcact gcaga \n   62    43    57    99    82    19    41    62    14     6    10    14    32 \ngcagc gcagg gcagt gcata gcatc gcatg gcatt gccaa gccac gccag gccat gccca gcccc \n   31    23    15    27    16    21    54    18     3    14    15     5     3 \ngcccg gccct gccga gccgc gccgg gccgt gccta gcctc gcctg gcctt gcgaa gcgac gcgag \n    1     1     6     3     5    11    10     4    11    18    24    10     7 \ngcgat gcgca gcgcc gcgcg gcgct gcgga gcggc gcggg gcggt gcgta gcgtc gcgtg gcgtt \n   27    22     1     3     4    26     5     4    16    15     8    16    24 \ngctaa gctac gctag gctat gctca gctcc gctcg gctct gctga gctgc gctgg gctgt gctta \n   38    15    17    38    15    11    11    15    51    22    18    24    31 \ngcttc gcttg gcttt ggaaa ggaac ggaag ggaat ggaca ggacc ggacg ggact ggaga ggagc \n   15    26    36   105    44    47    69    25    10    18    19    53    19 \nggagg ggagt ggata ggatc ggatg ggatt ggcaa ggcac ggcag ggcat ggcca ggccc ggccg \n   28    28    49    13    46    68    32     6    20    26    14     2     3 \nggcct ggcga ggcgc ggcgg ggcgt ggcta ggctc ggctg ggctt gggaa gggac gggag gggat \n    6    12     8    12    18    17    11    17    20    50    12    16    35 \ngggca gggcc gggcg gggct gggga ggggc ggggg ggggt gggta gggtc gggtg gggtt ggtaa \n   19     5    10    14    17    15    13    13    20     4    21    28    66 \nggtac ggtag ggtat ggtca ggtcc ggtcg ggtct ggtga ggtgc ggtgg ggtgt ggtta ggttc \n   28    18    40    18     6    15    14    69    35    29    34    32    28 \nggttg ggttt gtaaa gtaac gtaag gtaat gtaca gtacc gtacg gtact gtaga gtagc gtagg \n   28    56    99    37    29    73    39    12    14    21    36    15    18 \ngtagt gtata gtatc gtatg gtatt gtcaa gtcac gtcag gtcat gtcca gtccc gtccg gtcct \n   19    38    50    50    70    29     9    15    27    23     2     6    11 \ngtcga gtcgc gtcgg gtcgt gtcta gtctc gtctg gtctt gtgaa gtgac gtgag gtgat gtgca \n   16     5     9    12    16    10    14    26    73    15    26    58    30 \ngtgcc gtgcg gtgct gtgga gtggc gtggg gtggt gtgta gtgtc gtgtg gtgtt gttaa gttac \n    5     8    28    72    13    16    31    30    16    15    48    64    29 \ngttag gttat gttca gttcc gttcg gttct gttga gttgc gttgg gttgt gttta gtttc gtttg \n   28    72    42    29    19    42    50    34    39    55    64    44    51 \ngtttt taaaa taaac taaag taaat taaca taacc taacg taact taaga taagc taagg taagt \n   93   193    46   108   123    56    22    24    59    39    21    43    48 \ntaata taatc taatg taatt tacaa tacac tacag tacat tacca taccc taccg tacct tacga \n   92    34    75   110    76    39    57    40    35    11    11    18    24 \ntacgc tacgg tacgt tacta tactc tactg tactt tagaa tagac tagag tagat tagca tagcc \n   14    24    33    42    18    45    60    90    15    26    66    35     7 \ntagcg tagct tagga taggc taggg taggt tagta tagtc tagtg tagtt tataa tatac tatag \n   20    23    29    11    21    32    34    17    27    48    95    50    31 \ntatat tatca tatcc tatcg tatct tatga tatgc tatgg tatgt tatta tattc tattg tattt \n   84    86    39    38    51    79    40    65    61    99    59    90   126 \ntcaaa tcaac tcaag tcaat tcaca tcacc tcacg tcact tcaga tcagc tcagg tcagt tcata \n   97    28    38    65    31    15     7    20    33    20    18    36    51 \ntcatc tcatg tcatt tccaa tccac tccag tccat tccca tcccc tcccg tccct tccga tccgc \n   35    26    72    53    23    29    36    10     7     1     8    13     8 \ntccgg tccgt tccta tcctc tcctg tcctt tcgaa tcgac tcgag tcgat tcgca tcgcc tcgcg \n    7    19    21    10    20    40    33     9     8    42    15     3     3 \ntcgct tcgga tcggc tcggg tcggt tcgta tcgtc tcgtg tcgtt tctaa tctac tctag tctat \n   13    19     7     7    11    27    13    20    32    58    22    17    53 \ntctca tctcc tctcg tctct tctga tctgc tctgg tctgt tctta tcttc tcttg tcttt tgaaa \n   22    11     8    25    23     4    17    28    49    27    48    63   182 \ntgaac tgaag tgaat tgaca tgacc tgacg tgact tgaga tgagc tgagg tgagt tgata tgatc \n   50   128   112    28    15    15    27    34    19    24    35    74    29 \ntgatg tgatt tgcaa tgcac tgcag tgcat tgcca tgccc tgccg tgcct tgcga tgcgc tgcgg \n  100    83    65    19    38    42    15     1     7    13    20     4    15 \ntgcgt tgcta tgctc tgctg tgctt tggaa tggac tggag tggat tggca tggcc tggcg tggct \n   16    44    25    45    35   107    25    48    70    32    14    18    19 \ntggga tgggc tgggg tgggt tggta tggtc tggtg tggtt tgtaa tgtac tgtag tgtat tgtca \n   49    14    19    30    58    27    74    62    67    21    37    68    20 \ntgtcc tgtcg tgtct tgtga tgtgc tgtgg tgtgt tgtta tgttc tgttg tgttt ttaaa ttaac \n   18    12    23    37     6    51    29    70    48    68    88   164    49 \nttaag ttaat ttaca ttacc ttacg ttact ttaga ttagc ttagg ttagt ttata ttatc ttatg \n   50   112    70    30    28    72    91    40    44    51   101    60    85 \nttatt ttcaa ttcac ttcag ttcat ttcca ttccc ttccg ttcct ttcga ttcgc ttcgg ttcgt \n  127    76    23    43    70    55    12    19    30    27    13    14    34 \nttcta ttctc ttctg ttctt ttgaa ttgac ttgag ttgat ttgca ttgcc ttgcg ttgct ttgga \n   57    28    28    86   139    25    37    93    49    11    25    56    74 \nttggc ttggg ttggt ttgta ttgtc ttgtg ttgtt tttaa tttac tttag tttat tttca tttcc \n   23    36    90    63    17    52    99   146    57    84   147    57    35 \ntttcg tttct tttga tttgc tttgg tttgt tttta ttttc ttttg ttttt \n   19    72    88    43    61    70   147    52    89   143 \n\nuco(plasmid_nt[[1]],frame=0)\n\n\naaa aac aag aat aca acc acg act aga agc agg agt ata atc atg att caa cac cag cat \n722 239 389 463 238  84 114 144 286 145 148 192 318 190 328 464 291  88 156 187 \ncca ccc ccg cct cga cgc cgg cgt cta ctc ctg ctt gaa gac gag gat gca gcc gcg gct \n125  22  49  94  94  40  62  90 148  73 158 197 374  82 145 267 125  30  75 130 \ngga ggc ggg ggt gta gtc gtg gtt taa tac tag tat tca tcc tcg tct tga tgc tgg tgt \n241  78  96 184 220  78 181 249 408 194 181 327 178  88  88 155 341 118 185 223 \ntta ttc ttg ttt \n404 206 313 414 \n\nuco(plasmid_nt[[1]],frame=2)\n\n\naaa aac aag aat aca acc acg act aga agc agg agt ata atc atg att caa cac cag cat \n720 234 340 462 233  89  93 175 283 131 182 225 376 182 328 460 300  82 152 177 \ncca ccc ccg cct cga cgc cgg cgt cta ctc ctg ctt gaa gac gag gat gca gcc gcg gct \n 96  37  39  85  97  34  61 117 139  54  96 189 461  97 135 270 183  53  74 140 \ngga ggc ggg ggt gta gtc gtg gtt taa tac tag tat tca tcc tcg tct tga tgc tgg tgt \n215  66 109 193 211  73 144 244 332 167 144 391 210 111  80 177 273 129 247 192 \ntta ttc ttg ttt \n384 200 299 444 \n\n\n\ntranslate(plasmid_nt[[1]])\n\n    [1] \"V\" \"W\" \"S\" \"I\" \"K\" \"H\" \"N\" \"L\" \"T\" \"T\" \"S\" \"N\" \"E\" \"Y\" \"S\" \"*\" \"A\" \"A\"\n   [19] \"I\" \"I\" \"L\" \"F\" \"*\" \"N\" \"L\" \"*\" \"P\" \"L\" \"L\" \"L\" \"V\" \"Q\" \"L\" \"D\" \"S\" \"Y\"\n   [37] \"L\" \"H\" \"E\" \"Q\" \"V\" \"L\" \"*\" \"L\" \"R\" \"L\" \"*\" \"W\" \"K\" \"I\" \"Q\" \"L\" \"H\" \"L\"\n   [55] \"L\" \"L\" \"L\" \"S\" \"*\" \"I\" \"R\" \"C\" \"L\" \"N\" \"C\" \"T\" \"I\" \"H\" \"L\" \"S\" \"T\" \"D\"\n   [73] \"L\" \"K\" \"V\" \"L\" \"L\" \"F\" \"Q\" \"V\" \"K\" \"R\" \"L\" \"Y\" \"Q\" \"L\" \"Y\" \"*\" \"P\" \"V\"\n   [91] \"V\" \"F\" \"E\" \"L\" \"C\" \"S\" \"L\" \"L\" \"G\" \"L\" \"G\" \"L\" \"T\" \"Y\" \"P\" \"F\" \"Y\" \"I\"\n  [109] \"R\" \"S\" \"*\" \"E\" \"Y\" \"L\" \"L\" \"L\" \"*\" \"T\" \"D\" \"I\" \"L\" \"N\" \"V\" \"L\" \"S\" \"Y\"\n  [127] \"L\" \"G\" \"F\" \"C\" \"Y\" \"I\" \"V\" \"L\" \"V\" \"N\" \"Y\" \"L\" \"T\" \"L\" \"L\" \"V\" \"S\" \"L\"\n  [145] \"Q\" \"Y\" \"H\" \"Q\" \"D\" \"Q\" \"R\" \"W\" \"R\" \"L\" \"P\" \"R\" \"G\" \"L\" \"E\" \"I\" \"L\" \"F\"\n  [163] \"Q\" \"L\" \"H\" \"P\" \"L\" \"E\" \"L\" \"E\" \"A\" \"Y\" \"R\" \"M\" \"F\" \"L\" \"Y\" \"D\" \"V\" \"L\"\n  [181] \"S\" \"Y\" \"T\" \"Y\" \"S\" \"S\" \"L\" \"Q\" \"F\" \"Y\" \"Y\" \"G\" \"F\" \"L\" \"L\" \"V\" \"Y\" \"F\"\n  [199] \"P\" \"K\" \"N\" \"A\" \"F\" \"R\" \"I\" \"W\" \"R\" \"T\" \"L\" \"K\" \"H\" \"*\" \"R\" \"I\" \"R\" \"K\"\n  [217] \"N\" \"Y\" \"A\" \"I\" \"*\" \"L\" \"C\" \"L\" \"S\" \"F\" \"Y\" \"Y\" \"L\" \"V\" \"L\" \"V\" \"V\" \"Q\"\n  [235] \"Y\" \"T\" \"K\" \"Y\" \"L\" \"Y\" \"Q\" \"*\" \"K\" \"F\" \"R\" \"N\" \"P\" \"F\" \"E\" \"Q\" \"C\" \"L\"\n  [253] \"L\" \"E\" \"C\" \"R\" \"L\" \"P\" \"S\" \"G\" \"F\" \"F\" \"Q\" \"C\" \"K\" \"S\" \"D\" \"Y\" \"L\" \"*\"\n  [271] \"Y\" \"S\" \"V\" \"Q\" \"H\" \"H\" \"N\" \"*\" \"I\" \"F\" \"S\" \"L\" \"S\" \"*\" \"S\" \"*\" \"R\" \"H\"\n  [289] \"D\" \"C\" \"L\" \"K\" \"I\" \"L\" \"R\" \"C\" \"L\" \"L\" \"Y\" \"L\" \"L\" \"F\" \"*\" \"T\" \"S\" \"R\"\n  [307] \"I\" \"C\" \"I\" \"L\" \"Q\" \"F\" \"Q\" \"P\" \"Q\" \"*\" \"D\" \"*\" \"Y\" \"I\" \"S\" \"F\" \"L\" \"C\"\n  [325] \"L\" \"G\" \"H\" \"I\" \"P\" \"W\" \"V\" \"I\" \"*\" \"L\" \"R\" \"F\" \"S\" \"D\" \"L\" \"I\" \"Q\" \"P\"\n  [343] \"F\" \"C\" \"A\" \"W\" \"N\" \"L\" \"S\" \"H\" \"V\" \"L\" \"L\" \"L\" \"S\" \"L\" \"V\" \"P\" \"I\" \"A\"\n  [361] \"Q\" \"V\" \"S\" \"Q\" \"L\" \"R\" \"*\" \"*\" \"T\" \"F\" \"F\" \"R\" \"*\" \"R\" \"L\" \"L\" \"Y\" \"Q\"\n  [379] \"I\" \"S\" \"L\" \"C\" \"Y\" \"F\" \"*\" \"I\" \"*\" \"H\" \"Y\" \"I\" \"H\" \"P\" \"L\" \"F\" \"L\" \"E\"\n  [397] \"W\" \"N\" \"V\" \"S\" \"L\" \"I\" \"L\" \"N\" \"E\" \"*\" \"I\" \"D\" \"L\" \"I\" \"Y\" \"K\" \"Q\" \"E\"\n  [415] \"*\" \"Y\" \"Q\" \"I\" \"V\" \"F\" \"S\" \"S\" \"Y\" \"L\" \"L\" \"S\" \"F\" \"F\" \"E\" \"K\" \"Q\" \"V\"\n  [433] \"V\" \"L\" \"Y\" \"F\" \"S\" \"H\" \"Y\" \"I\" \"L\" \"H\" \"H\" \"S\" \"N\" \"H\" \"L\" \"Q\" \"L\" \"P\"\n--- Cropped output ---\n\n\n\nGC(plasmid_nt[[1]])\n\n[1] 0.3437746\n\nplasmid_nt[[1]][1:100]\n\n  [1] \"g\" \"t\" \"t\" \"t\" \"g\" \"g\" \"t\" \"c\" \"a\" \"a\" \"t\" \"t\" \"a\" \"a\" \"a\" \"c\" \"a\" \"c\"\n [19] \"a\" \"a\" \"c\" \"c\" \"t\" \"a\" \"a\" \"c\" \"t\" \"a\" \"c\" \"a\" \"t\" \"c\" \"a\" \"a\" \"a\" \"t\"\n [37] \"g\" \"a\" \"a\" \"t\" \"a\" \"c\" \"a\" \"g\" \"t\" \"t\" \"a\" \"g\" \"g\" \"c\" \"t\" \"g\" \"c\" \"g\"\n [55] \"a\" \"t\" \"t\" \"a\" \"t\" \"t\" \"t\" \"t\" \"a\" \"t\" \"t\" \"t\" \"t\" \"g\" \"a\" \"a\" \"a\" \"t\"\n [73] \"c\" \"t\" \"g\" \"t\" \"a\" \"a\" \"c\" \"c\" \"t\" \"t\" \"t\" \"a\" \"t\" \"t\" \"a\" \"c\" \"t\" \"g\"\n [91] \"g\" \"t\" \"g\" \"c\" \"a\" \"a\" \"t\" \"t\" \"g\" \"g\"\n\ncomp(plasmid_nt[[1]][1:100])\n\n  [1] \"c\" \"a\" \"a\" \"a\" \"c\" \"c\" \"a\" \"g\" \"t\" \"t\" \"a\" \"a\" \"t\" \"t\" \"t\" \"g\" \"t\" \"g\"\n [19] \"t\" \"t\" \"g\" \"g\" \"a\" \"t\" \"t\" \"g\" \"a\" \"t\" \"g\" \"t\" \"a\" \"g\" \"t\" \"t\" \"t\" \"a\"\n [37] \"c\" \"t\" \"t\" \"a\" \"t\" \"g\" \"t\" \"c\" \"a\" \"a\" \"t\" \"c\" \"c\" \"g\" \"a\" \"c\" \"g\" \"c\"\n [55] \"t\" \"a\" \"a\" \"t\" \"a\" \"a\" \"a\" \"a\" \"t\" \"a\" \"a\" \"a\" \"a\" \"c\" \"t\" \"t\" \"t\" \"a\"\n [73] \"g\" \"a\" \"c\" \"a\" \"t\" \"t\" \"g\" \"g\" \"a\" \"a\" \"a\" \"t\" \"a\" \"a\" \"t\" \"g\" \"a\" \"c\"\n [91] \"c\" \"a\" \"c\" \"g\" \"t\" \"t\" \"a\" \"a\" \"c\" \"c\"\n\nrev(comp(plasmid_nt[[1]][1:100]))\n\n  [1] \"c\" \"c\" \"a\" \"a\" \"t\" \"t\" \"g\" \"c\" \"a\" \"c\" \"c\" \"a\" \"g\" \"t\" \"a\" \"a\" \"t\" \"a\"\n [19] \"a\" \"a\" \"g\" \"g\" \"t\" \"t\" \"a\" \"c\" \"a\" \"g\" \"a\" \"t\" \"t\" \"t\" \"c\" \"a\" \"a\" \"a\"\n [37] \"a\" \"t\" \"a\" \"a\" \"a\" \"a\" \"t\" \"a\" \"a\" \"t\" \"c\" \"g\" \"c\" \"a\" \"g\" \"c\" \"c\" \"t\"\n [55] \"a\" \"a\" \"c\" \"t\" \"g\" \"t\" \"a\" \"t\" \"t\" \"c\" \"a\" \"t\" \"t\" \"t\" \"g\" \"a\" \"t\" \"g\"\n [73] \"t\" \"a\" \"g\" \"t\" \"t\" \"a\" \"g\" \"g\" \"t\" \"t\" \"g\" \"t\" \"g\" \"t\" \"t\" \"t\" \"a\" \"a\"\n [91] \"t\" \"t\" \"g\" \"a\" \"c\" \"c\" \"a\" \"a\" \"a\" \"c\""
  },
  {
    "objectID": "r9.html#connect-with-sequence-databases-with-seqinr",
    "href": "r9.html#connect-with-sequence-databases-with-seqinr",
    "title": "R9: R for Molecular Biology",
    "section": "",
    "text": "You can query to NCBI, Uniprot and other databases directly using seqinr. The seqinr package was written by the group that created the ACNUC database in Lyon, France (http://pbil.univ-lyon1.fr/databases/acnuc/acnuc.html). The ACNUC database is a database that contains most of the data from the NCBI Sequence Database, as well as data from other sequence databases such as UniProt and Ensembl. the ACNUC database is organised into various different ACNUC (sub)-databases, which contain different parts of the NCBI database, and when you want to search the NCBI database via R, you will need to specify which ACNUC sub-database the NCBI data that you want to query is stored in.\nTo obtain a full list of the ACNUC sub-databases that you can access using seqinr, you can use the choosebank() function from seqinr. Then, you just need to select the database and query your sequence. However, as you can see in the example below it does not work currently. I mentioned this here because I used this previously and found it very useful. In case you want to try it again in the future you can check the examples in the Reference 4 below.\n\nchoosebank()\n\n [1] \"genbank\"         \"embl\"            \"emblwgs\"         \"genbankseqinr\"  \n [5] \"swissprot\"       \"swissprotseqinr\" \"ensembl\"         \"hogenom7dna\"    \n [9] \"hogenom7\"        \"hogenom\"         \"hogenomdna\"      \"hovergendna\"    \n[13] \"hovergen\"        \"hogenom5\"        \"hogenom5dna\"     \"hogenom4\"       \n[17] \"hogenom4dna\"     \"homolens\"        \"homolensdna\"     \"hobacnucl\"      \n[21] \"hobacprot\"       \"phever2\"         \"phever2dna\"      \"refseq\"         \n[25] \"refseq16s\"       \"greviews\"        \"bacterial\"       \"archaeal\"       \n[29] \"protozoan\"       \"ensprotists\"     \"ensfungi\"        \"ensmetazoa\"     \n[33] \"ensplants\"       \"ensemblbacteria\" \"mito\"            \"polymorphix\"    \n[37] \"emglib\"          \"refseqViruses\"   \"ribodb\"          \"taxodb\"         \n\n#select genbank\nchoosebank(\"swissprot\")\nquery(\"pol\",\"AC=P0DPS1\",verbose=TRUE,invisible=FALSE)\n\nI'm checking the arguments...\n... and everything is OK up to now.\nI'm checking the status of the socket connection...\n... and everything is OK up to now.\nI'm sending query to server...\n... answer from server is: code=0&lrank=2&count=1&type=SQ&locus=T \nI'm trying to analyse answer from server...\n... and everything is OK up to now.\n... and the rank of the resulting list is: 2 .\n... and there are 1 elements in the list.\n... and the elements in the list are of type SQ .\n... and there are only parent sequences in the list.\nI'm trying to get the infos about the elements of the list...\n... and I have received 1 lines as expected.\n\npolseq &lt;- getSequence(pol$req[[1]])\n\nError: object 'pol' not found\n\nclosebank()"
  },
  {
    "objectID": "r9.html#the-package-rentrez",
    "href": "r9.html#the-package-rentrez",
    "title": "R9: R for Molecular Biology",
    "section": "",
    "text": "Like seqinr, other R packages allow accessing to NCBI and other databases, including APE or genbankr. The latter takes advantage of the packages rentrez.\nrentrez is an R package that helps users query the NCBI’s databases to download diverse type of data and metadata, including sequences or research papers.\n\nif(!require(rentrez)){\n   install.packages(\"rentrez\", repos = \"https://cran.rstudio.com/\")\n}\n\nLoading required package: rentrez\n\nlibrary(rentrez)\n(pols &lt;- entrez_search(db = \"pubmed\", term = \"DNA polymerase\") )\n\nEntrez search result with 370959 hits (object contains 20 IDs and no web_history object)\n Search term (as translated):  \"dna directed dna polymerase\"[MeSH Terms] OR (\"dna ... \n\nstr(pols)\n\nList of 5\n $ ids             : chr [1:20] \"39621259\" \"39620979\" \"39620947\" \"39620398\" ...\n $ count           : int 370959\n $ retmax          : int 20\n $ QueryTranslation: chr \"\\\"dna directed dna polymerase\\\"[MeSH Terms] OR (\\\"dna directed\\\"[All Fields] AND \\\"dna\\\"[All Fields] AND \\\"poly\"| __truncated__\n $ file            :Classes 'XMLInternalDocument', 'XMLAbstractDocument' &lt;externalptr&gt; \n - attr(*, \"class\")= chr [1:2] \"esearch\" \"list\"\n\n(Gon &lt;- entrez_search(db = \"pubmed\", term = \"Gonzalez\", retmax=100))\n\nEntrez search result with 69977 hits (object contains 100 IDs and no web_history object)\n Search term (as translated):  \"Gonzalez\"[All Fields] \n\nGon$ids #now kept 100\n\n  [1] \"39621129\" \"39619484\" \"39618681\" \"39618641\" \"39617972\" \"39617918\"\n  [7] \"39617385\" \"39616970\" \"39616707\" \"39616660\" \"39616625\" \"39616040\"\n [13] \"39615628\" \"39615375\" \"39614614\" \"39613751\" \"39613322\" \"39613189\"\n [19] \"39612977\" \"39612354\" \"39611842\" \"39610682\" \"39610033\" \"39610022\"\n [25] \"39609566\" \"39609135\" \"39608730\" \"39608561\" \"39608078\" \"39608055\"\n [31] \"39607475\" \"39606794\" \"39606745\" \"39605874\" \"39605663\" \"39605657\"\n [37] \"39605494\" \"39605200\" \"39603856\" \"39603359\" \"39603311\" \"39603275\"\n [43] \"39603015\" \"39602990\" \"39601936\" \"39601306\" \"39601224\" \"39601182\"\n [49] \"39600733\" \"39600286\" \"39600184\" \"39599646\" \"39598551\" \"39598529\"\n [55] \"39598444\" \"39598243\" \"39597369\" \"39597045\" \"39596772\" \"39596764\"\n [61] \"39596530\" \"39595817\" \"39595697\" \"39595414\" \"39594805\" \"39593747\"\n [67] \"39593735\" \"39593573\" \"39592624\" \"39592295\" \"39592089\" \"39591634\"\n [73] \"39591353\" \"39591278\" \"39591008\" \"39590677\" \"39590660\" \"39590502\"\n [79] \"39590142\" \"39589919\" \"39589741\" \"39589489\" \"39588641\" \"39588218\"\n [85] \"39587064\" \"39586935\" \"39585599\" \"39585317\" \"39584832\" \"39584673\"\n [91] \"39584209\" \"39583488\" \"39583298\" \"39583229\" \"39582728\" \"39582125\"\n [97] \"39582032\" \"39581951\" \"39581918\" \"39581725\"\n\n#we can also fetch data\nher1410 &lt;- entrez_search(db = \"nuccore\", term = \"HER1410\") \nher1410$ids\n\n[1] \"1853362518\" \"1853362517\" \"1853362516\" \"1853362515\" \"1852678087\"\n[6] \"1852677931\" \"1852677628\" \"1852672161\" \"183211906\" \n\nher1410_1 &lt;- entrez_fetch(db=\"nuccore\", id=her1410$ids[1], rettype=\"fasta\")\nhead(her1410_1)\n\n[1] \"&gt;NZ_CP050186.1 Bacillus thuringiensis strain HER1410 plasmid pLUSID3, complete sequence\\nGTTTGGTCAATTAAACACAACCTAACTACATCAAATGAATACAGTTAGGCTGCGATTATTTTATTTTGAA\\nATCTGTAACCTTTATTACTGGTGCAATTGGATTCTTACCTACACGAGCAGGTTTTGTGACTTCGACTGTA\\nATGGAAGATACAATTGCATTTACTGCTGCTTTCTTAGATTCGTTGTTTAAATTGTACCATTCATCTTTCA\\nACTGATTTAAAAGTTCTTTTATTTCAAGTGAAGAGGCTGTATCAGTTATATTAGCCAGTTGTTTTTGAAT\\nTATGTTCTCTTCTTGGGTTAGGGTTAACATATCCTTTTTATATTCGTTCTTAGGAATATCTCCTTCTATG\\nAACAGATATTTTAAACGTGCTTTCTTATCTTGGATTCTGTTATATTGTTCTTGTAAATTACTTAACTCTA\\nTTGGTTTCTCTTCAGTATCATCAAGATCAACGATGGCGTCTTCCAAGAGGTTTAGAAATTCTTTTTCAAT\\nTACATCCTCTGGAACTTGAGGCATATCGCATGTTCCTTTATGATGTCTTGAGCTACACCTATAGCTCATT\\nACAATTCTATTATGGCTTCTTACTTGTTTATTTCCCAAAAAATGCTTTCCGCATCTGGCGCACTTTAAAA\\nCATTAGAGAATACGAAAAAATTATGCAATCTAACTTTGCCTCTCTTTCTACTATCTTGTACTTGTTGTAC\\nAGTATACCAAGTATCTTTATCAATAAAAGTTTCGAAATCCTTTTGAGCAATGTCTGTTAGAATGTCGTCT\\nCCCCAGCGGATTTTTCCAATGTAAATCGGATTATTTATAATATAGCGTACAGCATCATAATTGAATATTT\\nTCCCTCTCTTAGTCTTAACGCCACGACTGTTTAAAGATTTTACGATGCTTATTATACCTTTTGTTTTAAA\\nCATCTCGAATATGTATTTTACAATTTCAGCCTCAGTAGGATTGATATATAAGTTTCCTTTGTTTAGGTCA\\nTATCCCATGGGTGATTTAGCTCCGTTTCTCAGACCTAATTCAGCCTTTTTGTGCATGGAATCTCTCACAC\\nGTTCTGCTGTTGTCTCTCGTTCCCATTGCGCAAGTGTCGCAACTAAGGTAATAAACATTCTTCCGGTAGC\\nGGTTGTTGTATCAAATATCTCTGTGCTACTTTTAAATTTAACATTATATTCATCCATTATTTTTAGAATG\\nGAATGTAAGTCTGATACTGAACGAGTGAATCGATCTAATCTATAAACAAGAATAATATCAAATTGTTTTT\\nTCTTCATATCTTTTATCATTTTTTGAAAAGCAGGTCGTTCTGTATTTTTCGCACTATATCCTTCATCACA\\nGTAATCATTTACAACTACCCATCCTTGTGATTTAGCATATTGCTCCAGACGTAATTGCTGCATATCTAAT\\nGAAATACCTTCTTCAACTTGCATATCAGTAGATACGCGTCTATAAATTACACACTTCATTTGCACATACT\\nCCTTTCTTAACTAAATTTCTATATCATATGTTTTATCAAAGCAAATTAGACAAATGTATGGGTCAATCAT\\nTTGATTGACTATTTGGCCCAGTGAGAAATTCTCACTGTTCATCCAACTGAATGAAATCATATAAATCTTC\\nCATATTTACGTTAAGTTGAGAAGCGATATTCTTAGCGGTTTGATAAGACATGATTCTATCATTATTTGCA\\nTAAGAATGAACTTGTTGTTTTTTCATATCTAACTTTAATGCTAAATCTACTTGTGTTAATTTCTTCTCTT\\nTTAAAATTTCATTCAGTCGGCATTTGCCGACTACATACACTGTTTCACCGCCTAATTATTGAATGATCGG\\nACTCACACTGTATAAAAATTTTCCTATAATTCTTATATCCTCGCAGTTATTTTGTGAGTATTGTTGGTCC\\nTTAAAACTTTCGTCATGTGAACAAGGTTCTAAAATTATTAAATCTGTAAATTTATACACCTTTTTTAAAG\\nTTGCGTAATGTCCATTTACAATTACAGCTGCTATTTCTCCGTTTTGTACATCACACTGTTTTTTCAGTAT\\nGGCGTAATGTCCATTAGGAACAATTTTATTCATGGATTCACCGGTAACAACCAGTCCGAATAATTCATCA\\nATACTGTGAGTTTTATATGGAGGTGCAATTCTATCAACTACATCTTCTATAGCTTCCAATGGAACACCAG\\nCTGCTATTTTACCAATAATAGGAATTTCTTTTTTTAGTTCACACTCTATAGGTTTTTCTTGAACTAATTG\\nAAGTTCCCCATCCACAATTTCAACTTTTGTATTCTTATAAGTTGTATCAATATCAGATTTTGTTACTCCA\\nAATACAGCGGCCATTTTTTCTAAAACCCCTGAACTTGGTTTGGCTCTATAATTCATATAATCACTTAAGG\\nTACTTCTTGCAATTCCTATTTGACTAGCTAAATCAGATTGAGTCATATTATTTTTTTTTAAAAAATTCTT\\nTATGTTTCTTACTATGGTTTGTTTTTGTATATCAGTCATACCGTCACCTCCTATTCTGACTACGCTTTTT\\nAATATAACATATTACGAATTATTCGTAAAGCGTTATATCCGTATGGTTTTTTCGTATTTTTGTATTGAAA\\nTTACATAAATTTAGTAATACAATAAATCTCGAAGGAAGGGGGAAACGAAATGGATTATTTGAAAAGAACA\\nTTGAATGAACTTAGGGAAAGCGCAGGGTTCAATCAAGCAGAGCTTGCGGATATATTAGAAGTATCCCCAA\\nAAACGCTATGGTTATACGAACAAGATTCAACAAACATACCAGATGAATTAATTAAAAAGTATATGTATTT\\nGTTCGATGTTCCGTATGAGGATATATTTTTTGGTTCTAAGTACGAAAAATTCGTACAAGTGAAGAAACGT\\nGTACAAGAAAGAGCAAATAATTTAAAAAAAATTGTTTCGTAAAAATTTGCTTTAAATGGGTAGTCCTATT\\nGTCCCACGAACATATAAATGCATTGAGGTGATTGAGGATGAGTGGGGGACAAATCATTCGTGATGAAAAT\\nGGGTATGTGGTGAAAGTAATCCTTACAAAGGAACAGTGGAAGAAATTTCTAACACCGTTAATACCAGCTG\\nCACGGGAGTTAATAATTCAAAGAAAAGTGGAACAACGAAAAAAAGCAAAATGAATAATTTTTTTAATATA\\nTTTGCGAAATTTGACGATAAATATTGGTTCTACAAATTAAAGGAGAGTGAAAAGCATGAATGGAGTACTA\\nCTAGCAACACGAATTATGAAAGGGCATGAAGTTGTTAAAAAATGCGCAGAAGCAAGAAATAACCCTTTAC\\nTATTAGAAGCTATGGAATCAGAAGCAAAACGTAAGTTATACGAAATGAACTGTAAGGTTTCAAATCGAAG\\nACCAACTATGAAAAGTCAAGGGGACATTTTCAAAAAATATTGCTAGAGGAGGTGAGTTAATTGAAGGAAG\\nTAACGGTAATTTTTAAATCAGGTGCTAAAGCAAGTTTTACAGTAGAGGAATTTGCGACATTTAAAAATGG\\nATTTGGAGCTTTAACAAAAATCGAGTATACAGGTGCTAATAAGAAAGTACCCTTCCACATTGGATTAAGT\\nAATATCGATGCAATATTTGTGGAAGACATTGGTGGAAAGGAATCTACTAAAGAACCTGATCATCCAATTG\\nAAGATTTCTATGGTTGTGAAATTAAGCAAGATGATAAGTATTTTATGTTCGGACAAAATGCCGTGCTTGA\\nAGGGAATCTAACAAATTACTTAATTGCGGAACAAAATGTTGAATGCTTTCGAGCTGTATAAAAAGGAAAG\\nGGCGGTAAGGAGTGTTGGCAAATGATTTGTTTGAAGAGAAACAACATCTAGTGTTTGCTGCAATTAAACA\\nACAATTTGGAAGTATGACAAGGGCTGCGAAAATCGCAGAGTTAAACAATATGGAACTTGATGATTTAATT\\nCAATTCGGTCGTATGTATTTATGGGAGCGTTGTTTAAAGCATGATCCAGAGAGAATAGAAACGTTTAGTG\\nCATACGTAATGAGAGGTATGAAATGGGCCATGAGTGATGAACTTCACTTGAAAGGGAGCCTGTTTAAGAT\\nTAGCAGACGGATTAGTCATGAAGAAAGGAATAAAATCAACATTCATTCGATTGACTATCATCAAGAGGAG\\nGAAGAGGTACACGGATTTTATGCTGTGTCTCCTATCGATGTGGAAGAAGAGGTAACCAAACATATCGAAT\\nTTGAAGAAGTAACGAGCGTTCTTGAAGAAAAAGAAAAGTCCATCATTATGCACGTTGGTGAAGGGTATAC\\nCACAGAAGAGATTGCTGTGAAATTAGAAATGAAAAAATCAACAGTTCATACAACGAAAACACGTGCGTTT\\nAAAAAGATGAACCCAGATTATAAGCCAATAAAACAAAAATCCTTTTTCTTGGGAAAGAGGATAATAAAGA\\nGAAACCGCCAGTTGGGGCTGACGGTCTAATAAAAACACATGTTGAGGTCATTATAGCATGAATTGATTTT\\nGTGTAAAGGAGAGGCTATGTCTTGAAGAACGGTAAAAAGCCAAACAAACGTGAAAAAATTCATATTCAAT\\nCACACGATTTAAATCCACAGGATTGGTTGATTTATAAGAAAGTAAATAAGGAATTGCATTTGGTCCATCG\\nGACTACTGGTGTAACTCGTATAATTCCAAATTTATAGATTAGGAGAAAGATATAAATGGCTAATGAAATC\\nACGCCTAAATTAGTTGCTGATATAACAGATAAAAGTTTTGGCATACAGCTAATTGTTACTGGTCTTGCTC\\nACTTAGTAGAGGAAGAGGGATATACACCACATGAAGCATTAAGTATCGCTCGTTACACAGGAAATAATTG\\nTTTCCATGCGTTAGCAGAATTGAAGAAGGAGGCTAAAAAATGAACGACAAACCAATTGATGAATTAGTCG\\nCGGAAAAGGTTATGGGATGGATAAAACCACCTGAAACATCAATCCTTAAATCAATGTGGGTTTCTAAGCC\\nAATAGGTATGGTTCATCGTGAATTACCTAAATTTAGTATGAATATGAAAGATGCATGGTTAGTTGTTGAT\\nAAATTACAAGAGTCATTTAAATCAGTGGAAATATTTATTGAAGACAGAATGACAAATGTGATTATAACTG\\nAACATTTCCCAAGTGGACATCTAAAAGATAAATATCAGGGATATGAAAGATCGGCTCCTTTAGCTATTTG\\nCAAAGCTGCATTAAAAGCTGTAGGGGAGGAATGGCAGTAATGGATATTAAATCAGTTGCTAAAGCTGTAC\\nAAGTTATTCGAGAAGCACAAAATGAACATGGAATCATTAGGATTGATGGAAAGGAAGTACATCTAAAAAA\\nTGAAGTATTGGAATCATTGTTAGATGAATCTCAGACTAAGCCTTTAATACTAAGACGTGAATCCAAGTAT\\nTATCCTTATGAAGTTTCCTTTATTAATGATCATGTAACCTATTTCTCTCTTTACACTGAAGAAAGAATGA\\nAAGAGAAAATTGGAGGGATACCAAATGCTCGAAAATTCAATGGTAATCGGGAACCGTCAGGACTCCCCAT\\nTCAATAACGTGATGGATCATTGTCAAAGTTGTGGTAAAGAAATCTATTTTGATGAAGAGTACCGAGATAT\\nTGATGGTGATTACATACACGATGAAACAGATTGTATCAAACAATATGTAGAGTCTCATTCCATAAAGAAA\\nGTAGCTGGTGAGTAAAATGAACGCTGCTATTGAAGAATTAGAAAAGTCATTATATGTGGAGCAAGGGAGA\\nTTAAAAGACTATCACGGCAAGCTAGAGAGGGTAATAGAAAGAAAACCAATCCTTGAAAAGAATATCCAAG\\nATACTGAAAGCAAGATCCAGGACATTGAAGCTTCAATTTTTGTTCTGAAAAATATGGTGAAGGAGTGAAT\\nTAATTGGAAATCACAAATGGTGCTGAAATTATCAAAAGTGAAAAAGCAAAAATTATCATTTATTCAAAAC\\nCAGGTAACGGTAAAACAACGGTTGCTGGATTGTTACCAGGTAAAACATTGGTGTTTGATATCGATGGGAC\\nAAGTCAGGTGTTATCGGGTTATAAAAATGTAGATGTAGCTAAAATTGATGGTGAAAATCCACATGATAGC\\nATTTTACAATTCTTTGCACTTGCTAAAACAAACATTGGTAAGTATGACAACATCTTTATCGATAACTTAA\\nCGCATTACCAAAAGTTATGGCTGCTTAATAAAGGTGAAAAAACAAAAAGCGGTATGCCTGAATTAAAGGA\\nCTATGCTTTACTAGATAACCACCTTTTAAAGTTAGTAGAAACATTTAATTCATTAGATGCAAATGTTATT\\nTTCACAGCTTGGGAGACAACAAGAAATATCACTCATGATGATGGTCAGCAATATACACAATTCATTCCGG\\nATATTCGTGATAAAATCGTAAATCACATTATGGGAATCGTTCATGTTGTTGGTCAATTAGTGAAAAAGGC\\nAGATGGTACAAGAGGTTTTGTTTTAGAAGGTAATCAAAGTATTTTTGCTAAGAATCATTTAGATCAGCGT\\nAAAGGTTGCGTACAACAAGAATTATTAGTGTCATCCACAAACTAAAATACAGGGGGAAATAAACAATGAG\\nTTTTAAATTTAAATTTGATGAAGAAAATGTATCACAAGGGTTTGGATTGGTAGAGGAAGGTAAGTATGAA\\nGTTACAATTATTACTGCTGAAGCAAAAGAATGGCAAGGTCAATATTCTATTGGATTTGATGTGGAAATCC\\nGTTCAGATATTGAACAAAAACATCAAGGAGCAAAAATCCTATATAACACTCTATATCTAACTACTAACAT\\nTCAAGAATATGCAGAGGACACGGAAAGAAGACGTAACTCATTCTTAAAAGCTTGCGGATACACAGGTAAA\\nCAGGATTTGGAATTAAATGTTGTTGTACGTGAGATTGTAGGTAAAACGGTTTTAGCTTATGTAAAACATG\\nAAACAAATAAGGATGAAAAAACATTTGCTAAAGTTAAATTTGTGGCACCATCGAATGTAAAGCCGTCTGA\\nACCAAGTGGACCACCGATTACTGTTGGCGATGATGATTTACCATTCTAAATAACTAAATAGAGAGGTCGG\\nTTTTGTCGACTTCTCTTTTTTATACCCTAAAAAGTTAATTGGAGGGCGCAATGAAAGAAAATCCATACAA\\nTTTTAATGAAATTCCTGCTGAATTAAAGGGCCTTCCCCAGTGGATCTTATGGAAGCTTGAAACCAGAAAT\\nAATAAACAAACAAAAGTACCCTATCAAGTAGATGGAGAAATGGCCCAAGCAAATAATAGACGTACCTGGT\\nCAACATTTGCAACGGCAGTCAAATTTTATTTAGAAGGTGACTATGATGGAATCGGGTTCGTGTTTAGCAG\\nGCAGGACAATTACATCGGAATCGATATTGATAAGTGTGTTACGGACGGAAAAACAAATGCTTTTGCAACG\\nGAAATTATCGATACATTAGATAGTTATACGGAGTTTTCACCTTCAGGAAAAGGTATCCACATCATTATCA\\nAAGGGAACCTTCCACAATCTGTTTTAGGTACAGGACGAAAAAATACAAAGCACGGTTTAGAAATTTACTC\\nATACGGACGTTTCTTTACCTTTACTGGAAATCGTGAGAATTCCAATGATGTATACGAGCGAACGGATGAA\\nCTAGCTGAAGTATTTGAAAAATATTTTGATGATAGCGACATTCAAGGTCGTGTAAATTTAGCAGAGTTTG\\nAAAAAGATGAAATCAAAATTTCGAACGATGCTCTATGGGAAAGGATGTTTAGAAGTAAGAATGGTGATGA\\nAATTCGCTCGTTATACAATGGCAGCTTAATAAATGATGATCATTCAGCAAGTGACCTTTCTCTATGTAAT\\nCATTTAGCATTTTGGACAGGGAAATCAGCAATTCGAATGGACTCCATGTTCCGTGAGTCAAGCCTTATAC\\nGTGATAAATGGGACGTTATTCATTTTAGCGATACAAATGAAACATACGGTGAAAGAACGATAGCAACAGC\\nCATTTCATCTACTTCCACAACTATTTTAGATAACAAACAGCAATTCGAAGAATTTTCTTTTGATTTCATG\\nAATGAAGATGCGGTTGAAGTTGTGGAGGACAAACCGAAAAAGAAATTCCGTTTAACTGAATTAGGAAACG\\nCTGAACGTATCGCATATGAATATGGCCATGTAATCAAATATGTTAGCGATATTGGCTGGTACATATGGGA\\nCGGTAAACGCTGGAAGTTGGACACGAAAAAAGAGATTGAAAGAATTACAGCAAAAGTACTTAGAAGTCTT\\nTATAAATCAGAAGATGAATTAGAAACAAAATGGGCTCGAATGTGTGAACGGAGAAATATTCGTATGAATA\\nGCATTAAGGATCTTATGCCATTGGTTCCAGGTGAGCGTGAGGACTTTGATAAGTATAAATACTTGTTCAA\\nTGTTGAAAATGGCATTGTTGATTTAAAAACAGGAAAGTTGCAGCAACATGATCGGGAACTTGGTTTAACT\\nAAAATTACTAATATTTCATTTGATGAAAATGCAAAATGTCCAGAGTGGCTTAATTTCTTAGATCAAATTT\\nTCCAAGGTGATAAGGAACTAACTGAATACATGCAGCGGTTAATTGGTTACTCACTAACAGGGGAAATCAC\\nGGAGCAAATAATGGTCTTCTTAATTGGTGGAGGTTCCAACGGAAAATCGACCTTTATTAATACCATTAAG\\nGACCTTTTGGGTGAATACGGTAAACAAGCAAAATCAGATACTTTCATCAAAAAGAAAGAAACTGGTGCCA\\nATAATGATATTGCTAGATTAGTAGGGGCACGCTTTGTATCTGCAATCGAAAGTGAAGAGGGTGAACAACT\\nCTCAGAAGCTTTTGTAAAACAAATAACAGGCGGTGAGCCAGTATTAGCACGTTTCCTTAGACAAGAGTAT\\nTTTGAATTCATACCAGAGTTTAAAGTGTTCTTTACAACAAACCATAAACCAGTAATTAAAGGTGTAGATG\\nAAGGTATTTGGAGACGTATCCGTTTAGTTCCATTTAACCTGCAGCTACCAAAAGAGAAACGTGATAAGAA\\nATTACCAGAGAAAATTAGCTTAGAAATGCCAGGAATCCTGAATTGGGCAATTGAGGGTTGCTTGAAGTGG\\nCGGAAGTCGGGACTAAACGATCCAGCAATTGTTATGAAAGCAACAGGTGATTATAAAGAGGAAATGGATA\\nTTCTTGGTCCGTTCATGTTTGAATGTTGTTTTAAAAGAGAGGATGTCCAAATTGAAGCAAAAGAATTATA\\nTGAAGTTTATGCGAATTGGTGTTTTAGAAATGGTGAACATCAATTAAAAAATAGAGCCTTTTACCGAATT\\nTTAGAATCCCAAGGATTCAAAAGAGAACGTGGCAGCAAAAACAAGTATTACATCAAAGGTGTTACTCTAA\\nCCGACCGAAAAAATACTTTTAAGCAGCAAAAGTTACTGAATTTCGATGAAAATAGCAAAAGTGTTACTAA\\nAAGTAACCCATTTAAAATCACTTAAAACCCTTGATACATAAGGGCTCAAGATACTTTTTATATTCCTTTT\\nGTTACTTTTGTTACTAAAAAATACTATAAACAAAAAATAAATATATATATAAGTATTCTATTAGGAGCTT\\nCTTTGAACTTTTTAGGTAACCTTAGTAACCCGAAAGTAGCATGAGCCGTTGGGGCTGTAAGGCTCAAGGC\\nGTGTTACTAAATGAAAAATAAGAGTAATTTATGGTGTTTTTTAAGTAAAAAACGGTTATTTAAGTAACAC\\nACTTAGTAACGGAGGTTGTATTAAATTGGAAAAACATTATAAAGAACACGGGCTAGAAGATTTTTGGAAA\\nTTTAAAATTATACGATCCAAGAAAAATGAAATTGGTTGTTCAGAAACCTATGAAAAATATAAAAAATGGT\\nGCTATGAAAACAATACTATTCCGAATAAAAGAATTACATTTTTAAGATTCTTAGAAACAAAAGGGTTTGA\\nAATTGTGAAGAGCAAAAAAGAACCATTGTATTTTAAAGGAATGAAGATTAAATGGTGAAAGTTTTATTAA\\nTTTTAAGTGCGATTTGGAAATCAGGTGCAGATATCTATCTTGATAAAAAGGATAATCAAGTTGCGATAAA\\nAAAACAAAATTTAATTCCAGCGGAAGTAATGAAAGCCGCTGAACAAAACTATCAAGCTATTTATGATTGG\\nTTTCAATCTTGGAAAGATGAGAGTGCGGAGAAAATTACGTTAATGAAGATATTTCATCATTTTTGTGGGT\\nGGAAACATAATCAAAAATTACACAATTGGTTAGTTGAAGAAGAAGATTCATTGCAACTGTTTTATGAGTG\\nGACGATTGTCCTTGCTAATAATGGTTGGACAGATGTTTATGAGGATCATCGTCAGTTTGAAAATGATGAA\\nTCAAATGCAATGGCAAGAAAGATATATGAACGTGCGGTTTTATATGCAAGGAAAGGGGCATGAAAATGAG\\nAGAGATAAAATTCCGTGCTTGGGATGGAACGAGTTGGGTTTATAGCGAATGTATATCAAAAGATGGTATT\\nAATTGGTGGATATTAAATAATGAAGATGATAATTGGTTGACGTGTTTAGATCCACAGCAATATACAGGTT\\nTAAAAGACAAGAACGGTAAGGAGATTTATGAAGGAGATATTACAAAAGACAAGTTTGGTAATCTTGATGT\\nTATTTGTTGGATTAATAGTTCAGGTGCATATGCGACTGTGTCGATTAATTTGTATTTAGACGGAGAGTAT\\nGAACATACGGTTGTTGATGAATTTGGAACGGATTGTTTCTTTGAGAATAATGTTCCTGGTGATTTTTTAG\\nAAGTAATCGGAAATATCTACGAAAACCCAGGGTTACTGGAGGATTCAAAATGATTCGTTTCCATTACACA\\nGATAAAGAAATAGAAAAAATCCTTAAAACACTCACTATCGTTATCGATACTCGTGAAAATGTAAATGACC\\nACATTCGTGATTACTTATATCAAAAGGGCATCCCAATTAAAAATCAAAAATTAGATACCGGTGATTATGG\\nTTGCATGATTCCCAAAAATGAAGAGTTAGGAATACCACGTGATATTTATTTAGATCGTCGGATAGAAAGA\\nAAAATGAGTATCGATGAAATTACAAGTAACCTACAAAAAGATACGCAAACAAGATTTGAAAATGAATTGA\\nTTCGATCGAAGGATATTCCATTCACTTTAATTGTGGAAGATCAACGTGGTTACGAGAAAATACTTAAAGG\\nTGATTATAAATCAAGATATAACCCATTGGCATTACTCGGTAGGCTTAATACTTTTAAAGCAAAATATGAT\\nTTTGAAATAGTCTATCTAGATAAAAAGTTTGTTGGTAATTGGATATATTATGTCCTTTATTATCATGCAA\\nAACATTATCTTAAAACAGGTGCATTTTAAGTTCAGAAACGTACAGAAATAACAGAAAAACTTTAGTTCTA\\nATATCAATTTAATATAAAAGGAGTCGGAAGACATGACAAAGGTAAAATTGAACGTATTATTCAAGAAAAT\\nGCAAAAGGATGATAAAAAGGAAGTTTTGATGTTCCACGTATTAAGTGATGAATTACCACATGCTGATGAG\\nTTATTGAAGATGCCAGGTACTATTGTTTATCTAACTGTGGAAAAAAGCGATGTTGAAGCAATTGGTGCTG\\nAATTTGTTTCTATTCAACGTGATAGTAAGAAAACCGTTCTTAAATTCAATGTAAAAGGCGATACGAAAGA\\nTAAAATTAATAAACTTTATCCATTCGCTGGTGAAAATGTTTCTATTACTCTAGAGCCTTCGCAAATGTCG\\nATTGATGAGTTTTACGAAGAACAACATGAAGGAGTGGAGTATAACGTTAATCCTGATGGAACAACTGATG\\nTTGCTCCGGGGCAATTGAAGATTGTTGATGAAGAAACGATTGCTGAATAAAAATTTATCCTGGGCTTCGG\\nCTCAGGATATTAATACATTTTGAATTTTGTTAAGAAATGAGGGTAACTTTTGAAAATTATAAAAGATGAT\\nAAGAAGTGCCAAACATGTATTTTCTATGGTTTATGCACGAAAGCGCACTTACCACACTGCCTAGGAAATG\\nATTACTTCAAAGACAGTGTCCAAAAAGAAAAATAAAACTAAAGCTAAAGCGTTACTTTAATCGGAAATGG\\nCAGGTAATTGACCAAATCACCTGCCATTTGCCTAAACAGTCCGGAGGGGTAAAGCTCCGTTTTGAAAGAG\\nTGTAGCCGACTCGTAGATAGTATGTGTAATGTAAAAAAGATTATTCGTATATCACACGGGATATGAAAAG\\nGAGAATGAAAAATGTCTAACAAATTTGATAAGGACTTTGAAGCAATTACGAATAATGGTGAATTAACGAA\\nAGAAGGAACAGAATTTATAGAAGCTGTAAAGCAATTCGTCGGTACGCAATATGATTCAGAGGATTTAGCG\\nAAATTAATGGTATTAATTATGGCTGCTTTAGATGTGGATGACAATGCTTTTAATACAGCGATATCCGCTT\\nTATATCAAACTGCAATAGAAGTGCAAACAGGTATCAATCTGAATGAATTACTGGATTTAGTGACAAAAGG\\nTGAACCAGGCTTAACTCATTAGGAGAACCCAATGTATTCGACGAGTTTCGACATGAAAACGACCGTCAGA\\nAACATAGTGATTTGAAGTTTTATTTCTTTCTGAATACAAATAGGTGCACAAGTGTTAAAACGTCTTAGAA\\nAGGAAAATAAACGTGTTTTATGAGATGTATTGTTTTTTATAGAAAGTAGGTGAATCATCATTTGTTTGAC\\nTGGCTAAAAGACTATCAGAAATTAGAAGAAGACATTGAGTACTTAGATTACAACTTAGATAAAACAAAAG\\nCAGAATTAAAACGCTGGGTCAGTGGTGATTTGCGAGAGGTACGTTTAACTGCTGAATCGGAAGGTGCAAA\\nGGTAGAAGAACGTATAGAAGCAATTGAATATGAGTTAGCGCACAAGATGAATGCAATGCAGGATGTATTG\\nAAATTGATAAATAGGTTCAAAGGTTTAGAAAATAAAATGTTAAAAATGAAATATGTGGACGGAATGACAT\\nTAGAAGAAATAGCTGAGAATATGAATTATAGTTCTAGTTATATCTATAAGAAACATGCTGAAATAATAAG\\nGAGAATAAAGTTTGCTGAAGAACTTGCACTTTACTGACACCCAGTTTTATGAATGTTAACTCTTGAAGAT\\nATCGATTATAGTAATAACATAAGAAATTGACGAAAGGGCAACTGGTGCACAGTTGCTCTTTTTAATTAAA\\nCAAACCATATCCATATAATAATGATAACAGCAAAGATAATGATTAGTATTTGTGAGAATTTCATAACATG\\nCTCCTTTTAAACTATAGTGTTTGCAAAGGATTGAAGAGGCATTCCTTATGGAGTGTTTTTTATTATGTAA\\nAAATTATATAGGTGGTGTAGAGATGACTTTAACGTTGCATAATGGAGATTTGAATAAGTTAGCAAGAGAT\\nACTTCACAGGACAGTATCATCTTGAGAGTTGGTGAACAAGAAATGGTATCTCTGAAAAGCAATGGAGATA\\nTCTATGTTAAAGGTAAGCTTGTTGAAAACGATAAAGAAGTTGTAGATGGCATGAGAGAGTTATTGATGTT\\nATCTAGGAAAAGGTAAGCGCAAACGTGTTGCATTTTATAAGGATGGTGAAAAGAAGATGTTCTCATATAA\\nAAAACGTATTGAATCCTTAGATGAACTTCATAAAGTTATTGATGCATTAGAAACGTTAAAGAAGGAGTAT\\nCAGATTATCAAAAAGATAGAATGGTCGGAACCTAAATCACCTCTTCCTAAATTACCAAAGAATGTTTGGT\\nATGTTGAAGAAGTTGATACATCTAAAATCTTTTTTACTGATGCTGATGCAATAGTTAAATTAGTTTGTAA\\nAAATTGTGGAATATCGTGTAGAGGGAAAAGAAATCTATTAGAAGGAATGAGTTGTATTTATTGCTTTAAT\\nCACAATACAACAATAGTTTCTTTAGATAAGGAGTTTGAATGTAAATGAAAGTAATTATGGGTGAAGAACC\\nTTTATTACCTAATGGAAAAAGAAATGGAGAAGCTGTTAGAAGTATGCTTGATAAAATTAGGTCGCAAGAA\\nCAGAAAGATAAGGAGAGTGAATGCAAATGATTACTGAAATTAGAAAAACAATATCTGGTACAGAGTATTG\\nGGATAACAAAGAAAAACGAAGTCTATTTGTTCCTACAGATGAAGAACCAGGATTCGAAGTAACTGTTAAT\\nCCTGAGAGTATGATCTTAGGCATGGACATATCAAGTGAACCTGATAAGACAGTAGTTAATTTAAATGGTA\\nTGACAGTGAAACAATTACATGAATATGCTGCATCGATTAATGTTGAGATTCCAGCCGATGTTAAAAAGAA\\nAGAAGACATCATTGATTTACTATCATGAAGTACTGTGCTGAACAAGGCTGCAAGACATTAATCGATAAAG\\nGACGATACTGTCTCAATCATAAACGTAAACAGAAGAAGACAGTTGTGTATTCAAAGAACAGATCATTCTA\\nTCGTACAAAAGCCTGGCAAGATTTAAAGTCATTCTGTTATCAAAGAGACAAAGGATTGTGTCAACGATGT\\nGGAAGGTTTGTGTTTGGTAAGCAAGCACATCATCATCATATTGTTCCAATTAAAATCAATCCTTCATTAA\\nGATTAGATCCAGATAATATCGATACACTTTGTTCTAAGTGTCATCCGATTGTAGAAAGAGAAACAAATGA\\nAAAATACCAGGAAAAGAAAAAGTTCGACTGGAAACTATAAGCCCCCCCTATCAAAAAAAGAAAAGCTGGC\\nCTTATGGGGGGATAGGGAGTGGGGGTGCAAACGCGCACCTCAAAATGGTTTTTTGAAAAAAATTTGTTTT\\nTTTTAGGTGGTGATTTAAGGAATGGCCAGAAAATCGAAGGTCGTAATTGAAGCTGAAAAGAAAAAAGAAT\\nTAGAAGCGCAGCGTATTATGGATGTTTTGGTTGAAGCCGGAACTTATTCGCCAGCGCTCGATCCATTAAT\\nTGAAGTTTATCTTGATGCAGTTGAGATATACAGCGTCAAATATGGATTGTGGAAGAATTCTAATTTTCCA\\nACAGTCCAAAAAACAAAGAATGTAAATGGTGATGTGAAAGAATCAAAGCATCCATTAGCTCAACAAGTTG\\nAAGTTTGGTCTAAGCAAAAAGCGAAATATTTGGGGCAATTAGGACTGGACGGAAAGAACAAAGATTTACT\\nTAAAAAAAGTGGGGTTCTTCTCGAAAAAGGAAAAAATGAAAAAGAGCCCACGGAGTCTACTGATAACAAC\\nAAATTATTGCAATTTAGGCAGAGGTTAAATAGATGATTGATTTTGAAACAAATTACGCTGATATATTCGT\\nTTCGGAAGTAGATGCAGCCCCGCACTTATATCCTGATTCAATTAAATTAGCAATCAAACGATATAAGAAA\\nTGGAAGAAACGAAAAGATATTTGGTTTGATGTTGAAAAAGCAAATGCTATGATTTATTTCACAGAAACAT\\nTCTTAAAACATGCAAAAGGAAAATGGGCAGGACAGCCGTTAATTTTAGAATCCTGGCAAAAGTTCTACTT\\nTGCTAACATTTATGGATGGCAAAAATATAATGAAGATGGTAAAGCGGTGCGAGTGATTCGTACGGCTTAT\\nTTGCAGGTTCCAAAGAAAAACGGAAAAACAATCATGGGCGGTTCACCTGTTATTTATGCGATGTACGGTG\\nAAGGTGTAAAAGGCGCAGATTGTTATATTTCCGCTAATACTTTTGAACAATGTCAAAATGCAGCTGGACC\\nAATTGCATTAACTATTGAAAATAGTCCAGATTTACGGCCAGATACACGTATCTATAAAGGCAAAGAAGAC\\nACGATTAAATCAATTAAATACACATTTGTGGAGGATGATATAAAATATGCAAATGTAATTAAGGTTTTAA\\nCGAAAGATAACGCTGGTAATGAAGGTAAAAACCCGTATATTAATTATTTTGATGAAGTTCATGCTCAAAT\\nGGACCGTGAACAATATGATAACTTACGTTCAGCACAAATTGCCCAAGAAGAACCACTCAACATCATCACT\\nTCCACAGCAGGGAAGAATACCGGCTCGCTTGGAACTCAAATTTATACCTATGCAAAAGAAGTTTTGGATA\\nAGGATAAAGATGATTCTTGGTTCATGATGATCTATGAGCCGAATAAAAAGTTTGATTGGGAAGACCGTGA\\nTGTTTGGCGAATGGTTAACCCGAACATGGATGTATCAGTTAACATGGAGTTTCTTGAAAATGCATTTAAA\\nGAAGCTCAAAACAACAGCTTTAATAAGGCGGAGTTCTTATCAAAGCATTTAGATGTATTTGTTAACTATG\\nCTGAAACATATTTTGATAAAGACCAATTGGATAAAATGCTTGTTGATGATTTAGGAGATATTGAAGGTTT\\nAACTTGTGTTATCGGTGTGGATTTATCAAGACGTACCGATTTAACTTGCGTATCGTTAAATATTCCAACA\\nTACGATGAGGAAGGTCTTTCATTGTTAAAAGTAAAACAAATGTATTTTATTCCAGAGTTTGGAATTGAAG\\nATAAAGAACAGCAAAGAAATGTTCCATATCGGGAATTAGCTGAAAAAGAATTTGTGACGATTTGTCCTGG\\nTAAAACGGTTGACGAAGAAATGGTCAATCAGTACGTTGAATGGGTATTTGAGAACTTTGATTTACGTCAA\\nATTAATTATGATCCAGCGCTTGCTGAAAAGCTTGTTGAGAAGTGGGAAATGCTCGGTATTCAATGTGTGG\\nAAGTTCCACAGTATCCAACTCATATGAATGAACCATTTGATGATTTTGAAATCTTATTGCTTCAGGACCG\\nAATTAAAACTGATAATCAATTATTAATTTATTGTGCAAGCAATGCAAAAGTAATAACTAATATTAATAAT\\nTTAAAAACACCATCTAAACGAAAATCACCGGAGCATATCGATGGGTTTGTGGCCATGTTAATTGGTCATA\\nAAGAAACGTTGAATATGATGGAAGATGCTGTTCCAGATGAAAATTATGATGAATATTTAGATGATATTTA\\nTCGATAGAAAGGCGGTGAGGAATTGGGTTTAAAGGATAGATTTTCAAGTTTTTTACTTAAACAAGCTGAA\\nAAGCGTGGTTTATTCGAAGACATTTTCAATAATGTTGTTCGCTATGGTGGTAGATATGCAGGCGATGATA\\nATATCTTGGAATCTAGTGATGTTTATGAATTACTACAAGATATAAGTAATCAAATGATGTTGGCTGAGAT\\nTGTTGTGGAAGAAAAAGACGGTAAGGAAATTAAAAATGATTCAGCTCTTAAGGTTTTAAAGAATCCAAAC\\nAATTATCTTACACAGTCTGAATTCATTAAGTTAATGACTAATACCTATTTACTTCAAGGTGAAGTCTTTC\\nCAGTGTTGGATGGTGACCAATTACATTTAGCATCTAATGTTTATACAGAATTGGATGATAGATTGATAGA\\nACATTTCAAAGTGAATGGAGAAGAAATTTCATCATTTATGATTCGACATGTGAAGAATATTGGTGCCGAT\\nCATCTAAAAGGTACAGGCATTCTTGATTTAGGTAAGGATACACTTGAAGGTGTTATGTCAGCTGAGAAAA\\nCTTTAACTGATAAGTATAAAAAAGGTGGTTTATTAGCATTCTTACTTAAGCTAGATGCTCATATTAATCC\\nACAAAATGGAGCGCAGTCCAAATTAATTAAAAAGATTTTAGATCAATTGGAATCCATCGATGATGCAAGG\\nTCAGTTAAAATGATTCCACTCGGAAAAGGATATTCAATAGAGACGCTTAAAAGCCCGTTAGACGATGAAA\\nAGACCCTGGCCTATCTAAACGTATACAAAAAGGATTTAGGTAAGTTTTTAGGCGTAAATGTGGACACATA\\nTACGGCCTTGATTAAGGAAGACCTTGAGCAAGCAATGATGTATTTGCATAACAAGGCAGTTAGACCGATA\\nATGAAAAACTTTGAAGACCATTTGAGTCTTCTTTTTTTCGGAAAAAATTCGGATAAACGTATTAAATTCA\\nAGATAAATATCCTTGATTTTGTTACTTATAGCATGAAAACAAACATTGCTTACAACATTGTTCGAACTGG\\nTATTACTTCACCAGATAATGTTGCGGATATGCTTGGATTCCCTATGCAAAATACACCTGAGTCACAAGCG\\nATTTATATTTCAAACGACTTATCAAAAATTGGTGAGAAACAAGCTACAGATGATTCACTGAAGGGAGGTG\\nATGGAAATGGCAAAGACAAAGGAAACACGGACATTTGACATCACCAAATTAAGTACCAGGGATGCTACGG\\nAAGAACAACCTTCCAAGATAACGGGTTATGCAGCCGTATTTAATTCAAAGACAACTATTGGTGGCTGGTT\\nTGATGAAGTTATTGAACCTGGTGCATTTGCTCGTTCTCTTTCTGAGAATGGTGATATTAGAGCGTTATTC\\nAATCACAATTGGGATAATGTCCTAGGGAGAACAAAAAGCGGTACATTGAGACTAGAAGAGGATGAAAAAG\\nGACTTAAATTCGAAATTGAATTACCAAATACATCTGTTGGTCGAGATTTAGCTGAAAGTATGTCCAGGGG\\nAGATATTAACCAATGCTCATTTGGATTTTGGATAACAGAAGAGAATTGGGATTACAGTGTTGAACCAGCA\\nTTAAGGACCATTAAAGAAGTAGAACTTTATGAAATATCGGTTGTTTCAATACCAGCTTATGACGATACGG\\nAAGTATCTTTAGTTCGCAGTAAAGAGATTGGTAAAGAAATAGAACAACGAATGAAAATGATTAAACAAAT\\nAAATCAAATCTTGGGGGAAAAGTAAAATGAACAAACAATTATTATTAGCATTACAAAAACGAAGCAATGA\\nAAGATTAGTGGAATTACGTACACAGGTTGAGAATCCTGAATTACGTGCTGAAGACTTACCAGCAATTCAA\\nGAAGAAATCGATGAAATTAACAAGCAATTGCAAGAAGTTGCGGATGCTTTAGCAAATCTTGAAGATGATG\\nGTGGAGGTGAAGAAGGAAACGAAGATAATGAAGAAGGTGATGAGGGATCTGGTACTGAAGGTTCTGGAGA\\nAGGCGGAGAAGGGCGTGCTAGCAATACTGAAGGTGGAGAAAATAGAAATGGATTAACGCCTGAACAAAGA\\nAGTGCAGCAATGGCAGCTATTGCAACAGGTCTTTCTACTCGAGGCCATAAATCTACTAAAAAGAAAGAGA\\nAAGAAATTCGTTCGGCATTTGCTAACTTTGTAGTTGGGAAAATTACAGAAGCTGAAGCGCGTTCTCTTGG\\nTATTGAAGCTGGTAATGGTTCAGTAACTGTGCCAGAAGTTATTGCGAGCGAAATCATTACTTATGCTCAA\\nGAAGAGAACTTACTACGTAAATATGGTTCAGTTCATAAAACAGCAGGTGATATGAAATATCCTGTTCTTG\\nTTAAGAAAGCAGATGCAAATGTACGTAAGAAGGAACGTAAAGATAGTGATGAAATCGTAGCAACAGATAT\\nTGAATTTGATGAAGTGTTACTTGATCCAGCTGAGTTTGATGCACTTGCTACTGTTACTAAAAAGTTATTA\\nAAAATGACAGGTGCTCCAATTGAGCAAATCGTTGTGGACGAGCTGAAAAAGGCTTATGTTCGTAAAGAAA\\nTTAACTACATGTTCAATGGCGATGATGTAGGTAATGAAAACCCAGGTGCGTTAGCAAAAAAAGCGGTAGC\\nGTTTAAGCCTTCTAATCCAGTTGATTTAAAAGCAAAAGATGCAGGGCAATTAATGTATGATGCATTAGTT\\nGAAATGAAAAATACACCTGTTACAGAAGTAATGAAAAAAGGACGTTGGATTATTAACCGTGCAGCATTAA\\nCAGCAATTGAAAAAATGAAAACAACTGATGGATTCCCATTACTACGTCCAATGACACAAGTAGAAGGTGG\\nTATTGGAAATACGCTTATTGGCTATCCTGTGGACTTTACTGATGCGGCAGACGTAAAAGGAAAACCAGAC\\nGTTCCAGTTTTATATTTTGGTGATATTTCAGCGTTCCATATTCAAGATGTAATTGGCGCTATGGAATTAC\\nAAAAATTGATTGAAAAATTTGCTGGTACAAACAAAGTTGGATTCCAAATTTACAACTTATTAGATGGTCA\\nATTAGTTTATTCTCCATTTGAGCCAGCTGTGTATCGTTTTGAAGTGCAAGCTACAACTGAAGGTAAATAG\\nGTTATGAATGATTTAATTGAGAAATTAAAATCTCATATTCATTGGGAAGAGGGTATGGATGAAACCATGC\\nTCTCTTTTTATATCACTCAAGCAAGGACTTATGTAAAGAATGCGACAGGCAAACAGACCGAATATCTAAT\\nTATTATGGTCGCCGGCATTTTCTATGATTACAGGGTCGCTGAAAAAGAATTAGAACAAGCTCTTGATGCC\\nTTAACACCAATGTTTGTCCAGGAGGTTTATGCTGATGAAGAGAAAGACGAATAAACTCAAATGGATGGGT\\nGAGCTACTTAAATTAGGAGAAACAATTGATCCGGAAAATGACCGAGTTGTTATGGGATATCCATTAGAAC\\nGGAAAATTCGTTATAACAACATTGGAGTTACGGCTACTGATAAATTTACAACGAAAGATACGAATGAAAT\\nTGTAAAGAAAATTGAAGTTCGTATTGATCGAGATATTGAAAACGATCAAAAGGATTATCGTGTAAAAGTT\\nGGTGGCCGTATTTATAACATTGAGCGCATTTATGTGAAAGAAGAAGATCGATTGATGGAGGTGTCACTAT\\nCGTATGCAAATTAGTTTTGAACAGTTGCGAAGCCTTATGAAGAAATCTGGTATTCCAGTTTCTCGTGATA\\nGTGCTCCTACAGGGATTGATTACCCTTATATTGTGTATGAATTTGTGAATGAGCAACAGAAAAGAGCTTC\\nTAATAAGGTTCTAAAAGATATGCCACTTTATCAAATTGCTGTTATTACAAATGGAACTGAAAAAGATTAT\\nGAGCCGTTAAAGGCTGTTTTTAACGAAGCAGGCGTGTCTTATTCTCAATTTGATGGAATGGGTTATGACG\\nAGAATGATGACACTATCACGCAGTTTATAACGTATGTGAGGTGTATCCAGTAATGGCTTCAAATAACAAT\\nGGTTTTGCTGAAGCTTTAGAAGATATTAATACGCTATTACGATTGAATAAAAAGGTCGAACTGGATGTAT\\nTGGACGAAGCAGCGAAGTATTTTGCGAGTAAATTAAAACCAAAAATTAAAGCATCCAGTAAAAACAAGCG\\nGACACATTTAAGGGATAGCCTAAAGATTGTTGTGAAAGATGATCGTGTATCTGTGGAATTTAAAGATGAA\\nGCTTGGTATTGGTACTTAGTTGAACATGGCCATAAAAAAGCAAATGGTAAGGGACGTGTGAAAGGAAAAC\\nACTTTGTTCAAAATACCTTTGATGCAGAAGGTGACAAAATCGCTGATATTATGGCACAAAAAATAATTGA\\nTAGAATGTGAGGATGATATACATGACAGTTGAAAATAAAGAAATTCAATATTCTGTAGGGATCGAAGATT\\nTATATCTGTGCTTGATGAAGGGAAATGAAACTTCTAGTGCACTACCAACTTATGAGGATATCGTTTATAG\\nACAAACGAATATTTCTGATTTAACGATTTCCACTACTTCTACTAATTTTACAAAGTGGGCATCTAACAAA\\nAAAATTATTAACATTGTCAAAAATACAGCGTTTGGATTAGCTTTTAATCTTGCTGGTCTAAATCGTGAAG\\nTAAAAGATAAAATCTTTGCTAAAACACGTAAAAAAGGTGTGTCTTTTGAAACAGCGAAGGCGAAGGCGTA\\nTCCAAAGTTCGCAGTAGGGGTTGTATTCCCTTTAAATGATGGAACAAAAATATTACGTTGGTACCCAAAA\\nTGTACAGTTGCTCCAGTAGAGGAATCTTGGAAAACACAAGGTGATGAAATGACTGTGGATGACATTGCTT\\nACACAATTACAGCAGATCCATTGTTATTTAATGATGTAACACAAGCTGAATTGGATACTGGTGATCCAGA\\nGGCAAAAGGAATTAAAGCTGAAGATTTCCTAAAACAAGTCATTTGTGATGAATCTCAACTAGCGCAGCTA\\nGGTGGAACGACTCAAACAGGTAAATAAGGAGGGTGACTATGGCACGTTTAAGTGATTTAGTTAACGTTAA\\nTATAACTAGGAATAGCATTAAGATACAGGGTGTCTCAATCCCTGTTATTTTCACTTTTGAATCTTTTCCT\\nTATGTGGAAGAAGCATTTGGAACACCTTATCATGAATTTGAAAAAGAAATGAATGATATGTTAAGGAAAG\\nGTCAATTTAGCCTGGGAGAAAATGAAGCGAAATTGATGCGTGCATTAATTTATGCGATGGTACGTAGTGG\\nTGGTACGGAATGTACATTAGATGAATTGAAAGGTGCTATTCCTATGAATGAATTACCTGATATTTTCATC\\nGTTGTATACGAAATTTTCAGTGGCCAAACTTTCCAGAATTCTGATATGGAGAAGTTGAAGCAAGAAAAAA\\nAGTAAAAAACATACTGACTAAAAACGAGGAATCTCAGTCCGAATTGGACTGGGATTTTTATTTTTATGTT\\nGGTAATACGTTGCTTGGTTTAAGTATGAATGACTTCTGGAAAATCACACCTGCACATTTTTTAAAGCAAT\\nTCATCATGCATCTCAGATACAACAATCCGGATGCGTTACATGAGCAGAAAACGAAACAAATTTACACGCT\\nAGATCAAACACCATTCCTATAAGAAATGAGGTGAGAAAATGCCTGGGAATAGTAAAGAAAGAAACGTTGT\\nTCTTAATTTTAAAATGGATGGCCAAGTTCAGTATGCAAATACATTGAAACAAATCAATATGGTTATGAAT\\nAATGCAGCGAAAGAATATAAAAATCATATTGCAGCAATGGGCCAAGATGCGACGATGACTGATAAACTTC\\nTTGCTGAAAAGAAGAAGCTTGAAATTCAAATGGAAGCAGCTAAAAAGCGTACAGCTATGTTGCGTTCTGA\\nATATCAAGCGATGTCCAAGGACACAAGTACAACCGCTGAACAACTCAATAAAATGTATGGAAAGTTACTT\\nGATGCAGAACGTGCTGAAACTACTCTTAATAATGCAATGAAAAGAGTGAATGAAGGTCTTTCAGAGCAAG\\nCCATTGAAGCACGAGAAGCACGTGGAGACATGGAGAAACTTGAAGCTAATACTAAACAACTAGAAGCTGA\\nACAAAAGCGACTAACAAGCTCGTTTAAGCTTCAAAATGCCGAACTAGGAGCGAATGCTAGTGAAGCTGAT\\nAAGTTGGAATTAGCGCAAAAACAATTACGTCAGCAAATGGAAATGACAGATAGAGTCGTCCACAATTTAG\\nAACAACAGTTAAGTGCAGCAAAGCGTGTATATGGTGAGAATTCCACAGAAGTACAGCAACTTGAGACGAA\\nGCTAAACCAAGCTAAAACCACGTTGAAGCAGTTTGAGAATTCATTACAGAGTGTTGGTCGAAGTGGAGAT\\nCAAGCAGCAGATGGTATGGAGAAATTAGGAAAGAAGTTAGACTTGCACAATATGATGGAAGCTGTCCAAA\\nTGCTACAAGGAGTATCACAACAGTTAATTGAACTTGGTAAAGCTACAGTGGGTATAGCGATAGATTTTGA\\nTAGGTCACAAAGGAAAATACAATCCTCATTAGGGCTAACTCAAAAGGGTGCAGAGAATCTTGGCAAGATT\\nTCAAAAGATGTGTGGAAAAAGGGATTTGGTGAAAGCCTTGAAGAGGTCGATAATTCACTGATTAAAGTCT\\nATCAAAATATGCGTGATGTTCCACATGAAGAATTACAAGGGGCATCAGAGAATGTTTTAACATTAGCTAA\\nAGTTTATGATGTGGACTTAAATGAAGCAACTCGTGGCGCAGGACAATTAATGTCTCAATTTGGTTTATCT\\nACACAACAAACATTTGATTTATTGGCAGCAGGTGCTCAAGCTGGGTTGAACTATTCTGATGAACTCTTTG\\nACAATCTTTCAGAGTATGCACCGTTATTCAAACAAGCGGGTTTTAGTGCGGATGAAATGTTTACCATTCT\\nTGCGAATGGAACCGCAAATGGATCGTATAACTTGGATTACATTAATGACCTTGTAAAAGAGTTTGGTATC\\nCGTGTACAAGATGGTTCTAAAGGTGTATCAGAAGGATTCGGTGATTTATCAGAAGAGACACAAAAAGTAT\\nGGGAATCATTCAATGAAGGTAAGGGAACCGCGGCTGCTGTATTTAATGCTGTATTAGGTGACTTACGTAA\\nAATGGATGACAAAGTAAAGGCAAACCAGATTGGTGTTGCTCTATTCGGTACCAAATGGGAAGACATGGGG\\nGCAGACGCCGTACTAAGTTTAAATGATGTGAATGGTGGTCTGGGTGATGTAAATGGCCGTATGGACGAAA\\nTGAAAAAACTGCAAGAAGAATCACTGGGCCAAAAATTCCAGAGCGCATTAAGGGAAACTCAAACAGCACT\\nTGAGCCTTTAGGAAAACAACTTGCGGATCTTGCAGCAGATGTTCTCCCTAAAGCTGCAAAAGGACTATCA\\nGACCTTGCTGAATGGTTTTCCAAGTTACCAGAACCTGTCCGAAACTTTGTTGCTATTTCTGCCGGATTAA\\nCGATTGCTATTACTGCAATTGGCGTTGCTATTGGTGTTTTAACTTTTGCAGTTGGTGCTTTGAATATTGC\\nATTAGGACCTGTAATATTAGCGATTTTGGGAATTTCCGCCGCAATAACTATTGCTATAGCGATAGTGAAA\\nAATTGGGGTGCTATAACCGATTGGCTTTCCGAAAAGTGGACCCAATTTAAAGATTGGTTTGGTGAATTGT\\nGGTCTGGAATAGTTCAGGCTTGTAGTGATGGGTGGTCTTCCACAGTTGAGTACTTTTCCGAAGCCTGGTC\\nGTCATTTATTGAAATGATGCATGAATTTTTTGACCCTATAGGTCAGTTTTTTAGTGAATTGTGGTCTGGA\\nATTGTCGAAACAGCGTCATCTTGGTGGTCGAATCTTGTCACAACTGCATCAGAATTGTGGAGTCAACTGA\\nCTCAAGCCTGGCAAGAAACTTGGAATACGATACTTACCGTCTTAGATCCAATTATTTCGGCGATATCTGT\\nCGTTTTAGAAGCAGGTTGGTTATTAATACAGGCAGGTACACAAATTGCCTGGGCCTTAATAAGTAAATAT\\nATTATTGATCCGATTACTGAAGCGTACAACTGGTGTAAAAATCAGTTCGGTGAGTTAGTTTCTTGGTTAA\\nATTCACAGTGGGAAACGGTAAAATCTTATACACTTGCAGCGTGGAATTTGGTAAAACAGTATGTTATTCA\\nACCGGTTCAAGAATTGTGGAATACAACAAAGCAAAAACTTGGAGATTTAGCTAATTGGATACTATCAAAT\\nTGGGAATCTATAAAATCCTATACGCTTACGGCGTGGAATTTGGTGAAGAAATATGTGATTGATCCAGTAA\\nCTGAAGCCTATAATTCAGCTAAGCAAAAATTTACTGATTTATATAATTCAGCGAAAGAAAAATTCGATTC\\nTGTGAAGAATGCTGCACAAGAAAAATTTGATGCTGCTAAACGTAACATCATTGATCCAATAAAAGAAGCA\\nGTTGGGAAGGTAGAAGAGTTTGTGGGTAAAATCAAAGGTTTCTTTGATAATTTGAAGCTGAAAATCCCTA\\nAACCTGAAATGCCAAAGCTTCCACATTTCAGTCTGCAGACTAGTTCTAAAACAATTGCAGGTAAAGAAAT\\nCTCTTATCCATCTGGCATAAATGTGGATTGGCGTGCTAAAGGCGGTATTTTCACACGGCCAACTATTTTC\\nGGAATGAATGCTGGAAACTTACAAGGCGCAGGAGAAGCTGGACCGGAGGGGGTTCTACCCTTAAATGAAA\\nAGACACTAGGTGCCATTGGAAAAGGAATTGCATCTACGATGACACAACAAAGTAATGACCGTCCAATTAT\\nCCTACAAGTGGATGGAAGAACGTTTGCTCAAATCACCGGTGATTATACAGATCATGAAGGTGGAGTGAGA\\nATTAGAAAAATCGAAAGGGGGCTGGCATAGATGCTATATGGAATTAATTTTAATGGAAAACATTCATATG\\nACGATATGGGATACACTATGCCAGCTGATGGCAGAGATATTGGCTTTCCAAGTAAAGAGAAAATTGTTGT\\nAAAAGTTCCTTTTAGTAATGTTGAATACGATTTTAGTGAAATATACGGATCTCAAACATATACTTCAAGA\\nACATTGAAATACCAATTTAACGTTTTAAGGCAAGGGAATTTTACACCGCATGCAATGCAAATCGAAAAAA\\nCAAAGTTAATTAATTGGCTTATGAATACTGGCGGAAGAAAAAAGCTTTATGATGATACTATTCCTGGTTA\\nTTACTTTTTAGCTGAGGTAGAAAGTGCGGCTGATTTCCAAGATGATTGGGAAACGGGAACAATGACGGTA\\nACTTTCAGAGCATATCCTTTTATGATTGCTGAATTGTATGAAGGTAATGATATATGGGATAGTTTTAACT\\nTTGATTTGGATGTTGCGCAAACTACTAATTTCACTGTGAATGGTATGTTACAAATGGTTTTACTAAATGT\\nAGGGGCTTCTGGTGTAGTTCCAGAGATAACAACATCTAAGCAAATGAAGATTATTAAAGATGGAGTCACC\\nTATACTGTGTCAACAGGTATTACAAGAGATAAGAATTTTGTACTTAAATCAGGAGAAAATCCCATAAAAG\\nTTACTGGTAATGGTACCATCTCATTCCGTTTCTATAAGGAGTTGATTTAAGTGTATAAAGTAACGATTAT\\nTAATGATGGTATTGAAACAATAATTCATAGCCCCTATGTAAATGACCTTAAATTACCGTTTGGTGTAATA\\nAAAAAAAGTATAAATCTAATAGATGCATTTAATTTTAGTTTTTATATGAATAATCCTGGTTTCCATAAGA\\nTAAAGCCGTTAAAAACACTTGTAAATGTGTTAAATACAAAGACAGGTAAGTATGAATTTGAAGGGCGTGT\\nGTTAGGTCCAAGTAAGAATATGGACAATTCAGGACTTCATAGTACTTCATATGAGTGTGAAGGTGAACTT\\nGGGTATCTACATGATTCAGTTCAACGGCATTTAGAATTCCGTGGAACGCCAAAGGAACTTTTTGCAAAAA\\nTTATTGAGTATCATAACAACCAAGTAGAGGAATATAAAAGATTTAAAATTGGAAATGTAACAATTACCAA\\nTACTACAAATAACCTTTATCTTTATTTATCAGCGGAAAAAGATACTTTTGAAACAATTAAAGAAAAACTA\\nATAGATAAATTAGGTGGCGAACTCCAAATACGTAAAGTAAACGGAGTTCGTTTTTTAGATTATTTAGAAC\\nGTGTTGGTGAAGAGAAAAAAACAGAAATTCGAATCGCTAAAAATTTACTCAGTATGTCTTGCGACATAGA\\nTCCGACTGAAATTATTACTCGCTTGACTCCTTTAGGTACACGAATAGAGTCAAAAAATGAAGGAGCGACA\\nGATGCATCAGAAGCGCGATTAACTATTGAATCAGTTAACAATGGAGTACCTTATATTGATCATCCAAGTG\\nGAATAAAAGAGTTTGGTATACAAGGTAAATCTATAACTTGGGACGATGTAACAATAGCAAGTAACTTACT\\nTGCAAAAGGAAAAGAGTGGTTTGCAAATCAAAAATCAATTGTAACTCAATATAAACTAAGTGCAGTTGAT\\nTTGTATTTAATTGGTCTAGACATCGATTACTTTGAAGTAGGGAATTCTCATCTAGTCATAAATCCTGTTA\\nTGGGGATAGATGAGCTTCTAAGGATTGTTGGGAAATCCTTAGATATTAATAATCCACAAGGAGCCAGTTT\\nAACAATTGGAGGTGCATTAAAAACATTAAATCAATATCAAAGTGATTTGAAAAAATCAGCACAGCAAGTT\\nGTGGATTTACAATATACAGTGCTGAGACAAAACGGGAAAATCAATTCGTTGTCAGCCAGTCTTGTTGAAG\\nCAGAAAAATTATTACAGTCCTTAAATGAAGCTGTTGAAAATGCGGATTTACAAATGATTGTTCAGTCAGT\\nTTCTGATTTAAAAAGTGCTTTAAAAAAAATTGAAGAGGAAATACAAACTTTACCCACATCCGAAGTGATT\\nTTGCAGATGCAAAAAGATATACAAAATAATACAACTGAAATTGTAGATATCGATGAAAGAATGATTGAAT\\nCTGAAGTAGTAATTGAAAATAATAGTAAAAGCATTGAAGTATTACAAATCGATTTAAAAGATGTAGTAGA\\nTCGTCTAACTGCTTTAGAAAATGGAGGTTCATAATGTGGCAAATATAAGTGGTTTTTTAAATAGAATTCG\\nAACCGCTATTTATGGTAAAGATGTTCGTGAGTCTATACATGATGGGATAGAAGCTATCAATAAAGAGACA\\nGAGATAGCGACGAAACTTTCCAATAATATAAAGATTAAACAAGTTGCTTTAGAAAAGAAATATGATGACC\\nAAATTTCTAACATGACAAATGAAAATCCATCTATTAGTGAATTGGTTGATTTTAGAACTAGTGGATTTAC\\nAGGAATGTCATATGTTACAGCGGGAAAAAGAACTGATGCTATTGATGAAAGGATTACAGATATGTCTGTC\\nAGCATAAAAGACTTCGGAGCAGACCTCACAGGAGAGACAGACAGTACGGTAGCTATTCAACAAACAATAG\\nACTACGTATATGATCGTGGAGGTGGTGTAGTTTATATTCCGCCAGGGATTTTAAGATACACTTCTATAAT\\nTGTTAAAATTGGTGTTCATATTCGTGGTTCATTAGTTTCAATTACAGATTGGAATGGGAGGTTAGGCTCT\\nAATACGTCCGTAACTACTTTGATACCAACTGATCTTAATAGACCTTCTATCATCATGCATGGGAACTCAA\\nCGATTAATGGCGTCTGTTGGTTTTACGAAGGGCAAAAGAAAGAACTGACGTCTGAAAGTGACACATTTAT\\nTCAATACCCTCCAACTATTCAGTTGGGTGATGCGTCAAACAAGGCTATTGGAAATTATATTGGAAACTTT\\nATAGTAATTGGAGCATATGACTTCATATCGCAATACTCATTTTCAAATAGCGTAGAAAAGTTATTTGTAG\\nAAAAAGGATATGGTATGTTCTTAAATACATTTTGTACGCTTAAAAAATGTACTGATATTCCTAGATTCTC\\nTAAGATTCATATGAATCTAAATTCAGCATTAGGATGGCTAACTGGAAATACAGTTCCTTATTACTCTAAA\\nATCGCTCGTAATGGTGTAATGTTTAAGGTTGCGCGTGTCGATGACTGTGTGATAGAAGATTGTTTTGCAT\\nATGGCGTTAAGCACTTTGCTCATCTCTATAAAGAGGTGGGTGAGGATGGGAACGGCGGTGGTATAACAGT\\nAATTGGATCAAGCTGTGATGTTTGCCATCAAGCGTTTAGAAACGATCGTGGAAATCTATCGTTTGGCGTG\\nAAAGTAATCGGGGGATTTTTCACACCAGTTGTTAACGTGGATGGCAGCGAAAAATGTTTAATTTACCTTA\\nGTCAAAACGCTACATATACTAGAATGCAATTTTCGTCATTCAAATGTTATGGAGATGTTGTATCACAGGT\\nAAGTAATACTTCAAAAACAGACCATATTGTTATTTTCGAAAACGGAAATGCGGGTAATAACGTCGTAAAT\\nTTATTTGGCGATGTACAGTTTAATATTGGTATTTCGAAAAACGAGAACGTGTTGATCAATAATGTTGTAA\\nATTTTATTGGTACAGATAGGGATTCCTCTTTATCAAAACTAGATAGAGTGACTATCCGTCATCTTGTAAT\\nGACCGGTTCTCGAATTGATCTAACTCATGGTGTCGATGATATTGCATGGTTTAAAGTGAATAATGAATAC\\nGCTTTTGGTGCAGTTAAGGATGCCTATGATCCGACATTTTTTACAAAAGCGTATTTCCGACCAGGTACAC\\nTGACTTCATTACCAACCGCAAATGCAAATCATCGTGGAAAGATGATTCGTCTGGAAGGTGCAAATGGTGT\\nTGAGGATAGGTTATTTATATGTAAAAAGAAAAGCGATGGAACATATCACTGGAAACAGCTAGACGCAGAA\\nCAATAATGATGAAGGGGTGTTTTAAATGGGATTGCAAGTTAATATAACTTTATTTAATCAATTAGAAGTA\\nAATTCATATGCAAGAGTCGGCAATATTGGAGGAACAAAAGAGGAACAGTTTTTTTCTATTGATTACTACG\\nCTTCGCGAAATGCCTTTTTGAGGAAACTTGACCCTATCAAACAAGAAAACTATAAATTCACTCCATCTGT\\nTATGGATGACTCATTGAATTTTGTGAAACAAGCTTATATTTATGTTAAAAGAAGAACGGAATTTGCGGGT\\nGCTGTCGATGTATTAGAAGAAGGGCAAAAATCTTGAGTTTAATAAAATTCCTCAGTTTATCTAATATATA\\nAGATTTTATATGTTATTATATGTAATGGCGTCTTAATATAAGACGCTAATACATATAATTTGGAGGAAAA\\nAGATGAACATATCCAGTCACCAAGAGGGAATGTCAAAACTGAATATAATAATACTACTTTTTCTCTCGTA\\nTATAATGAGTACTTATAAATACGGGGAATTTGTACATTATTTTGTGTTTATAGTCATGGCCGCTCTTATA\\nCTTAGAATGCTTACTGTAGGCATCAAGGTAAGTAATGAAATATCAATAAATAAAGGCATATTGACGTTTT\\nGCGTAATTTTATTAGGGTTATTGTTATTGAAATCGATTTTTAACTTAAATGAATTAAAGGCATTTATTAA\\nGAATTATTCAGTTATCTATTTCGTTCTAATTTACGGCCTTCTAGAATATTATAAGAATGGTGCTAGGTAT\\nGGAGAGCAAGTTTTTATACAGCTTACTAAAATACTAAATGTACTTTCTGTCTTAAACCTAATTCAGGTTG\\nTTTTACACAGACCGTTATTATCTGGATTCTTCACAGAACAGATGGACAAGTATCAATATTGGGCGTATGG\\nTACTGGTGACTTTAGACCAGTTTCCGTGTTTGGTCACCCTATTGTAAGTGCATTGTTTTTTTCTATATTA\\nGTGATCTGTAATCTTTATATACTTAAAGGCAATTTAAAATATCCATTGCAGATTGTGGCACTTGTGAATG\\nTCTATGCCTCGCAATCTAGGAGTGCTTGGATTGCATTAGCAATTATTGTATGCTTGTATTTTATTAAAAA\\nTTACCGTATTAAAAAAATAAAAAGAAATGTTCGATTTACTTATAGTCAATTATTAAAAATTTATGTTTCA\\nTTAGTAATAGTGATCTGTGGATTTGGCTTAGTTGCTTTAAGCTCGGATAGTATCATAAGTTCCATAATTG\\nAAAGATTCGGAGATTCTTTAAGTGGGAATAGTAAAGATATTTCAAACTTACAACGGACGGGCACATTAAG\\nTTTAATTAATACTTATATGTTTCAACAAGATATGTTTAGATTACTGTTTGGTTATGGATTAGGGACTGTA\\nGGAGATTTTATGTCTGTTAATACCGTTGTTATTCGTAATTTCTTGACGACAGATAATATGTATTTGACTT\\nTTTTCTTTGAATTAGGGCTCTTGTCATTGATTAGTTATGGATTATTCTTTATTATTGGAGTCATTCGTTT\\nTTTCTTATCTAAAAATTACTGGTTAAGCGAATTAGGCGCTTTATGTTTTATCTTTTTATCAATCATAATA\\nTTTTTCTTTGAAGGTATAGGGTGGGGTACTGTAGTAACTGTTTGGATGTTTTCTTTACTGACCATTCTAA\\nTGAAATTTAAAAATCCAAACAGTTTAACAAAAAATAAAATAAAATAGTTACAGTAGTATTTATACTAGTT\\nTTTGGGAGAGAAACATGAACAAAAAACAATTAAAAGAAACAATTAATTCAGACTTATACAGAGTATACGG\\nAAGTCAAGGAACAAAAAAGAAAATTATTAATTTCTTAAGAAACCCTGGCTTTAAATATTTATATATACTA\\nCGTAAATGTAGTTATTATAAAGAGAAAAACAAGTTAATGTATAGATTGTATTTTATATTATTGTTGCGTT\\nATCAGTATAAGTATGGACTAGAAATAATGCCTGATACGAAGATTGGAAAAGGCTTTTACATTGGACATAT\\nAGGAGCTATTACAATTAATCCTAAATCTATAATTGGTGAAAATGTAAATATATTAAAAGGGGCATTACTT\\nGGCTATAATCCGCGAGGGAAATATAAAGGCTGTCCAACTATAGGAGATGGTGTTTGGATAGGTCCTAATG\\nCTGTAATAGTTGGTAATATTACAGTTGGAAATAATGTAGTGGTAGCGCCAAATACGTTAGTCAATAGGGA\\nTGTTCCAAGTAATTCAGTTGTGGTAGGTAATCCGTGTCAAATTATTTCACAGGATAATGCAACTGAAGCT\\nTATGTCAATTATACAGTTTAACAAAATACAATTTTAGTTGAAAAGGAGACGAGTTATCGTCTTCTTTTTT\\nTATTGTCAAAAGGAGATGAGAACAGTGGAAGATGCAATTTTCAATTCAGTCATTCAACAGGGCGCATTCG\\nCAGCGTTATTTGTGTGGATGCTATTTACTACACAAAAAAAGAACGAGCAGCGTGAGGAAAAGTATCAACA\\nAGTAATTGATAGAAACCAACAAGTAATTGAAGAACAGGCAAAAGCCTTTGGATCTATTTCTAAGGATGTA\\nACAGAAATTAAACAAAAATTATTTGAAGGAGATGTTCAATAATGGGATATATCGTTGATATTTCAAAATG\\nGAATGGCAATATTAATTGGGATGTAGCTGCAGCGCAATTAGATTTAGTAATTGCTAGGGTACAAGATGGT\\nTCAAATGTTGTGGATCATATGTATCAAAGTTATGTGAGTGAAATGAAAAGGCGTGGTGTTCCTTTTGGTA\\nATTATGCGTTTTGTCGTTTCGTTTCTGAAAATGATGCAAGAGTTGAAGCGAGGGACTTCTGGAACCGCGG\\nTGATAAAGATGCATTATTCTGGGTTGCTGATGTGGAAGTAAAAACAATGGGGAATATGTTAGCCGGAACA\\nTTAGCTTTTATCGATGAGTTACGTCGATTAGGTGCTAAAAAGGTTGGTTTATATGTTGGCCATCATACAT\\nATAAAGAGTTCCAAGCTGATAAAGTAAACGCTGATTTTGTATGGATTCCTCGATATGGTGGGAATAGACC\\nAGCTTATCCATGTGATATCTGGCAATACACAGAGACAGGAAATGTACCTGGTATCGGTAAATGCGATTTA\\nAATGAGTTAATTGGTGATAAATCGTTATCTTGGTTTACCAATAATCACATGGGCTTAGTTGTTCCTGAGG\\nTAGGAAAGCGAGTTGTTTCTAAAGTAGAGACTCTTAGATTTTATTCAAAACCTTCCTGGGCGGATGTGGA\\nTGTTGCTGGAACAGTTTCTAATGGTTTGGGGTTCGCTATCATTGGAAGAGTCGATGTGAATGGTTCGCCA\\nCAATATAAAGTACAAAATTCTCGTGGTAGTGTCTTTTATATTACGGCTAGTCCAAAATATGTAGAAGTAA\\nAATAAAAATTGCCGGCTCTTAATTGATATGCTCCCCCTATAGTAGACAGAAAAAAGAAAGCTTTATATCC\\nTGTCTACTATAAGGGGGATTTTTTTATGGGGAAAATTAGAAGAACATATGATGAAACATTTAAGAAAAAG\\nGCTATAGATTTATATTTTAAAGAAGGCATGGGTTATACCCAAATAGGAAAAACACTAAGCATTGATGAAA\\nAAAACGTACGTAGATGGGTAAAACGTTTCAAAGAAGAGGGTATCAAAGGCTTAGAAGAGAAACGTGGAAA\\nGGCTACTGGAGGAACAAAGGGGCGACCTAAAAATTGTCCAAAGGAGCCTACAGAAAGAATCAAATATTTA\\nGAAACAGAGAATGAAATGCTAAAAAAGCTATTGGGAATGTTAAAGGAGGGATGAAAGCTGCACCAGCATA\\nCAAAAAATATGAAATCATACAAGAAATGTCCAAAGGTATGCGTTCAATACAGCTACTGTGTAAAATCGCG\\nGAAGTATCTAGAAGCGGATATTACAAGTGGTTAAAAAGGCAAAGCAATCCTTCTCCGAAGGAGATAGAAG\\nATGAAAAAATAAAGAATAAAATTTTGGAATGTTATAACCAAGTGAAGGGTATCTACGGATACCGAAGAAT\\nAACTGTGTGGTTAAAGATGAAACATGGGATCGTCGTAAACCACAAGAGAGTTCAACGACTAATGAATAGG\\nATGAAACTTAAAGCAATTATCAGAAAAAAACGACCTTATTTTGTATCAAAAGAAGCATATGTAGTCTCAA\\nAGAATTACTTGAATCGAGATTTTAAAGCGGAACAACCAAATGAAAAATGGGTAACAGATATTACTTACCT\\nTATTTTTAATGGGAAAAAGCTATATCTATCCGCCATAAAGGACCTTTATAACAATGAAATTGTAGCTTAT\\nCATATTAGCCATCGTCATGATATACAACTAGTTATCGATACGCTAAACAAGGCGAAAAAACAACGAAACG\\nTGCAAGGGATTCTTTTGCATAGTGATCAAGGTTTCCAATACACTTCACGCCAATATAATGATTTCCTAAA\\nAAAACATAAGATGAAAGCTAGTATGTCTAGAAAGGCGAATTGTTGGGACAATGCTTGTATGGAGAATTTC\\nTTTAGTCATTTCAAAGCGGAGTGTTTTAATCTGAGTTCATTTCGTTCAGTAGAAGAAGTTAAATTTGCCG\\nTACATAAGTATATTCATTTTTATAACCACCATCGTTTTCAGAAAAAATTAAAGAACCTGAGTCCATACGA\\nATATCGAACTCAGGCTTCTTAACTATGCGTTTTAATTACTGTCTACTTGACAGGGGTCAGTACATAATTG\\nAGTCGGCTTTTTTATTGCAAATCAGATATCCTTCTAACTTGTTTTTCTTTCTTCTTGAAGTTCTTCTTGT\\nACTGTTTAAATTCTTCTTTATCTACGTGGAACTTTTCTCCGGTGGCAACGTTTTTAACTAAGTATGTTTT\\nGGTTGTAAGAGATTTAATTATGTAATAAATAGCAAATAGCATAAGAGAAATACAAAAGGTAGGAATAGAA\\nAATACAATAGCAAGTGCAGCTAGTATATTATCTCTCTTATGATCTCTTTGTAACACTAAACGTTTCCCTG\\nCTGCAGCTTGAGCTTGTTCTAATTGTTGCATACGTTGTAGCGATGCTACAGTATCATAACTCATGAAAAA\\nACCTCCTTGAAATAATACCTAAATCATACCAATTTCATGTAACAACTGTAAATGTTAGTTTCTCATTTAT\\nTGACAAAACAGAACAATTGTTCTACAATTCATTTACAAACAAATGTTCTTGAAAGGGGAAATTCATATGG\\nCAGCAACTGAAAATACAACTAAAGGAAAAGAGAAAGCATTAGAAGAGGCTCTGAAGAAAATCGTAAAAGA\\nATTTGGTACAGGGGCTATTATGAAACTGGGTGAGCGTCCTAATCAAAAAGTATCTGTCGTATCAAGTGGT\\nTCTGTTGGATTAGATAATGCTTTAGGGGTTGGTGGATATCCAAAAGGACGCATTACTGAAATCTTTGGTC\\nCTGAATCTTCAGGTAAGACAACTATAGCATTACATGCAATTGCAGAAGCGCAAAAAGAAGGTGGAACAGC\\nGGCATTTATTGATGCAGAGCATGCACTTGACCCTATTTATGCACAGAAGTTAGGTGTTAATATTGATGAA\\nCTGCTCATGTCACAACCAGATACAGGAGAGCAAGCACTAGAGATTGCAGAAGCTCTAGTTAGAAGTGGGG\\nCTGTAGATATCATTGTGATAGATTCTGTAGCTGCTCTAGTCCCGAAAGCGGAAATTGATGGGGACATGGG\\nAGATTCACATGTGGGATTGCAGGCTAGATTGATGGGGCAGGCAATGAGAAAAATATCAGGAGCAATATCC\\nAAAAATGGAGTTGTAGCAATCTTTTTAAATCAAATCAGAGAAAAAGTTGGTGTTTCTTTTGGGAGTCCTG\\nAGACAACACCGGGTGGTAGGGCGTTAAAATTCTATTCAACAATTCGACTAGATGTACGTCGAGGAGAACA\\nGTTGAAAGGAAAAGAAAGTGACGTTTTAGGGAATAAAACAAAAGTGAAAGTAGTAAAAAATAAAGTTGCT\\nCCACCATTTAAAAACATTGACTTTGACATCTTATACGGAGAAGGGATTTCCCTAGAGGGAGAGCTTATTG\\nATATTGGGGTAGAGTTAGATATTGTTCAGAAAAGTGGTGCATGGTACTCGTATCAAGAAGAACGTCTTGG\\nGCAGGGTAGAGATAATGCCAAGCAATTTCTGAAAGAGAATGAAAACATACGTAATTCTGTTCGAAATAAA\\nATTTATGAATACTATTCTCCAAAAGAAGACTCTGTTGTTGTAAAAGCGGAGCTTATAAAAGAAAATGAGC\\nCCATCACTTTAAAAGAATCTGAATAAGGTTATATAAAGAGAATCTTAAAATAAAATTCATGCTATGTATA\\nTTTTAAAAACTGGAACACCTAGTTATTAGAACTGGGTGTTTTTATATACTCATAAACTCACGATCAAAAT\\nAAAGCTTATCCATTAAGTTTTTTGTATATTATTTTGCAAGTAAGTTCCGTACATATTTACCCAACTGTTC\\nATCTGTTAAACCTGACTTAATTGCACCTTTAATAGCATCAATTGTATTAATTGTATGAGGTTCATTCTCT\\nTCTTTCTTTTTACTATGTATCCATTTCTTATATAGTTCATCCTCTTTCTTTGCCAAACTCAAAGCGTTCT\\nCAACAGTAGTAACTTTCTTCCTCACCCAATGACCAGCTATTTTTTTGACATACTCAGGATTCAATATCAT\\nGTCTGATCTCAGCATCACATAATAAATCAAAACATTTATAACAGGGTTAGGCAACCTATAATTATCACGC\\nATATCAGTAACTATATGCAAATCCCCTTTTGGAACAGTAGCACCGCCTGATAACTCGCTTAAAAGTTGTT\\nCAGGTGTAACAGAATTTAATTGCTGTATCAATTTTTGTTGTTTTTCCATGAATTTATCCTCCTAATACTT\\nTGTATAATATAAATTTTATCTAGTAATCTTCCGCATTTAATATAACCCCATTTCATCAGATTCTTCTTTA\\nGATAGTTTGTAATATATACTTGGTGCAAGAGGGTTATCTATTGTATTTGTGGAGGGGGTTTTTGAGTCAT\\nTATCTTCTAACCAATTATAATATACACTACTAGTATCTGTGTTAGTTTTACGTTTAGAAATATTGTGGAT\\nGTCTCTAAATCTATCGATGTAGTCATATACCATACTTTTAAATGTATTAGTAAAGTATCCAATTGGATTT\\nTTCATAAGCTCTCCATTGTGTTCAACTTCATGAGTTTTAGAGAATAAAGTAACAGATGCATTCGCAAGGA\\nTATTGTTAAATACATCCTTGTCAGATAGTAAACTAAACTTCTTAGCAGCCTTTTTAGCGATATTTACAGC\\nATTGTGGAAGGATTCGTTAATAACTTTTGAACCAAATGCAGTTGCTAATTTCATACGCATAGATTGTGGA\\nACACGATAGTCGATAAAATCATTATCATTGACTGTAGATTGAAACTCATTTCTATTACGTATATTTATAT\\nTTTTTATATTTTGTTTTAAGGTTTTAGTAGTTGTTTTATTGGTGTGACATTTTTCTTCATTTTTAATAGG\\nTGCTTGTGTGACAACCTGTTCCTCCACAATAATTGGTTGAATAACAATCGCATTGCATGTTTGCCTCATA\\nTCGCTTTTACGCTTCATTTCTAGTTGTTTAATAATACCTAAAGACTCTAAGTGTAGGCATACTCTAATAA\\nCCGTTCTACGGCTAATATTGAGGTCTTCAGCGATGTGTTTTTTTGTTCTGAATGATACACCAAAGAACTT\\nAGAAGAATAGTTGTGTAATTTATTTAATACAGCCAATTGAGTTTTATTTAACTGATCTACGAATTTTTCT\\nTTGTATGCACGAACAGTCTTGTTTAATTCATCGACTGTTTTAAATGTTGCTAGGTTTTCATATGTTTCAT\\nTACCTGCAATAATTGTAATTCCTTGTTTCTTTTCCATAACGGTTTGTCTCCTTTTTGGAAACAAAAAAGC\\nAACAGAATGCCAAGTGTAAGCAAACTGTTGCTAAGGAGCCCTTACGTACTGTAAAATAGTTCGTAAGAGT\\nACAGCAAGTGTTTGCCTAGTGTGATTAGGCGGACGGTATATAGAGTGTTGACGCACTTTATATACACGCT\\n\\n\"\n\nclass(her1410_1)\n\n[1] \"character\"\n\ndim(her1410_1)\n\nNULL\n\nlength(her1410_1)\n\n[1] 1\n\nwrite(her1410_1,file=\"her1410_1.fasta\")\nseq1 &lt;- read.fasta(\"her1410_1.fasta\")\n\nAs you can see, you can very easily download the data from any NCBI database. Regarding sequences, the main drawback of the function entrez_fecth() is that the downloaded sequences are character objects and transform it into sequences that you can handle with seqinr or other packages is not straightforward and it requires some polishing (see ref. 7). Alternatively, you can save the data as a new fasta file in your computer before importing with seqinr, as in the following example.\n\n#compare two files\nher1410_2 &lt;- entrez_fetch(db=\"nuccore\", id=her1410$ids[2], rettype=\"fasta\")\nwrite(her1410_2,file=\"her1410_2.fasta\")\nseq2 &lt;- read.fasta(\"her1410_2.fasta\")\n\n#codon frequencies\nfreq1 &lt;- count(unlist(seq1),3, freq=TRUE)\nfreq2 &lt;- count(unlist(seq2),3, freq=TRUE)\n\nstop1 &lt;- freq1[which(names(freq1)==\"tga\"| names(freq1)== \"tag\" | names(freq1)== \"taa\")]\nstop2 &lt;- freq2[which(names(freq2)==\"tga\"| names(freq2)== \"tag\" | names(freq2)== \"taa\")]\nstops &lt;- rbind(stop1,stop2)\nstops &lt;-  as.data.frame(stops)\nstops$sequences &lt;- c(her1410$ids[1],her1410$ids[2])\nstops &lt;- cbind(stops$sequences,stack(stops[,1:3]))\nnames(stops) &lt;- c(\"sequences\",\"freqs\",\"stop_codon\")\n#plot\nlibrary(ggplot2)\np &lt;- ggplot(data=stops) + geom_bar(aes(x=toupper(stop_codon),y=freqs,col=sequences,fill=sequences),stat=\"identity\",position=\"dodge\",alpha=0.8) \np + scale_fill_brewer(palette = \"Dark2\") + scale_color_brewer(palette = \"Dark2\") + theme_linedraw() + ylab(\"Codon frequency\") + xlab(\"Stop codon\") +  guides(color=\"none\", fill=guide_legend(title=\"HER1410 sequences\"))"
  },
  {
    "objectID": "r9.html#example-1-sequence-logos-with-ggseqlogo",
    "href": "r9.html#example-1-sequence-logos-with-ggseqlogo",
    "title": "R9: R for Molecular Biology",
    "section": "",
    "text": "R is very useful for many applications in Biochemistry and Molecular Biology, and ggplot is a very good example of that.\n\n#script by Luis del Peso\nCounts&lt;-matrix(c(2,38,0,0,0,0,10,8,4,7,21,9,9,11,9,23,4,15,10,0,46,0,0,0,32,17,\n                 10,15,11,18,9,16,23,11,20,8,10,8,0,46,0,46,2,17,21,13,14,15,\n                 27,8,13,8,16,22,24,0,0,0,46,0,2,4,11,11,0,4,1,11,1,4,6,1),\n               nrow=4,byrow = T,\n               dimnames=list(Nucleotide=c(\"A\",\"C\",\"G\",\"T\"),Pos=1:18))\ncounts &lt;- data.frame(Counts)\nnames(counts) &lt;- 1:18\ncounts &lt;- cbind(stack(counts),c(\"A\",\"C\",\"G\",\"T\"))\ncolnames(counts) &lt;- c(\"values\",\"pos\",\"nucleotide\")\nggplot(counts, aes(x=pos, y=values, fill=nucleotide)) + \n    geom_bar(position=\"stack\", stat=\"identity\")\n\n\n\n\n\n\n\n\nThis is not a very interesting plot. Now, in order to plot the PSSM as a sequence logo, we are going to use the package ggseqlogo. Also, to arrange plot, we will use the package gridExtra, which is very handy and commonly used to generate complex figures.\n\nif(!require(ggseqlogo)) install.packages(\"ggseqlogo\", repos = \"https://cran.rstudio.com/\", dependencies = TRUE)\n\nLoading required package: ggseqlogo\n\nlibrary(ggseqlogo)\n\nggseqlogo(Counts) \n\nWarning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the ggseqlogo package.\n  Please report the issue at &lt;https://github.com/omarwagih/ggseqlogo/issues&gt;.\n\n\n\n\n\n\n\n\n#install.packages(\"gridExtra\")\np1 &lt;- ggseqlogo(Counts, method=\"prob\")\np2 &lt;- ggseqlogo(Counts, method=\"bits\")\ngridExtra::grid.arrange(p1, p2)\n\n\n\n\n\n\n\n\nLet’s plot some protein logo from the example sequences in the package. Remember that we are working with an add-ons to ggplot. That means that all ggplot elements can be used.\n\ndata(ggseqlogo_sample)\nstr(seqs_aa)\n\nList of 4\n $ AKT1   : chr [1:172] \"VVGARRSSWRVVSSI\" \"GPRSRSRSRDRRRKE\" \"LLCLRRSSLKAYGNG\" \"TERPRPNTFIIRCLQ\" ...\n $ CDK2   : chr [1:444] \"LGPYEAVTPLTKAAD\" \"SGSESGYTTPKKRKA\" \"GSESGYTTPKKRKAR\" \"VTTQTPLTPEQLRAV\" ...\n $ AURKB  : chr [1:106] \"ITVTRRVTAYTVDVT\" \"PWPYGRQTAPSGLST\" \"APSLRRKTMCGTLDY\" \"PSKKRTQSIQGKGKG\" ...\n $ CSNK2A2: chr [1:80] \"KHEEEEWTDDDLVES\" \"VWDHIEVSDDEDETH\" \"TSADVKMSSSEEVSW\" \"SADVKMSSSEEVSWI\" ...\n\n\n\nhead(seqs_aa)\n\n$AKT1\n  [1] \"VVGARRSSWRVVSSI\" \"GPRSRSRSRDRRRKE\" \"LLCLRRSSLKAYGNG\" \"TERPRPNTFIIRCLQ\"\n  [5] \"LSRERVFSEDRARFY\" \"PSTSRRFSPPSSSLQ\" \"GRSGRGKSFTLTITV\" \"SGRGKSFTLTITVFT\"\n  [9] \"SGRAREASGAPTSSK\" \"CVRMRHLSQEFGWLQ\" \"GTRGRLESAQATFQA\" \"ARRARSKSLVMGEQS\"\n [13] \"QFRRRAHTFSHPPSS\" \"ATRGRGSSVGGGSRR\" \"ATRKRRWSAPESRKL\" \"PFRGRSRSAPPNLWA\"\n [17] \"FIFMRRSSLLSRSSS\" \"GQRDRSSSAPNVHIN\" \"PQRERKSSSSSEDRN\" \"LKRKRRPTSGLHPED\"\n [21] \"QTSKRHDSDTFPELK\" \"RFRDRSFSEGGERLL\" \"TRRTRTFSATVRASQ\" \"KLRRRFSSLHFMVEV\"\n [25] \"GSRVRVDSTAKVAEI\" \"SRRPRRRTFPGVASR\" \"LKKIRLDTETEGVPS\" \"GQVPRTWSEKDLREL\"\n [29] \"SIRPRPGSLRSKPEP\" \"THLSRVRSLDLDDWP\" \"LLRDTFTSLGYEVQK\" \"AKRPRVTSGGVSESP\"\n [33] \"HKRRRSRSWSSSSDR\" \"RRRRRSRTFSRSSSQ\" \"DHWIRMRSQEGRPVQ\" \"EDQPRCQSLDSALLE\"\n [37] \"QDTQRRTSMGGTQQQ\" \"LGGGRVKTWKRRWFI\" \"RTPRRSKSDGEAKPE\" \"SFRRRHNSWSSSSRH\"\n [41] \"RTRSRRLTFRKNISK\" \"SYKIRFNSISCSDPL\" \"TSRIRTQSFSLQERQ\" \"RVSIRLPSTSGSEGV\"\n [45] \"GGRERLASTNDKGSM\" \"IKRSKKNSLALSLTA\" \"CWRKRVKSEYMRLRQ\" \"ASPARRASAILPGVL\"\n [49] \"CLRSRDPSLMVDFIL\" \"GLETRRLSLPSSKAK\" \"LGRERLGSFGSITRQ\" \"KTYRRSYTHAKPPYS\"\n [53] \"KLRRRSTTSRAKLAF\" \"LPRPRSCTWPLPRPE\" \"SPRRRAASMDNNSKF\" \"TFRPRTSSNASTISG\"\n [57] \"QSRPRSCTWPLQRPE\" \"APRRRAVSMDNSNKY\" \"QSRPRSCTWPLPRPE\" \"APRRRAASMDSSSKL\"\n [61] \"TFRPRSSSNASSVST\" \"LLRERKSSAPSHSSQ\" \"QTRNRKASGKGKKKR\" \"QTRNRKMSNKSKKSK\"\n [65] \"INRERQKSLTLTPTR\" \"ANLNRSTSVPENPKS\" \"SGRARTSSFAEPGGG\" \"SGRPRTTSFAESCKP\"\n [69] \"RKRSRKESYSIYVYK\" \"LYRSRMNSLEMTPAV\" \"SQRGRSGSGNFGGGR\" \"RALSRQLSSGVSEIR\"\n [73] \"RVRVRLLSGDTYEAV\" \"GGRSRSGSIVELIAG\" \"EMRERLGTGGFGNVC\" \"VPSGRKGSGDYMPMS\"\n--- Cropped output ---\n\nggseqlogo(seqs_aa, ncol=4)\n\n\n\n\n\n\n\nggseqlogo(seqs_aa, ncol=2) +   theme_light()"
  },
  {
    "objectID": "r9.html#more-examples",
    "href": "r9.html#more-examples",
    "title": "R9: R for Molecular Biology",
    "section": "",
    "text": "There are two other ggplot-based packages that I find very interesting for sequence-based plots:\n\n\nCheck out vignette and examples here: http://yulab-smu.top/ggmsa/\n\n\n\nSee the vignette and some example here: https://rforbiochemists.blogspot.com/"
  },
  {
    "objectID": "r2.html",
    "href": "r2.html",
    "title": "R2: Flow Control",
    "section": "",
    "text": "Sequential execution of programming commands is insufficient for solving anything beyond trivial tasks. In most cases, solving a problem programmatically involves executing specific statements only under certain conditions and/or repeating a statement or set of statements multiple times. This ability to control when and how many times a statement or set of statements is executed is referred to as Flow control. In R, flow control is achieved using two specific structures in our code:\n\nConditional structures: These structures allow the execution of a statement or set of statements based on a condition.\nLoop structures: These structures allow the execution of a statement or set of statements for a fixed number of times or until a condition is met. In both cases, the block of code containing the statements to be conditionally or repeatedly executed is delimited by curly brackets."
  },
  {
    "objectID": "r2.html#nested-conditionals",
    "href": "r2.html#nested-conditionals",
    "title": "R2: Flow Control",
    "section": "2.1 Nested conditionals",
    "text": "2.1 Nested conditionals\nSometimes we need more than a single bifurcation in our code. For example, in the case above we may want to print negative when the number is less than zero,positive when it is more than zero and just zero when it is equal to zero. To do that can can just include (nest) an if-else structure within another if-else structure:\n\nx = readline(\"Enter a number:\")\n\nEnter a number:\n\ny = as.integer(x)\nif (y &lt; 0) {\n    print(\"negative\")\n} else {\n    if (y &gt; 0) {\n        print(\"positive\")\n    } else {\n        print(\"zero\")\n    }\n}\n\nError in if (y &lt; 0) {: missing value where TRUE/FALSE needed\n\nprint(\"End\")\n\n[1] \"End\""
  },
  {
    "objectID": "r2.html#another-way-to-code-nested-conditionals-else-if-statement",
    "href": "r2.html#another-way-to-code-nested-conditionals-else-if-statement",
    "title": "R2: Flow Control",
    "section": "2.2 Another way to code nested conditionals: else if statement",
    "text": "2.2 Another way to code nested conditionals: else if statement\nNesting is not restricted to three alternative blocks of code; in fact, we can nest as many if-else structures as necessary. However, the code becomes cumbersome with more that two or three blocks of code. For this reason, in situations where many blocks of code are to be conditionally executed it is much more convenient to use the else if (condition) statement. In this case, the conditional structure begins with and if(condition)statement and continues with as many else if (condition) statements as required. Finally, the structure may end with an else although it is not strictly required.\n\nx = readline(\"Enter a number:\")\n\nEnter a number:\n\ny = as.integer(x)\nif (y &lt; 0) {\n    print(\"negative\")\n} else if (y &gt; 0) {\n    print(\"positive\")\n} else {\n    print(\"zero\")\n}\n\nError in if (y &lt; 0) {: missing value where TRUE/FALSE needed\n\nprint(\"End\")\n\n[1] \"End\"\n\n\n\n\n\n\n\n\nPay Attention\n\n\n\nThe conditionals are evaluated sequentially in the order the appear un the code and once any of them results in TRUEthe remaining are skipped (not evaluated) and the code resumes execution after the whole conditional structure.\n\n\n\nx = readline(\"Age in years:\")\n\nAge in years:\n\ny = as.integer(x)\nif (y &lt; 0) {\n    print(\"Not born yet!\")\n} else if (y &lt; 1) {\n    print(\"Infant\")\n} else if (y &lt; 3) {\n    print(\"Toddler\")\n} else if (y &lt; 5) {\n    print(\"Preschooler\")\n} else if (y &lt; 9) {\n    print(\"Child\")\n} else if (y &lt; 13) {\n    print(\"Preteen\")\n} else if (y &lt; 18) {\n    print(\"Teenager\")\n} else if (y &lt; 25) {\n    print(\"Young Adult\")\n} else if (y &lt; 70) {\n    print(\"Adult\")\n} else if (y &lt; 100) {\n    print(\"Ederly/Senior\")\n} else {\n    print(\"Ancient!\")\n}\n\nError in if (y &lt; 0) {: missing value where TRUE/FALSE needed\n\n\nNote that, when coding many different conditionals the else if statement is much more convenient that nesting if-else structures. Also note that that conditionals are evaluated sequentially. For example, the following code is a variation of the previous one just changing the order of one of the conditionals and, as you can see it will not work as intended:\n\nprint(\"This script is WRONG!! \\n does not work as intended\")\n\n[1] \"This script is WRONG!! \\n does not work as intended\"\n\nx = readline(\"Age in years:\")\n\nAge in years:\n\ny = as.integer(x)\nif (y &lt; 0) {\n    print(\"Not born yet!\")\n} else if (y &lt; 100) {\n    print(\"Ederly/Senior\")\n} else if (y &lt; 3) {\n    print(\"Toddler\")\n} else if (y &lt; 5) {\n    print(\"Preschooler\")\n} else if (y &lt; 9) {\n    print(\"Child\")\n} else if (y &lt; 13) {\n    print(\"Preteen\")\n} else if (y &lt; 18) {\n    print(\"Teenager\")\n} else if (y &lt; 25) {\n    print(\"Young Adult\")\n} else if (y &lt; 70) {\n    print(\"Adult\")\n} else if (y &lt; 1) {\n    print(\"Infant\")\n} else {\n    print(\"Ancient!\")\n}\n\nError in if (y &lt; 0) {: missing value where TRUE/FALSE needed\n\n\nNotice that, in any type of conditional structure, you can combine multiple relational operators and, in the following particular example, it makes the case the order of the conditionals irrelevant:\n\nx = readline(\"Age in years:\")\n\nAge in years:\n\ny = as.integer(x)\nif (y &lt; 0) {\n    print(\"Not born yet!\")\n} else if (y &gt;= 70 & y &lt; 100) {\n    print(\"Ederly/Senior\")\n} else if (y &gt;= 1 & y &lt; 3) {\n    print(\"Toddler\")\n} else if (y &gt;= 3 & y &lt; 5) {\n    print(\"Preschooler\")\n} else if (y &gt;= 5 & y &lt; 9) {\n    print(\"Child\")\n} else if (y &gt;= 9 & y &lt; 13) {\n    print(\"Preteen\")\n} else if (y &gt;= 13 & y &lt; 18) {\n    print(\"Teenager\")\n} else if (y &gt;= 18 & y &lt; 25) {\n    print(\"Young Adult\")\n} else if (y &gt;= 25 & y &lt; 65) {\n    print(\"Adult\")\n} else if (y &gt;= 0 & y &lt; 1) {\n    print(\"Infant\")\n} else {\n    print(\"Ancient!\")\n}\n\nError in if (y &lt; 0) {: missing value where TRUE/FALSE needed"
  },
  {
    "objectID": "r2.html#a-vectorized-version-of-the-if-else-structures-ifelse-statement",
    "href": "r2.html#a-vectorized-version-of-the-if-else-structures-ifelse-statement",
    "title": "R2: Flow Control",
    "section": "2.3 A vectorized version of the if-else structures: ifelse statement",
    "text": "2.3 A vectorized version of the if-else structures: ifelse statement\nThe ifelse function in R is a vectorized version of the if-else statement, allowing you to perform conditional operations on entire vectors or arrays at once. It takes three arguments: the condition to evaluate, the value to return if the condition is true, and the value to return if the condition is false.\nFor example, in the examples above used to determine if a number was positive or negative, the code evaluated a single value at a time. The ifelse can evaluate multiple values simultaneously. That is, given a vector of numbers, the ifelse function can be used to return a vector indicating positive and negative values:\n\nMyNumbers &lt;- c(1, -3, 4, 5, -23)\nifelse(MyNumbers &gt; 0, \"Positive\", \"Negative\")\n\n[1] \"Positive\" \"Negative\" \"Positive\" \"Positive\" \"Negative\"\n\n\nIf more than one condition needs to be evaluated, the code could be modified to include as many ifelse as needed. For example the code below classify numbers as positive, negative or zero:\n\nMyNumbers &lt;- c(1, -3, 0, 5, -23)\nifelse(MyNumbers &gt; 0, \"Positive\", ifelse(MyNumbers &lt; 0, \"Negative\",\n    \"Zero\"))\n\n[1] \"Positive\" \"Negative\" \"Zero\"     \"Positive\" \"Negative\""
  },
  {
    "objectID": "r2.html#a-final-way-to-code-conditionals-switch-statement",
    "href": "r2.html#a-final-way-to-code-conditionals-switch-statement",
    "title": "R2: Flow Control",
    "section": "2.4 A final way to code conditionals: switch statement",
    "text": "2.4 A final way to code conditionals: switch statement\nThe code below asks the user to enter a DNA nucleotide using a single letter code (i.e the user enters A, C, G or T) and the program prints the full name of the base (i.e prints adenine, cytosine, guanine or thymine respectively) or NA if the user did not enter a nucleotide. Notice that the else clause handle any input other than the expected A, C,G or T; this is a typical use of the else statement.\n\nx = readline(\"Enter a nucleotide:\")\n\nEnter a nucleotide:\n\nx = toupper(x)  #just in case\nif (x == \"A\") {\n    print(\"adenine\")\n} else if (x == \"C\") {\n    print(\"cytosine\")\n} else if (x == \"G\") {\n    print(\"guanine\")\n} else if (x == \"T\") {\n    print(\"thymine\")\n} else {\n    print(NA)\n}\n\n[1] NA\n\n\nThis code can be also written using a less frequent but more compact conditional structure that uses the statement switch as shown in the code below\n\nx = readline(\"Enter a nucleotide:\")\n\nEnter a nucleotide:\n\nx = toupper(x)  #just in case!\nswitch(EXPR = x, A = \"adenine\", C = \"cytosine\", G = \"guanine\",\n    T = \"thymine\", NA)\n\n[1] NA\n\n\nPlease note that the switch statement matches the provided expression with the given cases exactly. It doesn’t perform logical evaluations like if-else statements, which check for conditions that evaluate to TRUE or FALSE."
  },
  {
    "objectID": "r2.html#for-loops",
    "href": "r2.html#for-loops",
    "title": "R2: Flow Control",
    "section": "3.1 for loops",
    "text": "3.1 for loops\nThe for loop is used when you know the exact number of iterations required. It iterates over a sequence, such as a vector or a range of numbers, executing a block of code for each iteration. For example, the code below calculates the square of each of the values in a matrix\n\nMyMat &lt;- matrix(1:9, ncol = 3)\nprint(MyMat)\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\nMyMat3 &lt;- MyMat\nfor (rr in 1:dim(MyMat3)[1]) {\n    for (cc in 1:dim(MyMat3)[2]) {\n        MyMat3[rr, cc] &lt;- MyMat3[rr, cc]^2\n    }\n}\n\nprint(MyMat3)\n\n     [,1] [,2] [,3]\n[1,]    1   16   49\n[2,]    4   25   64\n[3,]    9   36   81\n\n\nNote that, thanks to the vectorization of data structures in R, this task can be accomplished in a single operation\n\nMyMat2 &lt;- MyMat^2\nprint(MyMat2)\n\n     [,1] [,2] [,3]\n[1,]    1   16   49\n[2,]    4   25   64\n[3,]    9   36   81"
  },
  {
    "objectID": "r2.html#while-loops",
    "href": "r2.html#while-loops",
    "title": "R2: Flow Control",
    "section": "3.2 while loops",
    "text": "3.2 while loops\n“While” loops are utilized to repeatedly execute a block of code (enclosed within curly brackets) as long as a specific condition remains true. The structure of a “while” loop includes a condition followed by a code block. The code block is executed iteratively until the condition evaluates to false. The computations within the code block may modify the state of the parameter being evaluated in the condition, leading to the program exiting the loop after a certain number of repetitions. The following code make use of while loops to generate a vector containing all 64 codons:\n\nNucl &lt;- LETTERS[c(1, 3, 7, 20)]\nCodons &lt;- c()\np1 &lt;- 1\nwhile (p1 &lt; 5) {\n    p2 &lt;- 1\n    while (p2 &lt; 5) {\n        p3 &lt;- 1\n        while (p3 &lt; 5) {\n            Codons &lt;- c(Codons, paste0(Nucl[p1], Nucl[p2], Nucl[p3]))\n            p3 &lt;- p3 + 1\n        }\n        p2 &lt;- p2 + 1\n    }\n    p1 &lt;- p1 + 1\n}\nprint(Codons)\n\n [1] \"AAA\" \"AAC\" \"AAG\" \"AAT\" \"ACA\" \"ACC\" \"ACG\" \"ACT\" \"AGA\" \"AGC\" \"AGG\" \"AGT\"\n[13] \"ATA\" \"ATC\" \"ATG\" \"ATT\" \"CAA\" \"CAC\" \"CAG\" \"CAT\" \"CCA\" \"CCC\" \"CCG\" \"CCT\"\n[25] \"CGA\" \"CGC\" \"CGG\" \"CGT\" \"CTA\" \"CTC\" \"CTG\" \"CTT\" \"GAA\" \"GAC\" \"GAG\" \"GAT\"\n[37] \"GCA\" \"GCC\" \"GCG\" \"GCT\" \"GGA\" \"GGC\" \"GGG\" \"GGT\" \"GTA\" \"GTC\" \"GTG\" \"GTT\"\n[49] \"TAA\" \"TAC\" \"TAG\" \"TAT\" \"TCA\" \"TCC\" \"TCG\" \"TCT\" \"TGA\" \"TGC\" \"TGG\" \"TGT\"\n[61] \"TTA\" \"TTC\" \"TTG\" \"TTT\""
  },
  {
    "objectID": "r2.html#control-flow-statements",
    "href": "r2.html#control-flow-statements",
    "title": "R2: Flow Control",
    "section": "3.3 Control flow statements",
    "text": "3.3 Control flow statements\nSometimes, it may be necessary for a program to skip executing a block of code (or part of it) and move to the next iteration. In other cases, the program may need to exit the loop prematurely if a certain condition is met. To achieve these actions, we can use the next and break statements, respectively. Both control statements are typically invoked within a conditional context. For instance, when computing the Shannon Entropy (\\(H(X)=\\sum_i P(x_i) log(Pi)\\)) of a variable’s state distribution, it is common to skip terms with a frequency of zero to avoid encountering the undefined value of \\(log(0)\\). Consider the following code, which takes a vector representing the observed absolute frequencies of nucleotides at a specific genomic position and calculates the Shannon Entropy for that position:\nIn this code, the next statement is used to skip the calculation of terms with a frequency of zero. This prevents the program from encountering the undefined \\(\\log(0)\\) value. The loop continues to the next iteration and calculates the entropy based on non-zero frequencies.\n\nNucleotide_frequencies &lt;- c(25, 0, 5, 0)  #example of absolute frequencies of A, C, G and T\nTotal_Freq &lt;- sum(Nucleotide_frequencies)\nEntropy &lt;- 0\nfor (Freq in Nucleotide_frequencies) {\n    if (Freq == 0) {\n        next  #skips the remaining of the block and goes to next iteration\n    }\n    Prob &lt;- Freq/Total_Freq\n    Entropy &lt;- Entropy + (Prob * log2(Prob))\n}\nEntropy &lt;- (-1) * Entropy\nprint(Entropy)\n\n[1] 0.6500224\n\n\nBy utilizing the next statement, we ensure that the Shannon Entropy computation proceeds correctly without encountering any issues related to zero frequencies."
  },
  {
    "objectID": "r2.html#repeat-loops",
    "href": "r2.html#repeat-loops",
    "title": "R2: Flow Control",
    "section": "3.4 repeat loops",
    "text": "3.4 repeat loops\nAn additional statement in R that allows you to execute a block of code a specific number of times is called repeat. Similar to while loops, the block of code within the repeat statement is repeated until a certain condition is met. However, unlike while loops, the condition itself is not specified within the repeat statement. Instead, the condition is part of the code block, and the loop is terminated using the break statement when the condition is satisfied. For example, the following code prints the Fibonacci terms smaller than 250:\n\nFib &lt;- c(1, 1)\nrepeat {\n    tmp &lt;- Fib[length(Fib) - 1] + Fib[length(Fib)]\n    if (tmp &gt; 250) {\n        break\n    }\n    Fib &lt;- c(Fib, tmp)\n}\nprint(Fib)\n\n [1]   1   1   2   3   5   8  13  21  34  55  89 144 233"
  },
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "Hello, Tutorial!",
    "section": "",
    "text": "This code computes the answer to one plus one, change it so it computes two plus two:\n\n\n1 + 1"
  },
  {
    "objectID": "r3.html#quick-exercise-iv",
    "href": "r3.html#quick-exercise-iv",
    "title": "R3: Read and write data in R",
    "section": "4.5 Quick exercise (IV)",
    "text": "4.5 Quick exercise (IV)\nR has some built-in datasets that can be used as examples for plots or analysis. You can check all of them using the function data(). We are going to use one of that datasets for the following exercise in which you have to write and test your code.\nUse the function str() to examine the structure of the quakes dataset. Which of the following best describes the variables represented in this data frame?\nSelect the right answer\n\n Location and characteristics of Earthquakes off Fiji Glass vibration during Eurovision contest Fever and seizures due to mPox\n\nNow you need to create a new dataframe quakes2 with the three columns, lat, long and new_var, being the latter the product lat \\(x\\) long. What is the mean of the new variable? Fill the gaps to finish your code in the R snippet below.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "r4.html#quick-exercise-v",
    "href": "r4.html#quick-exercise-v",
    "title": "R4: Functions in R",
    "section": "2.8 Quick exercise (V)",
    "text": "2.8 Quick exercise (V)\nWrite a function that calculate your approximate age in months.\n\n\n\nHint\n\n`?`(as.Date)\n`?`(difftime)\n\n# See some examples:\n# https://www.geeksforgeeks.org/calculate-time-difference-between-dates-in-r-programming-difftime-function/\n\n\n\n\n\nAnswer 1\n\n# quickest way I found\nage &lt;- function(x) {\n    if (!is.na(as.Date(as.character(x), format = \"%Y-%m-%d\"))) {\n        age &lt;- as.numeric(Sys.Date() - as.Date(x, format = \"%Y-%m-%d\"))  #result in days\n        print(paste(\"You are about\", round(age/30, 1), \"months old\"))\n    } else {\n        stop(\"The input date must be quoted and in format YYYY-MM-DD\")\n    }\n}\n# test\nage(18)\n\nError in age(18): The input date must be quoted and in format YYYY-MM-DD\n\nage(\"2004-11-17\")\n\n[1] \"You are about 243.4 months old\"\n\n\n\n\n\n\nAnswer 2\n\n# alternative using interactive input & difftime()\ndf &lt;- function(x) {\n    if (missing(x)) {\n        # check for input date if missing, we can ask the\n        # user for input\n        x &lt;- readline(prompt = \"Introduce your birthdate in the format YYYY-MM-DD: \")\n    }\n    if (!is.na(as.Date(as.character(x), format = \"%Y-%m-%d\"))) {\n        df &lt;- difftime(Sys.Date(), as.Date(x, format = \"%Y-%m-%d\"))\n        print(paste0(\"If you were born on \", x, \", you are about \",\n            round(as.numeric(df)/30, 1), \" months old.\"))\n    } else {\n        stop(\"The input date must be in format YYYY-MM-DD\")\n    }\n}\ndf(\"2004-11-17\")\n\n[1] \"If you were born on 2004-11-17, you are about 243.4 months old.\"\n\ndf(18)\n\nError in df(18): The input date must be in format YYYY-MM-DD\n\ndf()\n\nIntroduce your birthdate in the format YYYY-MM-DD: \n\n\nError in df(): The input date must be in format YYYY-MM-DD"
  },
  {
    "objectID": "r5.html#quick-exercise-iv",
    "href": "r5.html#quick-exercise-iv",
    "title": "R5: Base plots in R",
    "section": "2.6 Quick exercise (IV)",
    "text": "2.6 Quick exercise (IV)\nNow let’s think again in our E. coli genomes. How would you add more layers of information to the plot, like labels of specific points?\n\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n# point label, but only some 'selected' points\n\n# step1: create a vector with the selection\nselected &lt;- c(7, 17, 18)\n# step2: make a plot\nplot(coli_genomes$contigs1kb ~ coli_genomes$Contigs, pch = 19,\n    col = rgb(1, 0, 0, 0.5), xlab = \"Contigs\", ylab = \"Contigs &gt; 1kb\")\n\n# step 3: add the labels as a text layer note that you can\n# use the formula for the text coordinates\ntext(coli_genomes$contigs1kb[selected] ~ coli_genomes$Contigs[selected],\n    labels = coli_genomes$Strain[selected], cex = 0.6, pos = 4,\n    col = \"red\")\n\n\n\n\n\n\n\n\n\nYou can look for more custom options because there are a lot. I also suggest looking at the function identify(), which allows the quick interactive identification and labeling of selected points.\nNow, we repeat the scatterplot above of contigs1kb vs. Contigs, but instead of labels, coloring the points by Source as in the plot below. Finally, use the function legend() to add a legend.\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n# Think in a way to use the variable 'Source' and\n# conditionally recode it as colors Then, a recursive way\n# will help you to generate a vector to color all the\n# elements in the plot\n\n\n\n\n\nAnswer\n\n# recode the source as color step 1: define an empty vector\n# (not required here, but better to do it)\ncolorines &lt;- c()\n# step 2: use a loop to run over all the source vector\nfor (i in 1:nrow(coli_genomes)) {\n    # step 3: use switch() to recode the sources as colors\n    # note that Source is a factor but we need to treat it\n    # as a character here\n    colorines[i] &lt;- switch(as.character(coli_genomes$Source[i]),\n        Avian = rgb(1, 0, 0, 0.4), Human = rgb(0, 1, 0, 0.4),\n        Porcine = rgb(0, 0, 1, 0.4))\n}\n# plot\nplot(coli_genomes$contigs1kb ~ coli_genomes$Contigs, pch = 21,\n    bg = colorines, xlab = \"Contigs\", ylab = \"Contigs &gt; 1kb\")\n\n# legend the function unique() is important here, can you\n# figure out why?\nlegend(100, 200, legend = unique(coli_genomes$Source), fill = unique(colorines))"
  },
  {
    "objectID": "r5.html#add-more-elements",
    "href": "r5.html#add-more-elements",
    "title": "R5: Base plots in R",
    "section": "2.1 Add more elements",
    "text": "2.1 Add more elements\nAs you may know, the R function cor() calculate the correlation coefficient between two or more vectors and cor.test() allow us to quickly perform a correlation test between two variables to know if the correlation is statistically significant. However, a quick plot can be also very useful.\nIn our example dataframe, we have some features of a list of E. coli isolates and the basic stats of the genome sequencing. Regarding this data, do you think that the number of contigs &gt; 1kb in the genome assemblies (contigs1kb) correlates with the total number of contigs (Contigs), or the average contig length (average_contig)? Let’s check the data using simple plots with the plot() function. Since we are going to make two plots, we will layout them together using a par option.\n\n\n\n\n\n\nPlot parameters set up with par\n\n\n\nNote that par can be used to set many graphical parameters. These options are stored in a list R object, that you can get using par() (with no arguments).\n\n\n\n# first we can save original settings (optional)\noldpar &lt;- par()\npar(mfrow = c(1, 2))  #graph area in two columns\n\n# correlation plots\nplot(coli_genomes$contigs1kb ~ coli_genomes$Contigs, xlab = \"Contigs\",\n    ylab = \"Contigs &gt; 1kb\")\n\nplot(coli_genomes$contigs1kb ~ coli_genomes$average_contig, xlab = \"Average contig\",\n    ylab = \"Contigs &gt; 1kb\")\n\n\n\n\n\n\n\n\nWhat do you think? Now that we have seen the linear relationship pictorially in the scatter plot, we should plot the linear regression line and analyze the correlation.\n\n\n\n\n\n\nREMINDER - Linear model and correlation in R\n\n\n\nLinear regression analysis is used to predict the value of a variable based on the value of another variable. In R, you can calculate the linear regression equation with the function lm(). The lm() function takes in two main arguments, (1) Formula and (2) Data. The data is typically a data.frame and the formula is a object of class formula (with a diacritical mark like that over the Spanish letter ñ, ~). But the most common convention is to write out the formula directly in place of the argument as written below.\nThen, to fully check the correlation (and avoid situations like in the Anscombe’s quartet above, you must also remember that correlation coefficient can be calculated with the function cor().\n\n\nLet’s obtain and plot the linear model:\n\n# linear model\nmodelito &lt;- lm(coli_genomes$contigs1kb ~ coli_genomes$Contigs)\nsummary(modelito)  #is the linear model significant???\n\n\nCall:\nlm(formula = coli_genomes$contigs1kb ~ coli_genomes$Contigs)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-53.475  -8.646  -3.300  14.840  55.947 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          -6.36290   12.90558  -0.493    0.627    \ncoli_genomes$Contigs  0.50755    0.06634   7.651 2.31e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 22.55 on 20 degrees of freedom\nMultiple R-squared:  0.7453,    Adjusted R-squared:  0.7326 \nF-statistic: 58.54 on 1 and 20 DF,  p-value: 2.306e-07\n\n\n\n\n\n\n\n\nTip\n\n\n\nRemember that the results of lm(), cor.test(), and all other tests, are R objects (usually lists) than can be used to retrieve the results or plot the values.\n\n\n\n# set par (we need to set up the par in every code chunk)\npar(mfrow = c(1, 2))\n# correlation plots with line\nplot(coli_genomes$contigs1kb ~ coli_genomes$Contigs, xlab = \"Contigs\",\n    ylab = \"Contigs &gt; 1kb\")\nabline(modelito, col = \"red\")\n# we can include the lm() in the plot, without calculating\n# it before\nplot(coli_genomes$contigs1kb ~ coli_genomes$average_contig, xlab = \"Average contig\",\n    ylab = \"Contigs &gt; 1kb\")\nabline(lm(coli_genomes$contigs1kb ~ coli_genomes$average_contig),\n    col = \"red\")\n\n\n\n\n\n\n\n# now we will check with a cor.test and add some text to\n# the plot\n(test1 &lt;- cor.test(coli_genomes$contigs1kb, coli_genomes$Contigs))\n\n\n    Pearson's product-moment correlation\n\ndata:  coli_genomes$contigs1kb and coli_genomes$Contigs\nt = 7.651, df = 20, p-value = 2.306e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.6945248 0.9420476\nsample estimates:\n     cor \n0.863334 \n\n(test2 &lt;- cor.test(coli_genomes$contigs1kb, coli_genomes$average_contig))\n\n\n    Pearson's product-moment correlation\n\ndata:  coli_genomes$contigs1kb and coli_genomes$average_contig\nt = -7.8453, df = 20, p-value = 1.574e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.9444427 -0.7055990\nsample estimates:\n       cor \n-0.8687624 \n\nstr(test1)\n\nList of 9\n $ statistic  : Named num 7.65\n  ..- attr(*, \"names\")= chr \"t\"\n $ parameter  : Named int 20\n  ..- attr(*, \"names\")= chr \"df\"\n $ p.value    : num 2.31e-07\n $ estimate   : Named num 0.863\n  ..- attr(*, \"names\")= chr \"cor\"\n $ null.value : Named num 0\n  ..- attr(*, \"names\")= chr \"correlation\"\n $ alternative: chr \"two.sided\"\n $ method     : chr \"Pearson's product-moment correlation\"\n $ data.name  : chr \"coli_genomes$contigs1kb and coli_genomes$Contigs\"\n $ conf.int   : num [1:2] 0.695 0.942\n  ..- attr(*, \"conf.level\")= num 0.95\n - attr(*, \"class\")= chr \"htest\"\n\n\n\nplot(coli_genomes$contigs1kb ~ coli_genomes$Contigs, xlab = \"Contigs\",\n    ylab = \"Contigs &gt; 1kb\")\nabline(lm(coli_genomes$contigs1kb ~ coli_genomes$Contigs), col = \"red\")\n# now add the text in a defined position\ntext(200, 200, paste(\"Pearson r2=\", round(test1$estimate, 2)))\n\n\n\n\n\n\n\nplot(coli_genomes$contigs1kb ~ coli_genomes$average_contig, xlab = \"Average contig\",\n    ylab = \"Contigs &gt; 1kb\")\nabline(lm(coli_genomes$contigs1kb ~ coli_genomes$average_contig),\n    col = \"red\")\ntext(40000, 200, paste(\"Pearson r2=\", round(test2$estimate, 2)))\n\n\n\n\n\n\n\n\nIn a step further you can check multiple correlations in a single plot.\n\n# oh wait! why only one-vs-one?\nplot(coli_genomes[, c(\"VF\", \"Plasmids\", \"kmer\", \"Contigs\", \"N50\",\n    \"longest.contig..bp.\", \"Assembly_length\", \"contigs1kb\", \"average_contig\")],\n    main = \"Multiple Correlation plot\")\n\n\n\n\n\n\n\n\nNow, you have a quick info about possible variable correlations."
  },
  {
    "objectID": "r4.html#exercise-r",
    "href": "r4.html#exercise-r",
    "title": "R4: Functions in R",
    "section": "",
    "text": "Calculate the average of all of the integers from 1 to 10.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAs you already know, R is a ‘GNU Software’ with a GPL license. As a a freely available language it has a great community of users from diverse background and interests. This community has developed a myriad of applications for R, called R Packages. The idea behind R packages is that the chances are that someone has already solved a problem that you’re working on, and you can benefit from their work by downloading their package.\n\n\n\n\n\n\nImportant\n\n\n\nPackages are the basic units of reproducible R code. They contain reusable R functions, the documentation that describes how to use them (help), and some sample data to run tests.\nWith RStudio you can create your own packages to automate very frequent analyses: https://support.posit.co/hc/en-us/articles/200486488-Developing-Packages-with-the-RStudio-IDE\n\n\nPackages can be installed from one of the public R repositories. In this course we will mainly use two R repos, CRAN and Bioconductor. CRAN stands for “the Comprehensive R Archive Network”, and contains a large selection of packages that can be used free of charge. You can find a complete list of CRAN packages here and a list sorted by topic here.\nAs we will see in more detail later in the Lesson R9, Bioconductor is a repository of software for bioinformatics or computational biology applications. As of August 2024, the CRAN package repository contains 21,127 packages, while Bioconductor version 3.19 contains 2,300 packages.\nR packages in CRAN and Bioconductor are reviewed, although they may stop working after R updates. Also, you can often find new (unverified) packages on GitHub, GitLab, Bitbucket or in other repositories. You can install these non-guaranteed packages with the devtools package (on your own responsability)."
  },
  {
    "objectID": "r4.html#footnotes",
    "href": "r4.html#footnotes",
    "title": "R4: Functions in R",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nCheck proposed answers in the repo: https://github.com/r4biochemists/r4biochemists.github.io/tree/main/answers2exercises↩︎"
  },
  {
    "objectID": "r5.html#footnotes",
    "href": "r5.html#footnotes",
    "title": "R5: Base plots in R",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nCheck proposed answers in the repo: https://github.com/r4biochemists/r4biochemists.github.io/tree/main/answers2exercises↩︎"
  },
  {
    "objectID": "r6.html#footnotes",
    "href": "r6.html#footnotes",
    "title": "R6: Advanced data management",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nCheck proposed answers in the repo: https://github.com/r4biochemists/r4biochemists.github.io/tree/main/answers2exercises↩︎"
  }
]