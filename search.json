[
  {
    "objectID": "r3.html#explore-a-dataframe",
    "href": "r3.html#explore-a-dataframe",
    "title": "R3: Read and write data in R",
    "section": "5.1 Explore a dataframe",
    "text": "5.1 Explore a dataframe\nAs you can see in the R help, the function read.table() has several default options as FALSE, like header=FALSE. When you have a spreadsheet export file, i.e.Â having a table where the fields are divided by commas in place of spaces, you can use read.csv() in place of read.table(). For Spaniards, there is also read.csv2(), which uses a comma for the decimal point and a semicolon for the separator. The latter functions are wrappers of read.table() with custom default options.\n\n# Note differences between read.table(), read.csv() and\n# read.csv2()\ncoli_genomes &lt;- read.table(file = \"data/coli_genomes.csv\")\n\nError in scan(file = file, what = what, sep = sep, quote = quote, dec = dec, : line 2 did not have 11 elements\n\nhead(coli_genomes)\n\nError in eval(expr, envir, enclos): object 'coli_genomes' not found\n\ncoli_genomes &lt;- read.table(file = \"data/coli_genomes.csv\", sep = \";\",\n    dec = \".\", header = TRUE)\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes.csv\")\nhead(coli_genomes)\n\n  Strain.Biosample.Year.of.isolation.Source.Phylogroup.Serotype.Clonotype.Sequence.Type.VF.No..Plasmids.kmer.Contigs.N50.longest.contig..bp..total.assembled.bp.contigs...1kb\n1                                                                               LREC237;SAMN14278613;NA;Human ;D;ONT:H28;CH23-331;ST524;18;3;117;223;272287;662555;5341632;74\n2                                                                               LREC239;SAMN14278614;2010;Human ;C;O153:H19;CH4-25;ST88;14;3;117;159;323172;760527;5415613;57\n3                                                                              LREC240;SAMN14278615;2008;Human ;B1;O76:H30;CH29-38;ST156;10;2;89;114;270767;738861;4875343;47\n4                                                                                  LREC241;SAMN14278616;NA;Human;A;O78:H11;CH11-41;ST48;5;3;117;212;112160;285056;5167401;101\n5                                                                               LREC242;SAMN14278617;2011;Porcine ;A;ONT:HNM;CH7-54;ST746;5;9;89;320;45936;128053;4858138;212\n6                                                                               LREC243;SAMN14278618;2007;Porcine ;A;O9:H37;CH7-31;ST3011;7;3;93;158;106897;369508;4638334;93\n\ncoli_genomes &lt;- read.csv(file = \"data/coli_genomes.csv\", sep = \";\")\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\ncoli_genomes &lt;- read.csv2(file = \"data/coli_genomes.csv\")\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\n# read some data\nhead(coli_genomes)\n\n   Strain    Biosample Year.of.isolation   Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA   Human           D  ONT:H28  CH23-331\n2 LREC239 SAMN14278614              2010   Human           C O153:H19    CH4-25\n3 LREC240 SAMN14278615              2008   Human          B1  O76:H30   CH29-38\n4 LREC241 SAMN14278616                NA    Human          A  O78:H11   CH11-41\n5 LREC242 SAMN14278617              2011 Porcine           A  ONT:HNM    CH7-54\n6 LREC243 SAMN14278618              2007 Porcine           A   O9:H37    CH7-31\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n2          ST88 14            3  117     159 323172              760527\n3         ST156 10            2   89     114 270767              738861\n4          ST48  5            3  117     212 112160              285056\n5         ST746  5            9   89     320  45936              128053\n6        ST3011  7            3   93     158 106897              369508\n  total.assembled.bp contigs...1kb\n1            5341632            74\n2            5415613            57\n3            4875343            47\n4            5167401           101\n5            4858138           212\n6            4638334            93\n\ntail(coli_genomes, n = 2)\n\n    Strain    Biosample Year.of.isolation Source Phylogroup Serotype Clonotype\n24 LREC261 SAMN14278636              2016 Human           A  O98:H26   CH27-23\n25 LREC262 SAMN14278637              2012 Human          B1  O66:H10    CH4-32\n   Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n24        ST8233  2            4   89     114 187945              537848\n25        ST1049  4            2  113      94 325747              822206\n   total.assembled.bp contigs...1kb\n24            4821342            53\n25            4839344            32\n\ncoli_genomes[1, ]\n\n   Strain    Biosample Year.of.isolation Source Phylogroup Serotype Clonotype\n1 LREC237 SAMN14278613                NA Human           D  ONT:H28  CH23-331\n  Sequence.Type VF No..Plasmids kmer Contigs    N50 longest.contig..bp.\n1         ST524 18            3  117     223 272287              662555\n  total.assembled.bp contigs...1kb\n1            5341632            74\n\ncoli_genomes[, 1]\n\n [1] \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" \"LREC242\" \"LREC243\" \"LREC244\"\n [8] \"LREC245\" \"LREC246\" \"LREC247\" \"LREC248\" \"LREC249\" \"LREC250\" \"LREC251\"\n[15] \"LREC252\" \"LREC253\" \"LREC254\" \"LREC255\" \"LREC256\" \"LREC257\" \"LREC258\"\n[22] \"LREC259\" \"LREC260\" \"LREC261\" \"LREC262\"\n\ncoli_genomes[1:6, 2:4]\n\n     Biosample Year.of.isolation   Source\n1 SAMN14278613                NA   Human \n2 SAMN14278614              2010   Human \n3 SAMN14278615              2008   Human \n4 SAMN14278616                NA    Human\n5 SAMN14278617              2011 Porcine \n6 SAMN14278618              2007 Porcine \n\n# explore the dataframe structure\ndim(coli_genomes)\n\n[1] 25 16\n\nlength(coli_genomes)\n\n[1] 16\n\nncol(coli_genomes)\n\n[1] 16\n\nnrow(coli_genomes)\n\n[1] 25\n\n# dataframe estructure in one line\nstr(coli_genomes)\n\n'data.frame':   25 obs. of  16 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Year.of.isolation  : int  NA 2010 2008 NA 2011 2007 2006 2006 2010 2013 ...\n $ Source             : chr  \"Human \" \"Human \" \"Human \" \"Human\" ...\n $ Phylogroup         : chr  \"D\" \"C\" \"B1\" \"A\" ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 10 22 ...\n $ No..Plasmids       : int  3 3 2 3 9 3 7 7 1 4 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 113 113 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 131 215 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 326769 248158 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 451887 504233 ...\n $ total.assembled.bp : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5173794 5364777 ...\n $ contigs...1kb      : int  74 57 47 101 212 93 155 114 56 76 ...\n\n# type of data in each variable\ntypeof(coli_genomes$Strain)\n\n[1] \"character\"\n\ntypeof(coli_genomes[, 2])\n\n[1] \"character\"\n\ntypeof(coli_genomes[, 9])\n\n[1] \"integer\"\n\n# col and row names\nnames(coli_genomes)\n\n [1] \"Strain\"              \"Biosample\"           \"Year.of.isolation\"  \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"No..Plasmids\"        \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"total.assembled.bp\" \n[16] \"contigs...1kb\"      \n\ncolnames(coli_genomes)\n\n [1] \"Strain\"              \"Biosample\"           \"Year.of.isolation\"  \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"No..Plasmids\"        \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"total.assembled.bp\" \n[16] \"contigs...1kb\"      \n\nrownames(coli_genomes)\n\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\"\n[16] \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\"\n\nnames(coli_genomes[3]) &lt;- \"Year\"\nnames(coli_genomes)[3] &lt;- \"Year\"\ncolnames(coli_genomes[3]) &lt;- \"Year\"\n\nSome of the columns include âchrâ data that may be actually a categorical variable, so we can code them as factor. Using the expression as.factor() you can check whether the data would correspond to a text or a categorical variable.\n\ncoli_genomes$Source &lt;- as.factor(coli_genomes$Source)\ncoli_genomes$Phylogroup &lt;- as.factor(coli_genomes$Phylogroup)\n\nstr(coli_genomes)  #dataframe estructure updated\n\n'data.frame':   25 obs. of  16 variables:\n $ Strain             : chr  \"LREC237\" \"LREC239\" \"LREC240\" \"LREC241\" ...\n $ Biosample          : chr  \"SAMN14278613\" \"SAMN14278614\" \"SAMN14278615\" \"SAMN14278616\" ...\n $ Year               : int  NA 2010 2008 NA 2011 2007 2006 2006 2010 2013 ...\n $ Source             : Factor w/ 4 levels \"Avian \",\"Human\",..: 3 3 3 2 4 4 4 4 4 3 ...\n $ Phylogroup         : Factor w/ 4 levels \"A\",\"B1\",\"C\",\"D\": 4 3 2 1 1 1 1 1 3 4 ...\n $ Serotype           : chr  \"ONT:H28\" \"O153:H19\" \"O76:H30\" \"O78:H11\" ...\n $ Clonotype          : chr  \"CH23-331\" \"CH4-25\" \"CH29-38\" \"CH11-41\" ...\n $ Sequence.Type      : chr  \"ST524\" \"ST88\" \"ST156\" \"ST48\" ...\n $ VF                 : int  18 14 10 5 5 7 4 2 10 22 ...\n $ No..Plasmids       : int  3 3 2 3 9 3 7 7 1 4 ...\n $ kmer               : int  117 117 89 117 89 93 115 115 113 113 ...\n $ Contigs            : int  223 159 114 212 320 158 277 203 131 215 ...\n $ N50                : int  272287 323172 270767 112160 45936 106897 89185 94368 326769 248158 ...\n $ longest.contig..bp.: int  662555 760527 738861 285056 128053 369508 281444 280268 451887 504233 ...\n $ total.assembled.bp : int  5341632 5415613 4875343 5167401 4858138 4638334 5406295 4796593 5173794 5364777 ...\n $ contigs...1kb      : int  74 57 47 101 212 93 155 114 56 76 ...\n\n\nHow many levels are there in Source?? It is not uncommon to see some mistake in our data, usually made when the data were recorded, for example a space may have been inserted before a data value. By default this white space will be kept in the R environment, such that âHumanâ will be recognized as a different value than âHumanâ. In order to avoid this type of error, we can use the strip.white argument.\n\nunique(coli_genomes$Source)\n\n[1] Human    Human    Porcine  Avian   \nLevels: Avian  Human Human  Porcine \n\ntable(coli_genomes$Source)\n\n\n  Avian     Human   Human  Porcine  \n       3        1       16        5 \n\ncoli_genomes &lt;- read.csv2(file = \"data/coli_genomes.csv\", strip.white = TRUE)\ncoli_genomes$Source &lt;- as.factor(coli_genomes$Source)\ncoli_genomes$Phylogroup &lt;- as.factor(coli_genomes$Phylogroup)\n\nunique(coli_genomes$Source)\n\n[1] Human   Porcine Avian  \nLevels: Avian Human Porcine\n\n\nWe can also rename some variables to use more easy names.\n\nnames(coli_genomes)  #see all variable names\n\n [1] \"Strain\"              \"Biosample\"           \"Year.of.isolation\"  \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"No..Plasmids\"        \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"total.assembled.bp\" \n[16] \"contigs...1kb\"      \n\n# rename variables\nnames(coli_genomes)[3] &lt;- \"Year\"\nnames(coli_genomes)[10] &lt;- \"Plasmids\"\nnames(coli_genomes)[15] &lt;- \"Assembly_length\"\nnames(coli_genomes)[16] &lt;- \"contigs1kb\"\n# check\nnames(coli_genomes)\n\n [1] \"Strain\"              \"Biosample\"           \"Year\"               \n [4] \"Source\"              \"Phylogroup\"          \"Serotype\"           \n [7] \"Clonotype\"           \"Sequence.Type\"       \"VF\"                 \n[10] \"Plasmids\"            \"kmer\"                \"Contigs\"            \n[13] \"N50\"                 \"longest.contig..bp.\" \"Assembly_length\"    \n[16] \"contigs1kb\""
  },
  {
    "objectID": "r3.html#change-and-add-variables",
    "href": "r3.html#change-and-add-variables",
    "title": "R3: Read and write data in R",
    "section": "5.2 Change and add variables",
    "text": "5.2 Change and add variables\nWe are going to simplify our dataframe by dropping variables:\n\ncoli_genomes &lt;- coli_genomes[-c(9:11), ]\n# this can be also used to remove rows\ncoli_genomes[, -1]\n\n      Biosample Year  Source Phylogroup Serotype  Clonotype Sequence.Type VF\n1  SAMN14278613   NA   Human          D  ONT:H28   CH23-331         ST524 18\n2  SAMN14278614 2010   Human          C O153:H19     CH4-25          ST88 14\n3  SAMN14278615 2008   Human         B1  O76:H30    CH29-38         ST156 10\n4  SAMN14278616   NA   Human          A  O78:H11    CH11-41          ST48  5\n5  SAMN14278617 2011 Porcine          A  ONT:HNM     CH7-54         ST746  5\n6  SAMN14278618 2007 Porcine          A   O9:H37     CH7-31        ST3011  7\n7  SAMN14278619 2006 Porcine          A   O2:H32    CH11-23          ST10  4\n8  SAMN14278620 2006 Porcine          A  ONT:H45    C11-398       ST10888  2\n12 SAMN14278624 2013   Human          D O145:H28   CH23-331          ST32 22\n13 SAMN14278625 2013   Human          D O145:H28   CH23-331         ST137 22\n14 SAMN14278626 2013   Human          D O145:H28   CH23-331          ST32 20\n15 SAMN14278627 2013   Human          A  ONT:H37     C11-54          ST48  1\n16 SAMN14278628 2013   Avian          A  ONT:H19    CH94-23         ST347  2\n17 SAMN14278629 2011   Avian         B1 O142:H30     C41-35         ST359  9\n18 SAMN14278630 2005   Avian          C  O78:H19     CH4-27          ST88 11\n19 SAMN14278631 2012   Human          C   O8:H19     CH4-54          ST88 14\n20 SAMN14278632 2012   Human          C   O9:H19     CH4-27          ST88 14\n21 SAMN14278633 2012   Human          A    O9:H4     CH7-34          ST46  8\n22 SAMN14278634 2015   Human          C   O9:H19 CH4like-27       ST10890 13\n23 SAMN14278635 2012   Human          A  ONT:H33    CH11-54          ST10  2\n24 SAMN14278636 2016   Human          A  O98:H26    CH27-23        ST8233  2\n25 SAMN14278637 2012   Human         B1  O66:H10     CH4-32        ST1049  4\n   Plasmids kmer Contigs    N50 longest.contig..bp. Assembly_length contigs1kb\n1         3  117     223 272287              662555         5341632         74\n2         3  117     159 323172              760527         5415613         57\n3         2   89     114 270767              738861         4875343         47\n4         3  117     212 112160              285056         5167401        101\n5         9   89     320  45936              128053         4858138        212\n6         3   93     158 106897              369508         4638334         93\n7         7  115     277  89185              281444         5406295        155\n8         7  115     203  94368              280268         4796593        114\n12        1  115     376 200150              424527         5389075        131\n13        3  111     205 281589              617142         5340478         78\n14        1  113     206 182651              412836         5276782         95\n15        0  113     140 105396              272304         4507328         78\n16        0  117     134 110661              497785         4664768         77\n17        4  113     102 240847              460510         4992565         42\n18        4  113     108 405376             1190696         5196698         38\n19        2  113     108 281822             1140163         5252065         43\n20        4   91     224 140521              284241         5085107        110\n21        4   85     204  86565              300086         4915667        121\n22        3  113     171 326962              749412         5200701         77\n23        5  117     120 228491              576949         4881205         48\n24        4   89     114 187945              537848         4821342         53\n25        2  113      94 325747              822206         4839344         32\n\n\nWe know the âAssembly lengthâ and the number of âContigsâ, but we would like to represent the average contig length.\n\ncoli_genomes$average_contig &lt;- coli_genomes$Assembly_length/coli_genomes$Contigs"
  },
  {
    "objectID": "r3.html#dealing-with-nas",
    "href": "r3.html#dealing-with-nas",
    "title": "R3: Read and write data in R",
    "section": "5.3 Dealing with NAs",
    "text": "5.3 Dealing with NAs\nIt is very easy to calculate statistics of one variable. Imagine we want to know the average year of sample isolation.\n\nmean(coli_genomes$Year.of.isolation)\n\nWarning in mean.default(coli_genomes$Year.of.isolation): argument is not\nnumeric or logical: returning NA\n\n\n[1] NA\n\n\nYes, that error means that there are some NA values and mean cannot be calculated. We can check that and omit the NAs.\n\n# check if there is any NA\nis.na(coli_genomes)\n\n   Strain Biosample  Year Source Phylogroup Serotype Clonotype Sequence.Type\n1   FALSE     FALSE  TRUE  FALSE      FALSE    FALSE     FALSE         FALSE\n2   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n3   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n4   FALSE     FALSE  TRUE  FALSE      FALSE    FALSE     FALSE         FALSE\n5   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n6   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n7   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n8   FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n12  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n13  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n14  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n15  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n16  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n17  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n18  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n19  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n20  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n21  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n22  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n23  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n24  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n25  FALSE     FALSE FALSE  FALSE      FALSE    FALSE     FALSE         FALSE\n      VF Plasmids  kmer Contigs   N50 longest.contig..bp. Assembly_length\n1  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n2  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n3  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n4  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n5  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n6  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n7  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n8  FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n12 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n13 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n14 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n15 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n16 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n17 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n18 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n19 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n20 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n21 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n22 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n23 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n24 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n25 FALSE    FALSE FALSE   FALSE FALSE               FALSE           FALSE\n   contigs1kb average_contig\n1       FALSE          FALSE\n2       FALSE          FALSE\n3       FALSE          FALSE\n4       FALSE          FALSE\n5       FALSE          FALSE\n6       FALSE          FALSE\n7       FALSE          FALSE\n8       FALSE          FALSE\n12      FALSE          FALSE\n13      FALSE          FALSE\n14      FALSE          FALSE\n15      FALSE          FALSE\n16      FALSE          FALSE\n17      FALSE          FALSE\n18      FALSE          FALSE\n19      FALSE          FALSE\n20      FALSE          FALSE\n21      FALSE          FALSE\n22      FALSE          FALSE\n23      FALSE          FALSE\n24      FALSE          FALSE\n25      FALSE          FALSE\n\n# na.rm=TRUE will omit the NAs for this function\nmean(coli_genomes$Year.of.isolation, na.rm = TRUE)\n\nWarning in mean.default(coli_genomes$Year.of.isolation, na.rm = TRUE): argument\nis not numeric or logical: returning NA\n\n\n[1] NA\n\n\nWhat if we want to remove observations with an NA from a dataset?\n\ncoli_genomes2 &lt;- na.omit(coli_genomes)\n\n\nFinally, we are going to save our new dataset for future examples.\n\n\nwrite.csv2(coli_genomes, \"data/coli_genomes_renamed.csv\", row.names = FALSE)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "HPBBM2023",
    "section": "",
    "text": "There are only two kinds of programming languages: the ones people complain about and the ones nobody uses. âBjarne Stroustrup"
  },
  {
    "objectID": "index.html#wellcome-disclaimer",
    "href": "index.html#wellcome-disclaimer",
    "title": "HPBBM2023",
    "section": "1 Wellcome & Disclaimer",
    "text": "1 Wellcome & Disclaimer\n\n\n\n\n\n\nUnder construction\n\n\n\n\n\n\nThis site contains the materials for the Coding tools for Biochemistry & Molecular Biology (Herramientas de ProgramaciÃ³n para BioquÃ­mica y BiologÃ­a Molecular, a.k.a. HPBBM) course of fall 2023 in the Bachelorâs Degree in Biochemistry @UAM (Universidad AutÃ³noma de Madrid, Spain). Materials from the 2022 edition are available also [here](https://mredrejo.github.io/HPBBM2022/).\nCourse Syllabus can be checked at UAM site and a PDF version is available here. Materials from last year are available in the HPBBM2022 site and GitHub repo. The course contains a first block of lessons on Python programming (Lessons 1-7) and a Python-vs-R introductory lessons (Lessons R1 & R2) that are not included here. Detailed academic information about the course contents, dates, and assessment only can be found at the UAM Moodle site.\nEach lesson contains embedded interactive exercises (generated with learnr y/o webexercises packages), and a final section of R exercises, some of them from freely available online solved exercises and others that I created. The answers to the latter are not available online, but Iâll be glad to provide them upon request.\n\n\n\n\nLogo generated with hexSticker package. See r_sticker.R script in the course repo.\n\n\n\nThis site is on a GitHub repo, containing the source Quarto files and the data used in the examples and exercises. The icon  on the top-right corner in all the site pages will allow you to download the repo data folder (link generated with DownGit). Note tha this folder can be updated during the course.\nAll this material is open access and it is shared under CC BY-NC license.\nThis is a draft version of this site, but it is intended to be expanded and corrected throughout the next weeks and new versions will be available the following years. Any feedback, help, or suggestions will be very warmly welcome.\nAlso, it is likely that you find some mistypes or even some big mistakes throughout these course materials. I, and the future students, will appreciate it if you let me know about anything that could be corrected or just improved. You can reach me by email."
  },
  {
    "objectID": "index.html#bibliography-and-resources",
    "href": "index.html#bibliography-and-resources",
    "title": "HPBBM2023",
    "section": "2 Bibliography and Resources",
    "text": "2 Bibliography and Resources\nEach lesson contains its own specific references, but I wanted to highlight here some curated general open access and open source resources to introduce yourself into R and R Studio.\n\nGrolemund, G. Hands-on Programming in R.\nPeng, R. D. R Programming for Data Science.\nCoulatti, R. I. R Crash Course for Biologist.\nChang, W. R. R Graphics Cookbook.\nDoyle, M., Chung, J. & Perreau V. Introduction to R for Biologists.\nLearn R by example"
  },
  {
    "objectID": "index.html#contents",
    "href": "index.html#contents",
    "title": "HPBBM2023",
    "section": "3 Contents",
    "text": "3 Contents\n\n3.1 Lesson R3: Data input and output in R\n\n\n3.2 Lesson R4: Write your own functions\n\n\n3.3 Lesson R5: Plots\n\n\n3.4 Lesson R6: Data management\n\n\n3.5 Lesson R7: R-projects and R-markdown for reproducible data analysis\n\n\n3.6 Lesson R8: Advanced data plotting with ggplot\n\n\n3.7 Lesson R9: Applications for Molecular Biology"
  },
  {
    "objectID": "r3.html",
    "href": "r3.html",
    "title": "R3: Read and write data in R",
    "section": "",
    "text": "This site contains the materials for the Coding tools for Biochemistry & Molecular Biology (Herramientas de ProgramaciÃ³n para BioquÃ­mica y BiologÃ­a Molecular) course of fall 2022 in the Bachelorâs Degree in Biochemistry @UAM. This materials are the basis for GitHub-pages-based website that can be accessed here. Detailed academic information about the course contents, dates and assessment only can be found at the UAM Moodle site.\nAll this material is open access and it is shared under CC BY-NC license."
  },
  {
    "objectID": "example2.html",
    "href": "example2.html",
    "title": "Iconify Quarto Extension",
    "section": "",
    "text": "This extension allows you to use Iconify icons in your Quarto HTML documents. It provides an {{&lt; iconify &gt;}} shortcode:\n\nMandatory &lt;icon-name&gt;:\n{{&lt; iconify &lt;icon-name&gt; &gt;}}\nOptional &lt;set&gt; (default is fluent-emoji) &lt;size=...&gt;, &lt;width=...&gt;, &lt;height=...&gt;, &lt;flip=...&gt;, and &lt;rotate=...&gt;:\n{{&lt; iconify &lt;set&gt; &lt;icon-name&gt; &lt;size=...&gt; &lt;width=...&gt; &lt;height=...&gt; &lt;flip=...&gt; &lt;rotate=...&gt; &gt;}}\nIf &lt;size=...&gt; is defined, &lt;width=...&gt; and &lt;height=...&gt; are not used.\nSee https://docs.iconify.design/iconify-icon/ for more details.\n\nFor example:\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; iconify exploding-head &gt;}}\n\n\n\n{{&lt; iconify exploding-head size=2xl &gt;}}\n\n\n\n{{&lt; iconify exploding-head size=5x rotate=180deg &gt;}}\n\n\n\n{{&lt; iconify exploding-head size=Huge &gt;}}\n\n\n\n{{&lt; iconify fluent-emoji-high-contrast 1st-place-medal &gt;}}\n\n\n\n{{&lt; iconify twemoji 1st-place-medal &gt;}}\n\n\n\n{{&lt; iconify line-md loading-alt-loop &gt;}}\n\n\n\n{{&lt; iconify fa6-brands apple width=50px height=10px rotate=90deg flip=vertical &gt;}}"
  },
  {
    "objectID": "example.html",
    "href": "example.html",
    "title": "bsicons Example",
    "section": "",
    "text": "cloud"
  },
  {
    "objectID": "example.html#icon-color",
    "href": "example.html#icon-color",
    "title": "bsicons Example",
    "section": "icon color",
    "text": "icon color"
  },
  {
    "objectID": "example.html#icon-sizing",
    "href": "example.html#icon-sizing",
    "title": "bsicons Example",
    "section": "icon sizing",
    "text": "icon sizing"
  },
  {
    "objectID": "example.html#using-class",
    "href": "example.html#using-class",
    "title": "bsicons Example",
    "section": "using class",
    "text": "using class\nWe use the class styled to color all icons in red.\n{css, echo=TRUE} .styled {   color: red; }"
  },
  {
    "objectID": "example.html#thats-it",
    "href": "example.html#thats-it",
    "title": "bsicons Example",
    "section": "Thatâs it",
    "text": "Thatâs it"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "HPBBM2023",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee r_sticker.R script in the course repo.â©ï¸"
  }
]